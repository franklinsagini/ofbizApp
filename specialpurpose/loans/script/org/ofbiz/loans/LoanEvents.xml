<?xml version="1.0" encoding="UTF-8" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<!-- This file has been modified by VergeInteractive Limited. -->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods.xsd">   
    <!-- Start Creating Savings Account -->
    <simple-method method-name="createSavingsProduct" short-description="Create Savings Product" login-required="false">
    	<set field="parameters.roleTypeId" value="MEMBER"/>
    	<set field="require_email" value="false"/>
        <set field="require_phone" value="false"/>
        <set field="parameters.email" from-field="emailAddress"/>
        <!-- set field="parameters.email" value="jodonya@gmail.com"/-->
        <set field="email" from-field="emailAddress"/>
        <set field="productType" value="Account"/>
        <now-timestamp field="nowStamp"/>

        <!-- Create the Member -->
        <call-map-processor in-map-name="parameters" out-map-name="productContext">
            <simple-map-processor name="newSaccoProduct">
                <process field="name"><copy to-field="name"/><not-empty><fail-property resource="PartyUiLabels" property="PartyFirstNameMissing"/></not-empty></process>
                <process field="code"><copy to-field="code"/><not-empty><fail-property resource="PartyUiLabels" property="PartyLastNameMissingError"/></not-empty></process>
            </simple-map-processor>
        </call-map-processor>


        <!-- Create the Postal Address -->
        

        <!-- Create the Home Phone -->
        

        <!-- Create the Work Phone -->
       

        <!-- Create the email address -->
        

        <!-- create the PartyDataSource entry to track where this info came from... -->
        <!-- make-value entity-name="PartyDataSource" value-field="partyDataSource"/>
        <set field="partyDataSource.dataSourceId" value="ECOMMERCE_SITE"/>
        <set field="partyDataSource.fromDate" from-field="nowStamp"/>
        <set field="partyDataSource.isCreate" value="Y"/ -->
        <!-- get the visit from the session to get the visitId -->
        <session-to-field field="visit"/>
        <set from-field="visit.visitId" field="partyDataSource.visitId"/>
        
        <!-- set field="memberContext.email" from-field="email"/ -->
        

        <!-- now that everything is validated & setup, check to see if there are errors, then call the services -->
        <!-- check-errors/ -->
		<!--  set-service-fields service-name="createMember" map="parameters" to-map="memberContext"/ -->
		<set-service-fields service-name="createSavingsProduct" to-map="productContext" map="parameters"/>
        <call-service service-name="createSavingsProduct" in-map-name="productContext">
            <result-to-field result-name="saccoProductId" field="tempMap.saccoProductId"/>
           <result-to-field result-name="saccoProductId" field="saccoProductId"/>
        </call-service>

        <!-- now that we have the partyId, put it where it needs to go... -->
        <!--  set field="partyDataSource.partyId" from-field="tempMap.partyId"/ -->
        <set field="productContext.saccoProductId" from-field="tempMap.saccoProductId"/>
        <!-- set field="partyRoleContext.partyId" from-field="tempMap.partyId"/ -->
        

        

        <!--  create-value value-field="partyDataSource"/ -->
        <!-- call-service service-name="createPartyRole" in-map-name="partyRoleContext"/ -->


    </simple-method>
    <!-- End Creating Savings Account -->
    
    <!-- Start Creating Loan Account -->
    <simple-method method-name="createLoanProduct" short-description="Loan Product" login-required="false">
    	<set field="parameters.roleTypeId" value="MEMBER"/>
    	<set field="require_email" value="false"/>
        <set field="require_phone" value="false"/>
        <set field="parameters.email" from-field="emailAddress"/>
        <set field="productType" value="Loan"/>
        <!-- set field="parameters.email" value="jodonya@gmail.com"/-->
        <set field="email" from-field="emailAddress"/>
        <now-timestamp field="nowStamp"/>

        <!-- Create the Member -->
        <call-map-processor in-map-name="parameters" out-map-name="productContext">
            <simple-map-processor name="newSaccoProduct">
                <process field="name"><copy to-field="name"/><not-empty><fail-property resource="PartyUiLabels" property="PartyFirstNameMissing"/></not-empty></process>
                <process field="code"><copy to-field="code"/><not-empty><fail-property resource="PartyUiLabels" property="PartyLastNameMissingError"/></not-empty></process>
            </simple-map-processor>
        </call-map-processor>


        <!-- Create the Postal Address -->
        

        <!-- Create the Home Phone -->
        

        <!-- Create the Work Phone -->
       

        <!-- Create the email address -->
        

        <!-- create the PartyDataSource entry to track where this info came from... -->
        <!-- make-value entity-name="PartyDataSource" value-field="partyDataSource"/>
        <set field="partyDataSource.dataSourceId" value="ECOMMERCE_SITE"/>
        <set field="partyDataSource.fromDate" from-field="nowStamp"/>
        <set field="partyDataSource.isCreate" value="Y"/ -->
        <!-- get the visit from the session to get the visitId -->
        <session-to-field field="visit"/>
        <set from-field="visit.visitId" field="partyDataSource.visitId"/>
        
        <!-- set field="memberContext.email" from-field="email"/ -->
        

        <!-- now that everything is validated & setup, check to see if there are errors, then call the services -->
        <!-- check-errors/ -->
		<!--  set-service-fields service-name="createMember" map="parameters" to-map="memberContext"/ -->
		<set-service-fields service-name="createLoanProduct" to-map="productContext" map="parameters"/>
        <call-service service-name="createLoanProduct" in-map-name="productContext">
            <result-to-field result-name="saccoProductId" field="tempMap.saccoProductId"/>
           <result-to-field result-name="saccoProductId" field="saccoProductId"/>
        </call-service>

        <!-- now that we have the partyId, put it where it needs to go... -->
        <!--  set field="partyDataSource.partyId" from-field="tempMap.partyId"/ -->
        <set field="productContext.saccoProductId" from-field="tempMap.saccoProductId"/>
        <!-- set field="partyRoleContext.partyId" from-field="tempMap.partyId"/ -->
        

        

        <!--  create-value value-field="partyDataSource"/ -->
        <!-- call-service service-name="createPartyRole" in-map-name="partyRoleContext"/ -->


    </simple-method>
    <!-- End Creating Loan Account -->
    
    <!-- Start Create Loan Application -->
    <simple-method method-name="createLoanApplication" short-description="Loan Application" login-required="true">
    	<set field="parameters.roleTypeId" value="MEMBER"/>
    	<set field="require_email" value="false"/>
        <set field="require_phone" value="false"/>
        <set field="parameters.email" from-field="emailAddress"/>
        <set field="productType" value="Loan"/>
        <set field="email" from-field="emailAddress"/>
        <now-timestamp field="nowStamp"/>

        <!-- Create the Application -->
        <call-map-processor in-map-name="parameters" out-map-name="applicationContext">
            <simple-map-processor name="newLoanApplication">
                <process field="partyId"><copy to-field="partyId"/><not-empty><fail-property resource="PartyUiLabels" property="PartyFirstNameMissing"/></not-empty></process>
                <process field="loanProductId"><copy to-field="loanProductId"/><not-empty><fail-property resource="PartyUiLabels" property="PartyLastNameMissingError"/></not-empty></process>
            </simple-map-processor>
        </call-map-processor>
          <session-to-field field="visit"/>
        <set from-field="visit.visitId" field="partyDataSource.visitId"/>
        
          <!-- now that everything is validated & setup, check to see if there are errors, then call the services -->
        <!-- check-errors/ -->
		<!--  set-service-fields service-name="createMember" map="parameters" to-map="memberContext"/ -->
		<set-service-fields service-name="createLoanApplication" to-map="applicationContext" map="parameters"/>
		
		<if-empty field="parameters.loanApplicationId">
            <set field="applicationContext.createdBy" from-field="userLogin.userLoginId"/>
            <set field="applicationContext.applicationStatus" value="NEW"/>
            <set field="applicationContext.isActive" value="Y"/>
            <sequenced-id field="applicationContext.loanNo" sequence-name="LoanNumber" stagger-max="1" />
            
        <else>
        	<set field="loanApplicationId" from-field="parameters.loanApplicationId"/>
        	<entity-one value-field="currentApplication" entity-name="LoanApplication">
        		<field-map field-name="loanApplicationId" from-field="loanApplicationId"/>
        	</entity-one>
           <set field="applicationContext.updatedBy" from-field="userLogin.userLoginId"/>
           <set field="applicationContext.createdBy" from-field="currentApplication.createdBy"/>
            <set field="applicationContext.applicationStatus" from-field="currentApplication.applicationStatus"/>
            <set field="applicationContext.isActive" from-field="currentApplication.isActive"/>
            <set field="applicationContext.loanNo" from-field="currentApplication.loanNo"/>
        </else>
        </if-empty>
        <call-service service-name="createLoanApplication" in-map-name="applicationContext">
            <result-to-field result-name="loanApplicationId" field="tempMap.loanApplicationId"/>
           <result-to-field result-name="loanApplicationId" field="loanApplicationId"/>
        </call-service>

        <!-- now that we have the partyId, put it where it needs to go... -->
        <set field="applicationContext.loanApplicationId" from-field="tempMap.loanApplicationId"/>
    </simple-method>
    <!-- End Create Loan Application -->

</simple-methods>