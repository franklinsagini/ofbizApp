<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods-v2.xsd">
		<!-- MemberAccountVoucher -->
		<simple-method method-name="createMemberAccountVoucher" short-description="Create MemberAccountVoucher">
      	<if-empty field="parameters.memberAccountVoucherId">
	      		<make-value entity-name="MemberAccountVoucher" value-field="newEntity"/>
		        <set-pk-fields map="parameters" value-field="newEntity"/>
		        <set-nonpk-fields map="parameters" value-field="newEntity"/>
		        <set field="entityName" value="MemberAccountVoucher"></set>
        		<set field="newEntity.memberAccountVoucherId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
		        <set field="newEntity.isActive" value="Y"/>
		        <set field="newEntity.createdBy" from-field="userLogin.userLoginId"/>
		        <set field="newEntity.branchId" from-field="userLogin.partyId"/>
		        <create-value value-field="newEntity"/>
      		<else>
      			<call-simple-method method-name="updateMemberAccountVoucher"></call-simple-method>
      		</else>
      	</if-empty>
      	
      	 <set field="memberAccountVoucherId" from-field="newEntity.memberAccountVoucherId" type="Long"/>
        <set field="voucherStatus" value="${bsh:org.ofbiz.memberaccountmanagement.MemberAccountManagementServices.createMemberAccountVoucherTransaction(userLogin, memberAccountVoucherId);}"></set>
    
   		<set field="successstatus" value="success" type="String"/>
   		 <if> 
            <condition> 
                   <if-compare-field to-field="successstatus" operator="not-equals" field="voucherStatus"></if-compare-field>
            </condition> 
            <then> 
                <add-error> 
                    <fail-property resource="MemberAccountManagementUiLabels.xml"  
                        property="voucherError" /> 
                </add-error> 
                <check-errors /> 
            </then> 
             
            <else>
            	<!-- call-simple-method method-name="saveTreasuryTransfer" scope="inline"></call-simple-method>
        		<set field="repayLoan" value="${bsh:org.ofbiz.treasurymanagement.TreasuryAccounting.postTreasuryTransfer(newEntity, userLogin);}" type="String"/ -->
               <property-to-field resource="MemberAccountManagementUiLabels.xml" 
            	property="voucherSuccess" field="successMessage" /> 
            </else> 
        </if>
    </simple-method>
    
    <simple-method method-name="updateMemberAccountVoucher" short-description="Update MemberAccountVoucher">
        <entity-one entity-name="MemberAccountVoucher" value-field="memberAccountVoucher"/>
        <set-nonpk-fields value-field="memberAccountVoucher" map="parameters"/>
        <set field="memberAccountVoucher.updatedBy" from-field="userLogin.userLoginId"/>
        <store-value value-field="memberAccountVoucher"/>
    </simple-method>
    
    <simple-method method-name="deleteMemberAccountVoucher" short-description="Delete MemberAccountVoucher">
        <entity-one entity-name="MemberAccountVoucher" value-field="memberAccountVoucher"/>
        <set field="memberAccountVoucher.isActive" value="N"/>
        <set field="memberAccountVoucher.updatedBy" from-field="userLogin.userLoginId"/>
        <store-value value-field="memberAccountVoucher"/>
    </simple-method>
    
    <!-- MemberLoansVoucher -->
    
    <simple-method method-name="createMemberLoansVoucher" short-description="Create MemberLoansVoucher">
      	<if-empty field="parameters.memberLoansVoucherId">
	      		<make-value entity-name="MemberLoansVoucher" value-field="newEntity"/>
		        <set-pk-fields map="parameters" value-field="newEntity"/>
		        <set-nonpk-fields map="parameters" value-field="newEntity"/>
		        <set field="entityName" value="MemberLoansVoucher"></set>
        		<set field="newEntity.memberLoansVoucherId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
		        <set field="newEntity.isActive" value="Y"/>
		        <set field="newEntity.createdBy" from-field="userLogin.userLoginId"/>
		        <set field="newEntity.branchId" from-field="userLogin.partyId"/>
		        <create-value value-field="newEntity"/>
      		<else>
      			<call-simple-method method-name="updateMemberLoansVoucher"></call-simple-method>
      		</else>
      	</if-empty>
      	
      	 <set field="memberLoansVoucherId" from-field="newEntity.memberLoansVoucherId" type="Long"/>
        <set field="voucherStatus" value="${bsh:org.ofbiz.memberaccountmanagement.MemberAccountManagementServices.createMemberLoansVoucherTransaction(userLogin, memberLoansVoucherId);}"></set>
    
   		<set field="successstatus" value="success" type="String"/>
   		 <if> 
            <condition> 
                   <if-compare-field to-field="successstatus" operator="not-equals" field="voucherStatus"></if-compare-field>
            </condition> 
            <then> 
                <add-error> 
                    <fail-property resource="MemberAccountManagementUiLabels.xml"  
                        property="voucherLoanError" /> 
                </add-error> 
                <check-errors /> 
            </then> 
             
            <else>
            	<!-- call-simple-method method-name="saveTreasuryTransfer" scope="inline"></call-simple-method>
        		<set field="repayLoan" value="${bsh:org.ofbiz.treasurymanagement.TreasuryAccounting.postTreasuryTransfer(newEntity, userLogin);}" type="String"/ -->
               <property-to-field resource="MemberAccountManagementUiLabels.xml" 
            	property="voucherLoanSuccess" field="successMessage" /> 
            </else> 
        </if>
    </simple-method>
    
    <simple-method method-name="updateMemberLoansVoucher" short-description="Update MemberLoansVoucher">
        <entity-one entity-name="MemberLoansVoucher" value-field="memberAccountVoucher"/>
        <set-nonpk-fields value-field="memberAccountVoucher" map="parameters"/>
        <set field="memberAccountVoucher.updatedBy" from-field="userLogin.userLoginId"/>
        <store-value value-field="memberAccountVoucher"/>
    </simple-method>
    
    <simple-method method-name="deleteMemberLoansVoucher" short-description="Delete MemberLoansVoucher">
        <entity-one entity-name="MemberLoansVoucher" value-field="memberAccountVoucher"/>
        <set field="memberAccountVoucher.isActive" value="N"/>
        <set field="memberAccountVoucher.updatedBy" from-field="userLogin.userLoginId"/>
        <store-value value-field="memberAccountVoucher"/>
    </simple-method>
    
    <!-- GeneralMemberVoucher -->
    <simple-method method-name="createGeneralMemberVoucher" short-description="Create GeneralMemberVoucher">
      	<if-empty field="parameters.generalMemberVoucherId">
	      		<make-value entity-name="GeneralMemberVoucher" value-field="newEntity"/>
		        <set-pk-fields map="parameters" value-field="newEntity"/>
		        <set-nonpk-fields map="parameters" value-field="newEntity"/>
		        <set field="entityName" value="GeneralMemberVoucher"></set>
        		<set field="newEntity.generalMemberVoucherId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
		        <set field="newEntity.isActive" value="Y"/>
		        <set field="newEntity.createdBy" from-field="userLogin.userLoginId"/>
		        <set field="newEntity.branchId" from-field="userLogin.partyId"/>
		        <create-value value-field="newEntity"/>
      		<else>
      			<call-simple-method method-name="updateGeneralMemberVoucher"></call-simple-method>
      		</else>
      	</if-empty>
      	
      	<set field="generalMemberVoucherId" from-field="newEntity.generalMemberVoucherId" type="Long"/>
        <set field="voucherStatus" value="${bsh:org.ofbiz.memberaccountmanagement.MemberAccountManagementServices.createMemberAccountVoucherTransaction(userLogin, memberAccountVoucherId);}"></set>
    
   		<set field="successstatus" value="success" type="String"/>
   		 <if> 
            <condition> 
                   <if-compare-field to-field="successstatus" operator="not-equals" field="voucherStatus"></if-compare-field>
            </condition> 
            <then> 
                <add-error> 
                    <fail-property resource="MemberAccountManagementUiLabels.xml"  
                        property="voucherError" /> 
                </add-error> 
                <check-errors /> 
            </then> 
             
            <else>
            	
               <property-to-field resource="MemberAccountManagementUiLabels.xml" 
            	property="voucherSuccess" field="successMessage" /> 
            </else> 
        </if>
        
        <!-- call-simple-method method-name="saveTreasuryTransfer" scope="inline"></call-simple-method>
        		<set field="repayLoan" value="${bsh:org.ofbiz.treasurymanagement.TreasuryAccounting.postTreasuryTransfer(newEntity, userLogin);}" type="String"/ -->
    </simple-method>
    
    <simple-method method-name="updateGeneralMemberVoucher" short-description="Update GeneralMemberVoucher">
        <entity-one entity-name="GeneralMemberVoucher" value-field="generalMemberVoucher"/>
        <set-nonpk-fields value-field="generalMemberVoucher" map="parameters"/>
        <set field="generalMemberVoucher.updatedBy" from-field="userLogin.userLoginId"/>
        <store-value value-field="generalMemberVoucher"/>
    </simple-method>
    
    <simple-method method-name="deleteGeneralMemberVoucher" short-description="Delete GeneralMemberVoucher">
        <entity-one entity-name="GeneralMemberVoucher" value-field="generalMemberVoucher"/>
        <set field="generalMemberVoucher.isActive" value="N"/>
        <set field="generalMemberVoucher.updatedBy" from-field="userLogin.userLoginId"/>
        <store-value value-field="generalMemberVoucher"/>
    </simple-method>
    
    <!-- GeneralglHeader -->
        <simple-method method-name="createGeneralglHeader" short-description="Create GeneralglHeader">
      	<if-empty field="parameters.generalglHeaderId">
	      		<make-value entity-name="GeneralglHeader" value-field="newEntity"/>
		        <set-pk-fields map="parameters" value-field="newEntity"/>
		        <set-nonpk-fields map="parameters" value-field="newEntity"/>
		        <set field="entityName" value="GeneralglHeader"></set>
        		<set field="newEntity.generalglHeaderId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
		        <set field="newEntity.isActive" value="Y"/>
		        <set field="newEntity.createdBy" from-field="userLogin.userLoginId"/>
		        <set field="newEntity.branchId" from-field="userLogin.partyId"/>
		        <create-value value-field="newEntity"/>
		        
		        <!-- Add MPA Source Lines -->
		        <!-- Add MPA Destination Lines -->
		        <!-- Add glLines  -->
      		<else>
      			<call-simple-method method-name="updateGeneralglHeader"></call-simple-method>
      		</else>
      	</if-empty>
      	
      	<set field="generalglHeaderId" from-field="newEntity.generalglHeaderId" type="Long"/>

		<property-to-field resource="MemberAccountManagementUiLabels.xml" 
            	property="Successfully created GL Header" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="updateGeneralglHeader" short-description="Update GeneralglHeader">
        <entity-one entity-name="GeneralglHeader" value-field="generalglHeader"/>
        <set-nonpk-fields value-field="generalglHeader" map="parameters"/>
        <set field="generalglHeader.updatedBy" from-field="userLogin.userLoginId"/>
        <store-value value-field="generalglHeader"/>
    </simple-method>
    
    <simple-method method-name="deleteGeneralglHeader" short-description="Delete GeneralglHeader">
        <entity-one entity-name="GeneralglHeader" value-field="generalglHeader"/>
        <set field="generalglHeader.isActive" value="N"/>
        <set field="generalglHeader.updatedBy" from-field="userLogin.userLoginId"/>
        <store-value value-field="generalglHeader"/>
    </simple-method>
    
    
    <!-- SourcempaLine -->
    <simple-method method-name="createSourcempaLine" short-description="Create SourcempaLine">
      	<if-empty field="parameters.sourcempaLineId">
	      		<make-value entity-name="SourcempaLine" value-field="newEntity"/>
		        <set-pk-fields map="parameters" value-field="newEntity"/>
		        <set-nonpk-fields map="parameters" value-field="newEntity"/>
		        <set field="entityName" value="SourcempaLine"></set>
        		<set field="newEntity.sourcempaLineId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
		        <set field="newEntity.isActive" value="Y"/>
		        <set field="newEntity.createdBy" from-field="userLogin.userLoginId"/>
		        <set field="newEntity.branchId" from-field="userLogin.partyId"/>
		        <create-value value-field="newEntity"/>
      		<else>
      			<call-simple-method method-name="updateSourcempaLine"></call-simple-method>
      		</else>
      	</if-empty>
      	
      	<set field="sourcempaLineId" from-field="newEntity.sourcempaLineId" type="Long"/>

		<property-to-field resource="MemberAccountManagementUiLabels.xml" 
            	property="Successfully created GL Header" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="updateSourcempaLine" short-description="Update SourcempaLine">
        <entity-one entity-name="SourcempaLine" value-field="sourcempaLine"/>
        <set-nonpk-fields value-field="sourcempaLine" map="parameters"/>
        <set field="sourcempaLine.updatedBy" from-field="userLogin.userLoginId"/>
        <store-value value-field="sourcempaLine"/>
    </simple-method>
    
    <simple-method method-name="deleteSourcempaLine" short-description="Delete SourcempaLine">
        <entity-one entity-name="SourcempaLine" value-field="sourcempaLine"/>
        <set field="sourcempaLine.isActive" value="N"/>
        <set field="sourcempaLine.updatedBy" from-field="userLogin.userLoginId"/>
        <store-value value-field="sourcempaLine"/>
    </simple-method>
    
    <!-- DestinationmpaLine -->
       <simple-method method-name="createDestinationmpaLine" short-description="Create DestinationmpaLine">
      	<if-empty field="parameters.destinationmpaLineId">
	      		<make-value entity-name="DestinationmpaLine" value-field="newEntity"/>
		        <set-pk-fields map="parameters" value-field="newEntity"/>
		        <set-nonpk-fields map="parameters" value-field="newEntity"/>
		        <set field="entityName" value="DestinationmpaLine"></set>
        		<set field="newEntity.destinationmpaLineId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
		        <set field="newEntity.isActive" value="Y"/>
		        <set field="newEntity.createdBy" from-field="userLogin.userLoginId"/>
		        <set field="newEntity.branchId" from-field="userLogin.partyId"/>
		        <create-value value-field="newEntity"/>
      		<else>
      			<call-simple-method method-name="updateDestinationmpaLine"></call-simple-method>
      		</else>
      	</if-empty>
      	
      	<set field="destinationmpaLineId" from-field="newEntity.destinationmpaLineId" type="Long"/>

		<property-to-field resource="MemberAccountManagementUiLabels.xml" 
            	property="Successfully created GL Header" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="updateDestinationmpaLine" short-description="Update DestinationmpaLine">
        <entity-one entity-name="DestinationmpaLine" value-field="destinationmpaLine"/>
        <set-nonpk-fields value-field="destinationmpaLine" map="parameters"/>
        <set field="destinationmpaLine.updatedBy" from-field="userLogin.userLoginId"/>
        <store-value value-field="destinationmpaLine"/>
    </simple-method>
    
    <simple-method method-name="deleteDestinationmpaLine" short-description="Delete DestinationmpaLine">
        <entity-one entity-name="DestinationmpaLine" value-field="destinationmpaLine"/>
        <set field="destinationmpaLine.isActive" value="N"/>
        <set field="destinationmpaLine.updatedBy" from-field="userLogin.userLoginId"/>
        <store-value value-field="destinationmpaLine"/>
    </simple-method>
    
    <!-- GeneralglLine -->
    <simple-method method-name="createGeneralglLine" short-description="Create GeneralglLine">
      	<if-empty field="parameters.generalglLineId">
	      		<make-value entity-name="GeneralglLine" value-field="newEntity"/>
		        <set-pk-fields map="parameters" value-field="newEntity"/>
		        <set-nonpk-fields map="parameters" value-field="newEntity"/>
		        <set field="entityName" value="GeneralglLine"></set>
        		<set field="newEntity.generalglLineId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
		        <set field="newEntity.isActive" value="Y"/>
		        <set field="newEntity.createdBy" from-field="userLogin.userLoginId"/>
		        <set field="newEntity.branchId" from-field="userLogin.partyId"/>
		        <create-value value-field="newEntity"/>
      		<else>
      			<call-simple-method method-name="updateGeneralglLine"></call-simple-method>
      		</else>
      	</if-empty>
      	
      	<set field="generalglLineId" from-field="newEntity.generalglLineId" type="Long"/>

		<property-to-field resource="MemberAccountManagementUiLabels.xml" 
            	property="Successfully created GL Header" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="updateGeneralglLine" short-description="Update GeneralglLine">
        <entity-one entity-name="GeneralglLine" value-field="generalglLine"/>
        <set-nonpk-fields value-field="generalglLine" map="parameters"/>
        <set field="generalglLine.updatedBy" from-field="userLogin.userLoginId"/>
        <store-value value-field="generalglLine"/>
    </simple-method>
    
    <simple-method method-name="deleteGeneralglLine" short-description="Delete GeneralglLine">
        <entity-one entity-name="GeneralglLine" value-field="generalglLine"/>
        <set field="generalglLine.isActive" value="N"/>
        <set field="generalglLine.updatedBy" from-field="userLogin.userLoginId"/>
        <store-value value-field="generalglLine"/>
    </simple-method>

</simple-methods>