<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods-v2.xsd">


    <simple-method method-name="createImprestAccount" short-description="Create ImprestAccount">
            <make-value entity-name="ImprestAccount" value-field="newEntity"/>
             <set-pk-fields map="parameters" value-field="newEntity"/>
            <set-nonpk-fields map="parameters" value-field="newEntity"/>
            <sequenced-id sequence-name="ImprestAccount" field="imprestAccountId"/>
            <now-timestamp field="newEntity.createdDate"/>
            <set from-field="imprestAccountId" field="newEntity.imprestAccountId"/>
            <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="updateSupplier" short-description="Update ImprestAccount">
            <entity-one entity-name="ImprestAccount" value-field="lookedUpValue"/>
            <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
            <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="createImprestDestination" short-description="Create ImprestDestination">
            <make-value entity-name="ImprestDestination" value-field="newEntity"/>
             <set-pk-fields map="parameters" value-field="newEntity"/>
            <set-nonpk-fields map="parameters" value-field="newEntity"/>
            <sequenced-id sequence-name="ImprestDestination" field="destinationId"/>
            <now-timestamp field="newEntity.createdDate"/>
            <set from-field="destinationId" field="newEntity.destinationId"/>
            <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="createPerDiemSetup" short-description="Create ImprestPerDiemSetup">
            <make-value entity-name="ImprestPerDiemSetup" value-field="newEntity"/>
             <set-pk-fields map="parameters" value-field="newEntity"/>
            <set-nonpk-fields map="parameters" value-field="newEntity"/>
            <sequenced-id sequence-name="ImprestPerDiemSetup" field="perDiemSetupId"/>
            <now-timestamp field="newEntity.createdDate"/>
            <set from-field="perDiemSetupId" field="newEntity.perDiemSetupId"/>
            <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="createPettySetup" short-description="Create ImprestPettySetup">
            <make-value entity-name="ImprestPettySetup" value-field="newEntity"/>
             <set-pk-fields map="parameters" value-field="newEntity"/>
            <set-nonpk-fields map="parameters" value-field="newEntity"/>
            <sequenced-id sequence-name="ImprestPettySetup" field="pettySetupId"/>
            <now-timestamp field="newEntity.createdDate"/>
            <set from-field="pettySetupId" field="newEntity.pettySetupId"/>
            <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="UpdatePettySetup" short-description="Update ImprestPettySetup">
            <entity-one entity-name="ImprestPettySetup" value-field="lookedUpValue"/>
            <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
            <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="createSurrenderable" short-description="Create ImprestSurrenderable">
            <make-value entity-name="ImprestSurrenderable" value-field="newEntity"/>
             <set-pk-fields map="parameters" value-field="newEntity"/>
            <set-nonpk-fields map="parameters" value-field="newEntity"/>
            <log level="info" message=">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Parameters [${parameters}]"/>
            <set field="approvalStatus" value="CREATED" />
            <now-timestamp field="reqDate"/>
            <sequenced-id sequence-name="ImprestSurrenderable" field="surrenderableId"/>
            <set from-field="surrenderableId" field="newEntity.surrenderableId"/>
            <set from-field="approvalStatus" field="newEntity.approvalStatus"/>
            <set from-field="reqDate" field="newEntity.reqDate"/>
            <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="updateSurrenderable" short-description="Update ImprestSurrenderable">
            <entity-one entity-name="ImprestSurrenderable" value-field="lookedUpValue"/>
            <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
            <store-value value-field="lookedUpValue"/>
    </simple-method>


        <!-- create a new ImprestSurrenderable header record -->
    <simple-method method-name="createSurrendable" short-description="Create an Budget">
          <now-timestamp field="nowDate"/>
          <!-- create new entity and create all the fields -->
        <make-value value-field="newEntity" entity-name="ImprestSurrenderable"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>

        <!-- create a non existing ID if not supplied -->
        <sequenced-id sequence-name="ImprestSurrenderable" field="newEntity.surrenderableId"/>

        <!-- populate EmployeeId -->
        <set from-field="userLogin.partyId" field="newEntity.employeeId"/>

        <!-- populate reqDate -->
        <set from-field="nowDate" field="newEntity.reqDate"/>

        <!-- populate reqDate -->
        <set value="PENDING" field="newEntity.approvalStatus"/>

        <!-- finally create the record (should not exist already)-->
        <create-value value-field="newEntity"/>

        <set field="setStatus.surrenderableId" from-field="newEntity.surrenderableId"/>
        <set field="setStatus.statusId" value="BG_CREATED"/>
        <call-service service-name="updateSurrendableStatus" in-map-name="setStatus"/>
        <field-to-result field="newEntity.surrenderableId" result-name="surrenderableId"/>
    </simple-method>

    <!-- update Surrendable Status -->
    <simple-method method-name="updateSurrendableStatus" short-description="Update Surrendable Status">
        <now-timestamp field="nowDate"/>
        <entity-and list="surrendableStatuses" entity-name="SurrendableStatus">
            <field-map field-name="surrenderableId" from-field="parameters.surrenderableId"/>
            <order-by field-name="-statusDate"/>
        </entity-and>
        <if-not-empty field="surrendableStatuses">
            <first-from-list entry="surrenderableStatus" list="surrendableStatuses"/>
            <entity-one value-field="statusValidChange" entity-name="StatusValidChange">
                <field-map field-name="statusId" from-field="surrenderableStatus.statusId"/>
                <field-map field-name="statusIdTo" from-field="parameters.statusId"/>
            </entity-one>
            <if-not-empty field="statusValidChange">
                <make-value value-field="newEntity" entity-name="SurrendableStatus"/>
                <set-pk-fields value-field="newEntity" map="parameters"/>
                <set-nonpk-fields map="parameters" value-field="newEntity"/>
                <set field="newEntity.statusDate" from-field="nowDate"/>
                <create-value value-field="newEntity"/>
            </if-not-empty>
            <else>
                <make-value value-field="newEntity" entity-name="SurrendableStatus"/>
                <set-pk-fields value-field="newEntity" map="parameters"/>
                <set-nonpk-fields map="parameters" value-field="newEntity"/>
                <set field="newEntity.statusDate" from-field="nowDate"/>
                <create-value value-field="newEntity"/>
            </else>
        </if-not-empty>
    </simple-method>

    <!-- create a new Petty Cash header record -->
    <simple-method method-name="createPettyCash" short-description="Create an ImprestPettyCash">
          <!-- create new entity and create all the fields -->

        <make-value value-field="newEntity" entity-name="ImprestPettyCash"/>
        <set-pk-fields value-field="newEntity" map="parameters"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <set from-field="userLogin.partyId" field="newEntity.createdBy"/>
        <set field="newEntity.initialBalance" value="0.00" type="BigDecimal"/>
        <set field="newEntity.currentBalance" value="0.00" type="BigDecimal"/>
        <set field="newEntity.reservedAmount" value="0.00" type="BigDecimal"/>
        <set field="newEntity.statusName" value="DRAFT"/>
        <create-value value-field="newEntity"/>
    </simple-method>

    <!-- update an existing ImprestPettyCash header Record -->
    <simple-method method-name="updatePettyCash" short-description="Update an existing ImprestPettyCash">
        <entity-one entity-name="ImprestPettyCash" value-field="lookedUpValue"/>
        <set-nonpk-fields map="parameters" value-field="lookedUpValue"/>
        <set-pk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>

        <field-to-result field="parameters.customTimePeriodId" result-name="customTimePeriodId"/>
    </simple-method>

    <!-- update an existing ImprestPettyCash header Record -->
    <simple-method method-name="finalizePettyCash" short-description="Update an existing ImprestPettyCash">
        <entity-one entity-name="ImprestPettyCash" value-field="lookedUpValue"/>
        <set-nonpk-fields map="parameters" value-field="lookedUpValue"/>
        <set-pk-fields value-field="lookedUpValue" map="parameters"/>
         <set field="lookedUpValue.statusName" value="FINAL"/>
        <store-value value-field="lookedUpValue"/>

        <field-to-result field="parameters.customTimePeriodId" result-name="customTimePeriodId"/>
    </simple-method>


    <!-- create a new Replenish Petty Cash record -->
    <simple-method method-name="replenishPettyCash" short-description="Create an ImprestReplenishPettyCash">
          <now-timestamp field="nowDate"/>
          <!-- create new entity and create all the fields -->

        <make-value value-field="newEntity" entity-name="ImprestReplenishPettyCash"/>
        <set-pk-fields value-field="newEntity" map="parameters"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="ImprestReplenishPettyCash" field="replenishId"/>
        <set from-field="replenishId" field="newEntity.replenishId"/>
        <set from-field="userLogin.partyId" field="newEntity.replenishedBy"/>
        <entity-one entity-name="ImprestPettyCash" value-field="pettyCashMap">
            <field-map field-name="customTimePeriodId" from-field="newEntity.customTimePeriodId"/>
        </entity-one>
        <calculate field="currentBalance">
            <calcop operator="add">
               <calcop operator="get" field="pettyCashMap.currentBalance"/>
               <calcop operator="get" field="newEntity.replenishAmount"/>
            </calcop>
        </calculate>
        <set field="newEntity.replenishDate" from-field="nowDate"/>
        <create-value value-field="newEntity"/>
        <!-- Update the petty cash with the new amount -->
        <set field="pettyCash.customTimePeriodId" from-field="newEntity.customTimePeriodId"/>
        <set field="pettyCash.currentBalance" from-field="currentBalance"/>
        <call-service service-name="updatePettyCash" in-map-name="pettyCash"/>
    </simple-method>

</simple-methods>
