<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods-v2.xsd">
        
        <!--  Account Product Start -->
        <simple-method method-name="createAccountProduct" short-description="Create Account Product">
        
        <if-empty field="parameters.accountProductId">
        	<make-value entity-name="AccountProduct" value-field="newEntity"/>
	        <set-pk-fields map="parameters" value-field="newEntity"/>
	        <set-nonpk-fields map="parameters" value-field="newEntity"/>
	        <!-- sequenced-id sequence-name="AccountProduct" field="accountProductId"/>
	        <set from-field="accountProductId" field="newEntity.accountProductId"/ -->
	        <set field="entityName" value="AccountProduct"></set>
        
        	<set field="newEntity.accountProductId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
	        
	        <set field="newEntity.isActive" value="Y"/>
	        <set field="newEntity.createdBy" from-field="userLogin.userLoginId"/>
	        <set field="newEntity.branchId" from-field="userLogin.partyId"/>
	        <create-value value-field="newEntity"/>
        	<else>
        		<call-simple-method method-name="updateAccountProduct"></call-simple-method>
        	</else>
        </if-empty>
        
        
       
    </simple-method>
    
    <simple-method method-name="updateAccountProduct" short-description="Update Account Product">
         <entity-one entity-name="AccountProduct" value-field="accountProduct">
        	<field-map field-name="accountProductId" from-field="parameters.accountProductId"/>
        </entity-one>
        <set-nonpk-fields value-field="accountProduct" map="parameters"/>
        <set field="accountProduct.updatedBy" from-field="userLogin.userLoginId"/>
        <store-value value-field="accountProduct"/>
    </simple-method>
    
    <simple-method method-name="deleteAccountProduct" short-description="Delete Account Product">
        <entity-one entity-name="AccountProduct" value-field="accountProduct">
        	<field-map field-name="accountProductId" from-field="parameters.accountProductId"/>
        </entity-one>
        <set field="accountProduct.isActive" value="N"/>
        <set field="accountProduct.updatedBy" from-field="userLogin.userLoginId"/>
        <!-- remove-value value-field="accountProduct"/ -->
        <store-value value-field="accountProduct"/>
    </simple-method>
        <!--  Account Product End -->
        
        <!-- Loan Product Start -->
      <simple-method method-name="createLoanProduct" short-description="Create Loan Product">
      	<if-empty field="parameters.loanProductId">
      	
	      		<make-value entity-name="LoanProduct" value-field="newEntity"/>
		        <set-pk-fields map="parameters" value-field="newEntity"/>
		        <set-nonpk-fields map="parameters" value-field="newEntity"/>
		        <!-- sequenced-id sequence-name="LoanProduct" field="loanProductId"/>
		        <set from-field="loanProductId" field="newEntity.loanProductId"/ -->
		        <set field="entityName" value="LoanProduct"></set>
        		<set field="newEntity.loanProductId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
		        
		        <set field="newEntity.isActive" value="Y"/>
		        <set field="newEntity.createdBy" from-field="userLogin.userLoginId"/>
		        <set field="newEntity.branchId" from-field="userLogin.partyId"/>
		        <create-value value-field="newEntity"/>
      		<else>
      			<call-simple-method method-name="updateLoanProduct"></call-simple-method>
      		</else>
      	</if-empty>
      
        
     
    </simple-method>
    
    <simple-method method-name="updateLoanProduct" short-description="Update Loan Product">
        <entity-one entity-name="LoanProduct" value-field="loanProduct"/>
        <set-nonpk-fields value-field="loanProduct" map="parameters"/>
        <set field="loanProduct.updatedBy" from-field="userLogin.userLoginId"/>
        <store-value value-field="loanProduct"/>
    </simple-method>
    
    <simple-method method-name="deleteLoanProduct" short-description="Delete Loan Product">
        <entity-one entity-name="LoanProduct" value-field="loanProduct"/>
        <set field="loanProduct.isActive" value="N"/>
        <set field="loanProduct.updatedBy" from-field="userLogin.userLoginId"/>
        <!-- remove-value value-field="accountProduct"/ -->
        <store-value value-field="loanProduct"/>
    </simple-method>
        <!-- Loan Product End -->
         <simple-method method-name="createSavingsProduct" short-description="Create Savings Product">
        <make-value entity-name="SaccoProduct" value-field="newEntity"/>
        <!-- sequenced-id sequence-name="saccoProductSequence" field="newEntity.saccoProductId"/ -->
        <!-- sequenced-id sequence-name="saccoProduct" field="saccoProductId"/>
        <set from-field="saccoProductId" field="newEntity.saccoProductId"/ -->
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="saccoProduct" field="saccoProductId"/>
        <!-- set from-field="saccoProductId" field="newEntity.saccoProductId"/ -->
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- entity-one entity-name="SaccoProduct" value-field="saccoProduct" auto-field-map="true"/ -->
        
        <sequenced-id sequence-name="SaccoProduct" field="saccoProductId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="saccoProductId" field="newEntity.saccoProductId"/>
        <set field="newEntity.productType" value="Account"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="createLoanProducts" short-description="Create Loan Product">
        <make-value entity-name="SaccoProduct" value-field="newEntity"/>
        
        <sequenced-id sequence-name="saccoProduct" field="saccoProductId"/>
        <set from-field="saccoProductId" field="newEntity.saccoProductId"/>
        
        <!-- sequenced-id sequence-name="saccoProductSequence" field="newEntity.saccoProductId"/ -->
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <!-- sequenced-id sequence-name="saccoProduct" field="saccoProductId"/>
        <set from-field="saccoProductId" field="newEntity.saccoProductId"/ -->
        <!-- entity-one entity-name="SaccoProduct" value-field="saccoProduct" auto-field-map="true"/ -->
        
        <sequenced-id sequence-name="SaccoProduct" field="saccoProductId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="saccoProductId" field="newEntity.saccoProductId"/>
        <set field="newEntity.productType" value="Loan"/>
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
    </simple-method>
    
	<simple-method method-name="getSaccoMember" short-description="Get Sacco Member" login-required="false">
    	<set field="partyId" from-field="parameters.partyId"/>
    	<!--  entity-one entity-name="Member" value-field="member"/ -->
    	<entity-one value-field="memberContext" entity-name="Member"></entity-one>
    </simple-method>
    
    <simple-method method-name="updateSaccoProduct" short-description="Update Sacco Product">
        <entity-one entity-name="SaccoProduct" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deleteSaccoProduct" short-description="Delete Sacco Product">
        <entity-one entity-name="SaccoProduct" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
    <!-- simple-method method-name="updateAccountProduct" short-description="Update Sacco Product">
        <entity-one entity-name="SaccoProduct" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
	
	<simple-method method-name="updateLoanProduct" short-description="Update Sacco Product">
        <entity-one entity-name="SaccoProduct" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method -->
    
    <!-- Loan Application Methods -->
    <simple-method method-name="createLoanApplication" short-description="Create Loan Application">
        <make-value entity-name="LoanApplication" value-field="newEntity"/>
        
        <!-- sequenced-id sequence-name="loanApplication" field="loanApplicationId"/ >
        <set from-field="loanApplicationId" field="newEntity.loanApplicationId"/ -->
        
        <!-- sequenced-id sequence-name="saccoProductSequence" field="newEntity.saccoProductId"/ -->
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <!-- sequenced-id sequence-name="saccoProduct" field="saccoProductId"/>
        <set from-field="saccoProductId" field="newEntity.saccoProductId"/ -->
        <!-- entity-one entity-name="SaccoProduct" value-field="saccoProduct" auto-field-map="true"/ -->
        
        
        <!-- set field="productType" value="Loan"/ -->
        
        
        <if-empty field="parameters.loanApplicationId">
			<call-simple-method method-name="saveLoanApplication" scope="inline"></call-simple-method>
			<set field="charges" value="${bsh:org.ofbiz.loans.LoanServices.addCharges(newEntity, userLogin);}" type="String"/>
        
        	<!-- Get accountProductId from LoanProduct -->
        	<entity-one value-field="loanProduct" entity-name="LoanProduct">
        		<field-map field-name="loanProductId" value="${newEntity.loanProductId}"/>
        	</entity-one>
        	
        	<set field="newEntity.accountProductId" value="${loanProduct.accountProductId}"/>
        	
        	<set field="newEntity.appliedAmt" value="${newEntity.loanAmt}"/>
        	<set field="newEntity.appraisedAmt" value="${newEntity.loanAmt}"/>
        	<set field="newEntity.approvedAmt" value="${newEntity.loanAmt}"/>
        	
        	<!-- if-empty field="newEntity.accountProductId">
        		<set field="newEntity.accountProductId" value="NOACCOUNT"/>
        	</if-empty -->
        	<store-value value-field="newEntity"/>
        <else>
        	<call-simple-method method-name="updateLoanApplication"></call-simple-method>
        </else>
        </if-empty>
        
        
    </simple-method>
    
    <simple-method method-name="saveLoanApplication" short-description="Save a Loan Application" >
    
    		<set field="entityName" value="LoanApplication"></set>
        
        	<set field="newEntity.loanApplicationId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
    		
    	    <!-- sequenced-id sequence-name="LoanApplication" field="loanApplicationId"/>
	        <now-timestamp field="newEntity.createdDate"/>
	        <set from-field="loanApplicationId" field="newEntity.loanApplicationId"/ -->
	        
            <set field="newEntity.createdBy" from-field="userLogin.userLoginId"/>
            
            <set field="statusName" value="NEW"/>
	   		<set field="statusId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getLoanStatusId(statusName);}"/>
            <set field="newEntity.loanStatusId" value="${statusId}"/>
            <set field="newEntity.isActive" value="Y"/>
            <set field="newEntity.guarantorsAdded" value="N"/>
            <set field="newEntity.appraised" value="N"/>
            
            <sequenced-id field="newEntity.loanNo" sequence-name="LoanNumber" stagger-max="1"  />
            
            <!-- Set WorkflowDocument -->
            <set field="documentName" value="LOAN"/>
            <!-- set field="newEntity.workflowDocumentTypeId" value="${bsh:org.ofbiz.workflow.WorkflowServices.getWorkflowDocumentType(documentName);}" type="Long"/ -->
            
            <!-- Set OrganizationUnit -->
            <set field="partyId" from-field="userLogin.partyId"/>
            <!-- set field="newEntity.organizationUnitId" value="${bsh:org.ofbiz.workflow.WorkflowServices.getUserOrganizationUnit(partyId);}" type="Long"/ -->
            
            
            <!-- Checking the repaymentPeriod -->
	        <set field="loanProductId" from-field="newEntity.loanProductId" type="Long"/>
	        <set field="providedRepaymentPeriod" from-field="newEntity.repaymentPeriod" type="Long"/>
	        
	        <log message=" RRRRRR Repayment Period " level="info"/>
	        <log message="providedRepaymentPeriod" level="info"/>
	        <log message="LLLLLLL Loan Product" level="info"/>
	        <log message="loanProductId" level="info"/>
	        <set field="trueStatus" value="true" type="Boolean"/>
	        <set field="repaymentPeriodValid" value="${bsh:org.ofbiz.loans.LoanServices.repaymentPeriodValid(providedRepaymentPeriod, loanProductId);}" type="Boolean"/>
            
            <if> 
            <condition> 
                        <if-compare-field to-field="trueStatus" operator="not-equals" field="repaymentPeriodValid"></if-compare-field>
            </condition> 
            <then> 
                <add-error> 
                    <fail-property resource="LoanUiLabels.xml"  
                        property="loanApplicationRepaymentPeriodError" /> 
                </add-error> 
                <check-errors /> 
            </then> 
             
            <else>
            	<create-value value-field="newEntity" /> 
                <property-to-field resource="LoanUiLabels.xml" 
            property="loanApplicationRepaymentPeriodSuccess" field="successMessage" /> 
            </else> 
        </if>
            
     </simple-method>
    
    <simple-method method-name="updateLoanApplication" short-description="Update Loan Application">
        <entity-one entity-name="LoanApplication" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        
        <set field="loanApplicationId" from-field="parameters.loanApplicationId"/>
        	<entity-one value-field="currentApplication" entity-name="LoanApplication">
        		<field-map field-name="loanApplicationId" from-field="loanApplicationId"/>
        	</entity-one>
           <set field="lookedUpValue.updatedBy" from-field="userLogin.userLoginId"/>
           <set field="lookedUpValue.createdBy" from-field="currentApplication.createdBy"/>
            <set field="lookedUpValue.applicationStatus" from-field="currentApplication.applicationStatus"/>
            <set field="lookedUpValue.isActive" from-field="currentApplication.isActive"/>
            <set field="lookedUpValue.loanNo" from-field="currentApplication.loanNo"/>
        
                   <if> 
            <condition> 
                        <if-compare-field to-field="trueStatus" operator="not-equals" field="repaymentPeriodValid"></if-compare-field>
            </condition> 
            <then> 
                <add-error> 
                    <fail-property resource="LoanUiLabels.xml"  
                        property="loanApplicationRepaymentPeriodError" /> 
                </add-error> 
                <check-errors /> 
            </then> 
             
            <else>
            	<store-value value-field="lookedUpValue"/>
                <property-to-field resource="LoanUiLabels.xml" 
            property="loanApplicationRepaymentPeriodSuccess" field="successMessage" /> 
            </else> 
        </if>
        
    </simple-method>
    
    <simple-method method-name="deleteLoanApplication" short-description="Delete Loan Application">
        <entity-one entity-name="LoanApplication" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
    <!-- Loan Security and Loan Status -->
    <simple-method method-name="createLoanSecurity" short-description="Create Loan Security">
        <make-value entity-name="LoanSecurity" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <!-- sequenced-id sequence-name="LoanSecurity" field="loanSecurityId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="loanSecurityId" field="newEntity.loanSecurityId"/ -->
        <set field="entityName" value="LoanSecurity"></set>
		<set field="newEntity.loanSecurityId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
    </simple-method>
    
     <simple-method method-name="updateLoanSecurity" short-description="Update Loan Security">
        <entity-one entity-name="LoanSecurity" value-field="lookedUpValue"/>
        <set-pk-fields value-field="lookedUpValue"  map="parameters" />
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteLoanSecurity" short-description="Delete Loan Security">
        <entity-one entity-name="LoanSecurity" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="createLoanStatus" short-description="Create Loan Status">
        <make-value entity-name="LoanStatus" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        
        <set field="entityName" value="LoanStatus"></set>
		<set field="newEntity.loanStatusId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
        
      
        <create-value value-field="newEntity"/>
    </simple-method>
	
	
	 <simple-method method-name="updateLoanStatus" short-description="Update Loan Status">
        <entity-one entity-name="LoanStatus" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteLoanStatus" short-description="Delete Loan Status">
        <entity-one entity-name="LoanStatus" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
     <simple-method method-name="listLoanApplications" short-description="Get Loan Applications">
        <!-- entity-one entity-name="LoanStatus" value-field="lookedUpValue"/ -->
        <!-- remove-value value-field="lookedUpValue"/ -->
        <!-- set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/ -->
        <entity-condition list="applicationsList" entity-name="LoanApplication"></entity-condition>
    </simple-method>
    
    <!-- Save LoanApplicationSecurity , LoanApplicationCollateral , LoanApplicationGuarantor -->
    <!-- createLoanApplicationSecurity -->
    <simple-method method-name="createLoanApplicationSecurity" short-description="Create Loan Application Security">
        <make-value entity-name="LoanApplicationSecurity" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <!-- sequenced-id sequence-name="LoanApplicationSecurity" field="loanApplicationSecurityId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="loanApplicationSecurityId" field="newEntity.loanApplicationSecurityId"/-->
        <set field="entityName" value="LoanApplicationSecurity"></set>
		<set field="newEntity.loanApplicationSecurityId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
        <set field="loanApplicationId" value="newEntity.loanApplicationId"/>
        <set field="status" value="${bsh:org.ofbiz.loans.LoanServices.updateLoanApplicationToSelfGuaranteed(loanApplicationId);}"/>
    </simple-method>
    <simple-method method-name="updateLoanApplicationSecurity" short-description="Update Loan Application Security">
        <entity-one entity-name="LoanApplicationSecurity" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteLoanApplicationSecurity" short-description="Delete Loan Application Security">
        <entity-one entity-name="LoanApplicationSecurity" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
    <!-- createLoanApplicationCollateral -->


    <simple-method method-name="createLoanApplicationCollateral" short-description="Create Loan Application Collateral">
        <make-value entity-name="LoanApplicationCallateral" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <!-- sequenced-id sequence-name="LoanApplicationCallateral" field="loanApplicationCallateralId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="loanApplicationCallateralId" field="newEntity.loanApplicationCallateralId"/ -->
		<set field="entityName" value="LoanApplicationCallateral"></set>
		<set field="newEntity.loanApplicationCallateralId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
        <create-value value-field="newEntity"/>
    </simple-method>
    <simple-method method-name="updateLoanApplicationCollateral" short-description="Update Loan Application Collateral">
        <entity-one entity-name="LoanApplicationCallateral" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteLoanApplicationCollateral" short-description="Delete Loan Application Collateral">
        <entity-one entity-name="LoanApplicationCallateral" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>



<!-- Loan Application Guarantor Starts Here -->
	<simple-method method-name="createLoanApplicationGuarantor" short-description="Create Loan Application Guarantor">
        <call-simple-method method-name="saveGuarantor" scope="inline"></call-simple-method>
        <!-- Generate the Percentages -->
        <set field="guaranteedPercentage" value="${bsh:org.ofbiz.loans.LoanServices.generateGuarantorPercentages(newEntity);}" type="String"/>
    </simple-method>
    <simple-method method-name="saveGuarantor">
    	<make-value entity-name="LoanGuarantor" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <!-- sequenced-id sequence-name="LoanGuarantor" field="loanGuarantorId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="loanGuarantorId" field="newEntity.loanGuarantorId"/ -->
        <set field="entityName" value="LoanGuarantor"></set>
		<set field="newEntity.loanGuarantorId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
    </simple-method>
    <simple-method method-name="updateLoanApplicationGuarantor" short-description="Update Loan Application Guarantor">
        <entity-one entity-name="LoanGuarantor" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteLoanApplicationGuarantor" short-description="Delete Loan Application Guarantor">
        <entity-one entity-name="LoanGuarantor" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
    <!-- 
    	ReviewLoan
		AppraiseLoan
		ApproveLoan
		DisburseLoan
     -->
     <!-- ReviewLoan -->
     <simple-method method-name="createReviewLoan" short-description="Create Loan Review">
        <make-value entity-name="LoanStatusLog" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="LoanStatusLog" field="loanStatusLogId"/>
        <set from-field="loanStatusLogId" field="newEntity.loanStatusLogId"/>
        <set field="newEntity.isActive" value="Y"/>
        <set field="newEntity.createdBy" from-field="userLogin.userLoginId"/>
        <set field="newEntity.branchId" from-field="userLogin.partyId"/>
        <create-value value-field="newEntity"/>
        
        <set field="loanApplicationId" from-field="newEntity.loanApplicationId"/>
        <entity-one entity-name="LoanApplication" value-field="loanApplication">
        	 <field-map field-name="loanApplicationId" from-field="loanApplicationId"/>
        </entity-one>
        <set from-field="newEntity.applicationStatus" field="loanApplication.applicationStatus"/>
        <store-value value-field="loanApplication"/>
    </simple-method>
    
    <simple-method method-name="updateReviewLoan" short-description="Update Review Loan">
        <entity-one entity-name="LoanStatusLog" value-field="loanStatusLog"/>
        <set-nonpk-fields value-field="loanStatusLog" map="parameters"/>
        <store-value value-field="loanStatusLog"/>
    </simple-method>
    
    <simple-method method-name="deleteReviewLoan" short-description="Delete Loan Review">
        <entity-one entity-name="LoanStatusLog" value-field="loanStatusLog"/>
        <remove-value value-field="loanStatusLog"/>
    </simple-method>
     
     <!-- AppraiseLoan -->
     <simple-method method-name="createAppraiseLoan" short-description="Create Loan Appraisal">
        <make-value entity-name="LoanStatusLog" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="LoanStatusLog" field="loanStatusLogId"/>
        <set from-field="loanStatusLogId" field="newEntity.loanStatusLogId"/>
        <set field="newEntity.isActive" value="Y"/>
        <set field="newEntity.createdBy" from-field="userLogin.userLoginId"/>
        <set field="newEntity.branchId" from-field="userLogin.partyId"/>
        <create-value value-field="newEntity"/>
        
        <set field="loanApplicationId" from-field="newEntity.loanApplicationId"/>
        <entity-one entity-name="LoanApplication" value-field="loanApplication">
        	 <field-map field-name="loanApplicationId" from-field="loanApplicationId"/>
        </entity-one>
        <set from-field="newEntity.applicationStatus" field="loanApplication.applicationStatus"/>
        <store-value value-field="loanApplication"/>
    </simple-method>
    
    <simple-method method-name="updateAppraiseLoan" short-description="Update Loan Appraisal">
        <entity-one entity-name="LoanStatusLog" value-field="loanStatusLog"/>
        <set-nonpk-fields value-field="loanStatusLog" map="parameters"/>
        <store-value value-field="loanStatusLog"/>
    </simple-method>
    
    <simple-method method-name="deleteAppraiseLoan" short-description="Delete Loan Appraisal">
        <entity-one entity-name="LoanStatusLog" value-field="loanStatusLog"/>
        <remove-value value-field="loanStatusLog"/>
    </simple-method>
     <!-- ApproveLoan -->
     <simple-method method-name="createApproveLoan" short-description="Create Loan Approval">
        <make-value entity-name="LoanStatusLog" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="LoanStatusLog" field="loanStatusLogId"/>
        <set from-field="loanStatusLogId" field="newEntity.loanStatusLogId"/>
        <set field="newEntity.isActive" value="Y"/>
        <set field="newEntity.createdBy" from-field="userLogin.userLoginId"/>
        <set field="newEntity.branchId" from-field="userLogin.partyId"/>
        <create-value value-field="newEntity"/>
        
        <set field="loanApplicationId" from-field="newEntity.loanApplicationId"/>
        <entity-one entity-name="LoanApplication" value-field="loanApplication">
        	 <field-map field-name="loanApplicationId" from-field="loanApplicationId"/>
        </entity-one>
        <set from-field="newEntity.applicationStatus" field="loanApplication.applicationStatus"/>
        <store-value value-field="loanApplication"/>
    </simple-method>
    
    <simple-method method-name="updateApproveLoan" short-description="Update Loan Approval">
        <entity-one entity-name="LoanStatusLog" value-field="loanStatusLog"/>
        <set-nonpk-fields value-field="loanStatusLog" map="parameters"/>
        <store-value value-field="loanStatusLog"/>
    </simple-method>
    
    <simple-method method-name="deleteApproveLoan" short-description="Delete Loan Approval">
        <entity-one entity-name="LoanStatusLog" value-field="loanStatusLog"/>
        <remove-value value-field="loanStatusLog"/>
    </simple-method>
     <!-- DisburseLoan -->
     <simple-method method-name="createDisburseLoan" short-description="Create Loan Disbursement">
        <call-simple-method method-name="saveDisbursementRecord" scope="inline"></call-simple-method>
        <set field="loanApplicationId" from-field="loanApplication.loanApplicationId"/>
        <entity-one entity-name="LoanApplication" value-field="loanApplication">
        	 <field-map field-name="loanApplicationId" from-field="loanApplicationId"/>
        </entity-one>
        <set field="repaymentStartDate" value="${bsh:org.ofbiz.loans.LoanServices.calculateLoanRepaymentStartDate(loanApplication);}" type="Timestamp"/>
        <set field="disbursementResult" value="${bsh:org.ofbiz.loans.LoanAccounting.postDisbursement(loanApplication, userLogin);}" type="String"/>
    </simple-method>
    
    <simple-method method-name="saveDisbursementRecord" use-transaction="true">
    	<make-value entity-name="LoanStatusLog" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- sequenced-id sequence-name="LoanStatusLog" field="loanStatusLogId"/>
        <set from-field="loanStatusLogId" field="newEntity.loanStatusLogId"/-->
        
        <set field="entityName" value="LoanStatusLog"></set>
		<set field="newEntity.loanStatusLogId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
        
        <set field="newEntity.isActive" value="Y"/>
        <set field="newEntity.createdBy" from-field="userLogin.userLoginId"/>
        <!-- set field="newEntity.branchId" from-field="userLogin.partyId"/ -->
        <now field="currentDate"/>
        <set field="newEntity.disbursementDate" from-field="currentDate"/>
        <create-value value-field="newEntity"/>
        
        <set field="loanApplicationId" from-field="newEntity.loanApplicationId"/>
        <entity-one entity-name="LoanApplication" value-field="loanApplication">
        	 <field-map field-name="loanApplicationId" from-field="loanApplicationId"/>
        </entity-one>
        <set from-field="newEntity.loanStatusId" field="loanApplication.loanStatusId"/>
        <set from-field="newEntity.disbursementDate" field="loanApplication.disbursementDate"/>
        
        <!--  set from-field="newEntity.repaymentStartDate" field="loanApplication.repaymentStartDate"/ -->
        <set value="Y" field="loanApplication.isDisbursed"/>
        
        <store-value value-field="loanApplication"/>
    </simple-method>
    
    <simple-method method-name="updateDisburseLoan" short-description="Update Loan Disbursement">
        <entity-one entity-name="LoanStatusLog" value-field="loanStatusLog"/>
        <set-nonpk-fields value-field="loanStatusLog" map="parameters"/>
        <store-value value-field="loanStatusLog"/>
    </simple-method>
    
    <simple-method method-name="deleteDisburseLoan" short-description="Delete Loan Disbursement">
        <entity-one entity-name="LoanStatusLog" value-field="loanStatusLog"/>
        <remove-value value-field="loanStatusLog"/>
    </simple-method>
    
    <!-- SalaryProcessingDate -->
       <simple-method method-name="createSalaryProcessingDate" short-description="Create SalaryProcessingDate">
        <make-value entity-name="SalaryProcessingDate" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="SalaryProcessingDate" field="salaryProcessingDateId"/>
        <set from-field="salaryProcessingDateId" field="newEntity.salaryProcessingDateId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
    </simple-method>
    
     <simple-method method-name="updateSalaryProcessingDate" short-description="Update SalaryProcessingDate">
        <entity-one entity-name="SalaryProcessingDate" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteSalaryProcessingDate" short-description="Delete SalaryProcessingDate">
        <entity-one entity-name="SalaryProcessingDate" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
    <!-- ProductCharge -->
    <simple-method method-name="createProductCharge" short-description="Create ProductCharge">
        <make-value entity-name="ProductCharge" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <set field="entityName" value="ProductCharge"></set>
		<set field="newEntity.productChargeId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
    </simple-method>
    
     <simple-method method-name="updateProductCharge" short-description="Update ProductCharge">
        <entity-one entity-name="ProductCharge" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteProductCharge" short-description="Delete ProductCharge">
        <entity-one entity-name="ProductCharge" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
    <!-- LoanProductCharge -->
        <simple-method method-name="createLoanProductCharge" short-description="Create LoanProductCharge">
        <make-value entity-name="LoanProductCharge" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <set field="entityName" value="LoanProductCharge"></set>
		<set field="newEntity.loanProductChargeId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
        
        <set field="newEntity.isActive" value="Y"/>
	    <set field="newEntity.createdBy" from-field="userLogin.userLoginId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
    </simple-method>
    
     <simple-method method-name="updateLoanProductCharge" short-description="Update LoanProductCharge">
        <entity-one entity-name="LoanProductCharge" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteLoanProductCharge" short-description="Delete LoanProductCharge">
        <entity-one entity-name="LoanProductCharge" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
    <!-- LoanApplicationCharge -->
    <simple-method method-name="createLoanApplicationCharge" short-description="Create LoanApplicationCharge">
        <make-value entity-name="LoanApplicationCharge" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <set field="entityName" value="LoanApplicationCharge"></set>
		<set field="newEntity.loanApplicationChargeId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
        <create-value value-field="newEntity"/>
    </simple-method>
    
     <simple-method method-name="updateLoanApplicationCharge" short-description="Update LoanApplicationCharge">
        <entity-one entity-name="LoanApplicationCharge" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteLoanApplicationCharge" short-description="Delete LoanApplicationCharge">
        <entity-one entity-name="LoanApplicationCharge" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
    <!-- AccountProductCharge -->
     <simple-method method-name="createAccountProductCharge" short-description="Create AccountProductCharge">
        <make-value entity-name="AccountProductCharge" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <!-- sequenced-id sequence-name="AccountProductCharge" field="accountProductChargeId"/>

        <set from-field="accountProductChargeId" field="newEntity.accountProductChargeId"/ -->
        <set field="entityName" value="AccountProductCharge"></set>
		<set field="newEntity.accountProductChargeId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
        <set field="newEntity.isActive" value="Y"/>
	    <set field="newEntity.createdBy" from-field="userLogin.userLoginId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
    </simple-method>
    
     <simple-method method-name="updateAccountProductCharge" short-description="Update AccountProductCharge">
        <entity-one entity-name="AccountProductCharge" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteAccountProductCharge" short-description="Delete AccountProductCharge">
        <entity-one entity-name="AccountProductCharge" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
     <simple-method method-name="createLoanProductClass" short-description="Create LoanProductClass">
        <make-value entity-name="LoanProductClass" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <set field="newEntity.isActive" value="Y"/>
	    <set field="newEntity.createdBy" from-field="userLogin.userLoginId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
     <simple-method method-name="updateLoanProductClass" short-description="Update LoanProductClass">
        <entity-one entity-name="LoanProductClass" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteLoanProductClass" short-description="Delete LoanProductClass">
        <entity-one entity-name="LoanProductClass" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
    <!-- LoanStatusChange -->
     <simple-method method-name="createLoanStatusChange" short-description="Create LoanStatusChange">
			<call-simple-method method-name="saveLoanStatusChange" scope="inline"></call-simple-method>
			<!-- Get Loan Application and update -->
			<entity-one entity-name="LoanApplication" value-field="loanApplication">
				<field-map field-name="loanApplicationId" value="${newEntity.loanApplicationId}"></field-map>
			</entity-one>
			<set field="loanApplication.applicationStatus" value="${newEntity.toStatus}"></set>
			<store-value value-field="loanApplication"></store-value>
			
    </simple-method>
    <simple-method method-name="saveLoanStatusChange" use-transaction="true">
    	<make-value entity-name="LoanStatusChange" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="LoanStatusChange" field="loanStatusChangeId"/>
        <set from-field="loanStatusChangeId" field="newEntity.loanStatusChangeId"/>
        <set field="newEntity.isActive" value="Y"/>
	    <set field="newEntity.changedBy" from-field="userLogin.userLoginId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
     <simple-method method-name="updateLoanStatusChange" short-description="Update LoanStatusChange">
        <entity-one entity-name="LoanStatusChange" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteLoanStatusChange" short-description="Delete LoanStatusChange">
        <entity-one entity-name="LoanStatusChange" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
    <!-- LoanInterestChange -->
     <simple-method method-name="createLoanInterestChange" short-description="Create LoanInterestChange">
        
        
        <call-simple-method method-name="saveInterestChange" scope="inline"></call-simple-method>
        <!-- Get Loan Application and update -->
		<entity-one entity-name="LoanApplication" value-field="loanApplication">
				<field-map field-name="loanApplicationId" value="${newEntity.loanApplicationId}"></field-map>
		</entity-one>
		<set field="loanApplication.interestRatePM" value="${newEntity.toInterestRate}"></set>
		<store-value value-field="loanApplication"></store-value>
    </simple-method>
    <simple-method method-name="saveInterestChange" use-transaction="true">
    	<make-value entity-name="LoanInterestChange" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="LoanInterestChange" field="loanInterestChangeId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="loanInterestChangeId" field="newEntity.loanInterestChangeId"/>
        <set field="newEntity.isActive" value="Y"/>
	    <set field="newEntity.changedBy" from-field="userLogin.userLoginId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
     <simple-method method-name="updateLoanInterestChange" short-description="Update LoanInterestChange">
        <entity-one entity-name="LoanInterestChange" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteLoanInterestChange" short-description="Delete LoanInterestChange">
        <entity-one entity-name="LoanInterestChange" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
    <!-- LoanAmountChange -->
     <simple-method method-name="createLoanAmountChange" short-description="Create LoanAmountChange">
        <call-simple-method method-name="saveLoanAmountChange" scope="inline"></call-simple-method>
        <!-- Get Loan Application and update -->
		<entity-one entity-name="LoanApplication" value-field="loanApplication">
				<field-map field-name="loanApplicationId" value="${newEntity.loanApplicationId}"></field-map>
		</entity-one>
		<set field="loanApplication.loanAmt" value="${newEntity.toAmount}"></set>
		<store-value value-field="loanApplication"></store-value>
    </simple-method>
    <simple-method method-name="saveLoanAmountChange" use-transaction="true">
    	<make-value entity-name="LoanAmountChange" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="LoanAmountChange" field="loanAmountChangeId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="loanAmountChangeId" field="newEntity.loanAmountChangeId"/>
        <set field="newEntity.isActive" value="Y"/>
	    <set field="newEntity.changedBy" from-field="userLogin.userLoginId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
     <simple-method method-name="updateLoanAmountChange" short-description="Update LoanAmountChange">
        <entity-one entity-name="LoanAmountChange" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteLoanAmountChange" short-description="Delete LoanAmountChange">
        <entity-one entity-name="LoanAmountChange" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
    <!-- LoanRepaymentPeriodChange -->
     <simple-method method-name="createLoanRepaymentPeriodChange" short-description="Create LoanRepaymentPeriodChange">
        <call-simple-method method-name="saveRepaymentPeriodChange" scope="inline"></call-simple-method>
        <!-- Get Loan Application and update -->
		<entity-one entity-name="LoanApplication" value-field="loanApplication">
				<field-map field-name="loanApplicationId" value="${newEntity.loanApplicationId}"></field-map>
		</entity-one>
		<set field="loanApplication.repaymentPeriod" value="${newEntity.toPeriod}"></set>
		<store-value value-field="loanApplication"></store-value>
    </simple-method>
    <simple-method method-name="saveRepaymentPeriodChange" use-transaction="true">
        <make-value entity-name="LoanRepaymentPeriodChange" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="LoanRepaymentPeriodChange" field="loanRepaymentPeriodChangeId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="loanRepaymentPeriodChangeId" field="newEntity.loanRepaymentPeriodChangeId"/>
        <set field="newEntity.isActive" value="Y"/>
	    <set field="newEntity.changedBy" from-field="userLogin.userLoginId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
     <simple-method method-name="updateLoanRepaymentPeriodChange" short-description="Update LoanRepaymentPeriodChange">
        <entity-one entity-name="LoanRepaymentPeriodChange" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteLoanRepaymentPeriodChange" short-description="Delete LoanRepaymentPeriodChange">
        <entity-one entity-name="LoanRepaymentPeriodChange" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    <!-- LoanSalaryAmount -->
     <simple-method method-name="createLoanSalaryAmount" short-description="Create LoanSalaryAmount">
        <call-simple-method method-name="saveSalaryAmountChange" scope="inline"></call-simple-method>
        <!-- Get Loan Application and update -->
		<entity-one entity-name="LoanApplication" value-field="loanApplication">
				<field-map field-name="loanApplicationId" value="${newEntity.loanApplicationId}"></field-map>
		</entity-one>
		<set field="loanApplication.salaryAmt" value="${newEntity.toSalaryAmount}"></set>
		<store-value value-field="loanApplication"></store-value>
    </simple-method>
    <simple-method method-name="saveSalaryAmountChange" use-transaction="true">
    	<make-value entity-name="LoanSalaryAmount" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="LoanSalaryAmount" field="loanSalaryAmountId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="loanSalaryAmountId" field="newEntity.loanSalaryAmountId"/>
        <set field="newEntity.isActive" value="Y"/>
	    <set field="newEntity.changedBy" from-field="userLogin.userLoginId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
     <simple-method method-name="updateLoanSalaryAmount" short-description="Update LoanSalaryAmount">
        <entity-one entity-name="LoanSalaryAmount" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteLoanSalaryAmount" short-description="Delete LoanSalaryAmount">
        <entity-one entity-name="LoanSalaryAmount" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
    <!-- LoanGuarantorChange -->
     <simple-method method-name="createLoanGuarantorChange" short-description="Create LoanGuarantorChange">
        <make-value entity-name="LoanGuarantorChange" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <!-- sequenced-id sequence-name="LoanGuarantorChange" field="loanGuarantorChangeId"/ -->
        <now-timestamp field="newEntity.createdDate"/>
        <!-- set from-field="loanGuarantorChangeId" field="newEntity.loanGuarantorChangeId"/ -->
        <set field="entityName" value="LoanGuarantorChange"></set>
        
        <set field="newEntity.loanGuarantorChangeId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
        
        <set field="newEntity.isActive" value="Y"/>
	    <set field="newEntity.changedBy" from-field="userLogin.userLoginId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
     <simple-method method-name="updateLoanGuarantorChange" short-description="Update LoanGuarantorChange">
        <entity-one entity-name="LoanGuarantorChange" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteLoanGuarantorChange" short-description="Delete LoanGuarantorChange">
        <entity-one entity-name="LoanGuarantorChange" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
    <!-- returnToCustomerCareProcess -->
    <simple-method method-name="returnToCustomerCareProcess" short-description="Return to CustomerCare">
		<call-simple-method method-name="saveReturnToCustomerCare" scope="inline"></call-simple-method>
		
		<!-- Update Application Status -->
		<entity-one entity-name="LoanApplication" value-field="loanApplication">
			<field-map field-name="loanApplicationId" value="${newEntity.loanApplicationId}"/>
		</entity-one>
		<set field="loanApplication.loanStatusId" value="${newEntity.loanStatusId}"/>
        <store-value value-field="loanApplication"/>
    </simple-method>
    
    
    
   <simple-method method-name="createLoanAppraisal" short-description="Loan Appraisal">
		<call-simple-method method-name="saveReturnToCustomerCare" scope="inline"></call-simple-method>
		
		<!-- Update Application Status -->
		<entity-one entity-name="LoanApplication" value-field="loanApplication">
			<field-map field-name="loanApplicationId" value="${newEntity.loanApplicationId}"/>
		</entity-one>
		<set field="loanApplication.loanStatusId" value="${newEntity.loanStatusId}"/>
		
		<set field="loanApplication.loanAmt" value="${newEntity.appraisedAmt}" type="BigDecimal"/>
		<set field="loanApplication.appraisedAmt" value="${newEntity.appraisedAmt}" type="BigDecimal"/>
		<set field="loanApplication.updatedBy" from-field="userLogin.userLoginId"/>
		
		<log level="info" message="AAAAAAAAAA Appraised Amount in Log ${newEntity.appraisedAmt}"/>
		<log level="info" message="AAAAAAAAAA Appraised Amount in Application ${loanApplication.appraisedAmt}"/>
        <store-value value-field="loanApplication"/>
    </simple-method>
    
    
   <simple-method method-name="createLoanApproval" short-description="Loan Approval">
		<call-simple-method method-name="saveReturnToCustomerCare" scope="inline"></call-simple-method>
		
		<!-- Update Application Status -->
		<entity-one entity-name="LoanApplication" value-field="loanApplication">
			<field-map field-name="loanApplicationId" value="${newEntity.loanApplicationId}"/>
		</entity-one>
		<set field="loanApplication.loanStatusId" value="${newEntity.loanStatusId}"/>
		
		<set field="loanApplication.loanAmt" value="${newEntity.approvedAmt}" type="BigDecimal"/>
		<set field="loanApplication.approvedAmt" value="${newEntity.approvedAmt}" type="BigDecimal"/>
		<set field="loanApplication.updatedBy" from-field="userLogin.userLoginId"/>
		
		<log level="info" message="AAAAAAAAAA Approved Amount in Log ${newEntity.approvedAmt}"/>
		<log level="info" message="AAAAAAAAAA Approved Amount in Application ${loanApplication.approvedAmt}"/>
        <store-value value-field="loanApplication"/>
    </simple-method>   
    
    
       <simple-method method-name="createReturnToLoans" short-description="Return to Loans">
		<call-simple-method method-name="saveReturnToCustomerCare" scope="inline"></call-simple-method>
		
		<!-- Update Application Status -->
		<entity-one entity-name="LoanApplication" value-field="loanApplication">
			<field-map field-name="loanApplicationId" value="${newEntity.loanApplicationId}"/>
		</entity-one>
		<set field="loanApplication.loanStatusId" value="${newEntity.loanStatusId}"/>
		<set field="loanApplication.updatedBy" from-field="userLogin.userLoginId"/>
        <store-value value-field="loanApplication"/>
    </simple-method> 
    <simple-method method-name="saveReturnToCustomerCare" use-transaction="true">
    	<make-value entity-name="LoanStatusLog" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <set field="entityName" value="LoanStatusLog"></set>
        <set field="newEntity.loanStatusLogId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
        <set field="newEntity.isActive" value="Y"/>
       	<set field="newEntity.createdBy" from-field="userLogin.userLoginId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <!-- MonthlyRepaymentChange -->
      <simple-method method-name="createMonthlyRepaymentChange" short-description="Create MonthlyRepaymentChange">
        <call-simple-method method-name="saveMonthlyRepaymentChange" scope="inline"></call-simple-method>
        <!-- Get Loan Application and update -->
		<entity-one entity-name="LoanApplication" value-field="loanApplication">
				<field-map field-name="loanApplicationId" value="${newEntity.loanApplicationId}"></field-map>
		</entity-one>
		<set field="loanApplication.monthlyRepayment" value="${newEntity.toMonthlyRepayment}"></set>
		<store-value value-field="loanApplication"></store-value>
    </simple-method>
    <simple-method method-name="saveMonthlyRepaymentChange" use-transaction="true">
    	<make-value entity-name="MonthlyRepaymentChange" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        
       <set field="entityName" value="MonthlyRepaymentChange"></set>
       <set field="newEntity.monthlyRepaymentChangeId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
        
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="monthlyRepaymentChangeId" field="newEntity.monthlyRepaymentChangeId"/>
        <set field="newEntity.isActive" value="Y"/>
	    <set field="newEntity.changedBy" from-field="userLogin.userLoginId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
     <simple-method method-name="updateMonthlyRepaymentChange" short-description="Update MonthlyRepaymentChange">
        <entity-one entity-name="MonthlyRepaymentChange" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteMonthlyRepaymentChange" short-description="Delete MonthlyRepaymentChange">
        <entity-one entity-name="MonthlyRepaymentChange" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
    
      <simple-method method-name="createLoanVariation" short-description="Create LoanVariation">
        	<call-simple-method method-name="saveLoanVariation" scope="inline"></call-simple-method>
        	
        	<entity-one value-field="loanApplication" entity-name="LoanApplication">
        		<field-map field-name="loanApplicationId" value="${newEntity.loanApplicationId}"/>
        	</entity-one>
        	
        	<set field="loanApplication.monthlyRepayment" value="${newEntity.newAmount}"/>
        	<store-value value-field="loanApplication"/>
    </simple-method>
    
    <simple-method method-name="saveLoanVariation">
    	<make-value entity-name="LoanVariation" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <set field="entityName" value="LoanVariation"></set>
        <set field="newEntity.loanVariationId" value="${bsh:org.ofbiz.party.party.SaccoUtility.getNextSequenc(entityName);}"></set>
        
        <set field="newEntity.isActive" value="Y"/>
        <set field="newEntity.closed" value="NO"/>
	    <set field="newEntity.createdBy" from-field="userLogin.userLoginId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
     <simple-method method-name="updateLoanVariation" short-description="Update LoanVariation">
        <entity-one entity-name="LoanVariation" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteLoanVariation" short-description="Delete LoanVariation">
        <entity-one entity-name="LoanVariation" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
 
    
    
</simple-methods>