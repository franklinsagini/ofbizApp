<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor 
	license agreements. See the NOTICE file distributed with this work for additional 
	information regarding copyright ownership. The ASF licenses this file to 
	you under the Apache License, Version 2.0 (the "License"); you may not use 
	this file except in compliance with the License. You may obtain a copy of 
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods-v2.xsd">

	<!-- Relationships Methods -->
	<simple-method method-name="createRelationships"
		short-description="Create Relationship">
		<make-value entity-name="Relationship" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
		<sequenced-id sequence-name="Relationship" field="relationshipId" />
		<now-timestamp field="newEntity.createdDate" />
		<set from-field="relationshipId" field="newEntity.relationshipId" />
		<!-- set field="entity.loanStatus" value="DRAFT"/ -->
		<!-- set field="productType" value="Loan"/ -->
		<create-value value-field="newEntity" />
	</simple-method>

	<simple-method method-name="updateRelationships"
		short-description="Update Relationship">
		<entity-one entity-name="Relationship" value-field="relationship" />
		<set-nonpk-fields value-field="relationship" map="parameters" />
		<store-value value-field="relationship" />
	</simple-method>

	<simple-method method-name="deleteRelationships"
		short-description="Delete Relationship">
		<entity-one entity-name="Relationship" value-field="relationship" />
		<remove-value value-field="relationship" />
	</simple-method>

	<!-- employmentDetails -->

	
	
	
	 <simple-method method-name="createEmploymentDetails" short-description="Create Employment Details">
        <make-value entity-name="EmploymentDetails" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="EmploymentDetails" field="employmentDetailsId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="employmentDetailsId" field="newEntity.employmentDetailsId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateEmploymentDetails" short-description="Update EmploymentDetails">
        <entity-one entity-name="EmploymentDetails" value-field="employmentDetails"/>
        <set-nonpk-fields value-field="employmentDetails" map="parameters"/>
        <store-value value-field="employmentDetails"/>
    </simple-method>
    
    <simple-method method-name="deleteEmploymentDetails" short-description="Delete EmploymentDetails">
        <entity-one entity-name="EmploymentDetails" value-field="employmentDetails"/>
        <remove-value value-field="employmentDetails"/>
    </simple-method>

	<!-- businessDetails -->
	 <simple-method method-name="createBusinessDetails" short-description="Create BusinessDetails">
        <make-value entity-name="BusinessDetails" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="BusinessDetails" field="businessDetailsId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="businessDetailsId" field="newEntity.businessDetailsId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateBusinessDetails" short-description="Update Business Details">
        <entity-one entity-name="BusinessDetails" value-field="businessDetails"/>
        <set-nonpk-fields value-field="businessDetails" map="parameters"/>
        <store-value value-field="businessDetails"/>
    </simple-method>
    
    <simple-method method-name="deleteBusinessDetails" short-description="Delete BusinessDetails">
        <entity-one entity-name="BusinessDetails" value-field="businessDetails"/>
        <remove-value value-field="businessDetails"/>
    </simple-method>

	<!-- memberContribution -->
	
	
	
	 <simple-method method-name="createMemberContribution" short-description="Create Member Contributions">
        <make-value entity-name="MemberContribution" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="MemberContribution" field="memberContributionId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="memberContributionId" field="newEntity.memberContributionId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateMemberContribution" short-description="Update Member Contribution">
        <entity-one entity-name="MemberContribution" value-field="memberContribution"/>
        <set-nonpk-fields value-field="memberContribution" map="parameters"/>
        <store-value value-field="memberContribution"/>
    </simple-method>
    
    <simple-method method-name="deleteMemberContribution" short-description="Delete Member Contribution">
        <entity-one entity-name="MemberContribution" value-field="memberContribution"/>
        <remove-value value-field="memberContribution"/>
    </simple-method>

	<!-- memberAccount -->
	
	
	
	 <simple-method method-name="createMemberAccount" short-description="Create Member Account">
        <make-value entity-name="MemberAccount" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="MemberAccount" field="memberAccountId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="memberAccountId" field="newEntity.memberAccountId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateMemberAccount" short-description="Update MemberAccount">
        <entity-one entity-name="MemberAccount" value-field="memberAccount"/>
        <set-nonpk-fields value-field="memberAccount" map="parameters"/>
        <store-value value-field="memberAccount"/>
    </simple-method>
    
    <simple-method method-name="deleteMemberAccount" short-description="Delete MemberAccount">
        <entity-one entity-name="MemberAccount" value-field="memberAccount"/>
        <remove-value value-field="memberAccount"/>
    </simple-method>

	<!-- memberReferee -->
	
	
	
	 <simple-method method-name="createMemberReferee" short-description="Create Member Referee">
        <make-value entity-name="MemberReferee" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="MemberReferee" field="memberRefereeId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="memberRefereeId" field="newEntity.memberRefereeId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateMemberReferee" short-description="Update MemberReferee">
        <entity-one entity-name="MemberReferee" value-field="memberReferee"/>
        <set-nonpk-fields value-field="memberReferee" map="parameters"/>
        <store-value value-field="memberReferee"/>
    </simple-method>
    
    <simple-method method-name="deleteMemberReferee" short-description="Delete Member Referee">
        <entity-one entity-name="MemberReferee" value-field="memberReferee"/>
        <remove-value value-field="memberReferee"/>
    </simple-method>

	<!-- memberNominee -->
	
	
	
	 <simple-method method-name="createMemberNominee" short-description="Create Nominee">
        <make-value entity-name="MemberNominee" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="MemberNominee" field="memberNomineeId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="memberNomineeId" field="newEntity.memberNomineeId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateMemberNominee" short-description="Update Nominee">
        <entity-one entity-name="MemberNominee" value-field="memberNominee"/>
        <set-nonpk-fields value-field="memberNominee" map="parameters"/>
        <store-value value-field="memberNominee"/>
    </simple-method>
    
    <simple-method method-name="deleteMemberNominee" short-description="Delete Member Nominee">
        <entity-one entity-name="MemberNominee" value-field="memberNominee"/>
        <remove-value value-field="memberNominee"/>
    </simple-method>

	<!-- termsAndConditions -->

	 <simple-method method-name="createTermsAndConditions" short-description="Create Terms and Conditions">
        <make-value entity-name="TermsAndConditions" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="TermsAndConditions" field="termsAndConditionsId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="termsAndConditionsId" field="newEntity.termsAndConditionsId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateTermsAndConditions" short-description="Update Terms and Conditions">
        <entity-one entity-name="TermsAndConditions" value-field="termsAndConditions"/>
        <set-nonpk-fields value-field="termsAndConditions" map="parameters"/>
        <store-value value-field="termsAndConditions"/>
    </simple-method>
    
    <simple-method method-name="deleteTermsAndConditions" short-description="Delete Terms and Conditions">
        <entity-one entity-name="TermsAndConditions" value-field="termsAndConditions"/>
        <remove-value value-field="termsAndConditions"/>
    </simple-method>

	<!-- sourceOfFunds -->
	
	 <simple-method method-name="createSourceOfFunds" short-description="Create SourceOfFunds">
        <make-value entity-name="SourceOfFund" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="SourceOfFund" field="sourceOfFundId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="sourceOfFundId" field="newEntity.sourceOfFundId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateSourceOfFunds" short-description="Update Source Of Funds">
        <entity-one entity-name="SourceOfFunds" value-field="sourceOfFunds"/>
        <set-nonpk-fields value-field="sourceOfFunds" map="parameters"/>
        <store-value value-field="sourceOfFunds"/>
    </simple-method>
    
    <simple-method method-name="deleteSourceOfFunds" short-description="Delete Source Of Funds">
        <entity-one entity-name="SourceOfFunds" value-field="sourceOfFunds"/>
        <remove-value value-field="sourceOfFunds"/>
    </simple-method>

	<!-- employers -->
	
	 <simple-method method-name="createEmployers" short-description="Create Employer">
        <make-value entity-name="Employer" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="Employer" field="employerId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="employerId" field="newEntity.employerId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateEmployers" short-description="Update Employer">
        <entity-one entity-name="Employer" value-field="employer"/>
        <set-nonpk-fields value-field="employer" map="parameters"/>
        <store-value value-field="employer"/>
    </simple-method>
    
    <simple-method method-name="deleteEmployers" short-description="Delete Employer">
        <entity-one entity-name="Employer" value-field="employer"/>
        <remove-value value-field="employer"/>
    </simple-method>
    
    <!--  openingBalance     -->
    <simple-method method-name="createOpeningBalance" short-description="Create Opening Balance">
        <make-value entity-name="MemberAccountDetails" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="MemberAccountDetails" field="memberAccountDetailsId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="memberAccountDetailsId" field="newEntity.memberAccountDetailsId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateOpeningBalance" short-description="Update MemberAccountDetails">
        <entity-one entity-name="MemberAccountDetails" value-field="memberAccountDetails"/>
        <set-nonpk-fields value-field="memberAccountDetails" map="parameters"/>
        <store-value value-field="memberAccountDetails"/>
    </simple-method>
    
    <simple-method method-name="deleteOpeningBalance" short-description="Delete MemberAccountDetails">
        <entity-one entity-name="MemberAccountDetails" value-field="memberAccountDetails"/>
        <remove-value value-field="memberAccountDetails"/>
    </simple-method>
    
     <!-- memberLoanBalance -->
     <simple-method method-name="createLoanBalance" short-description="Create LoanApplication">
        <make-value entity-name="LoanApplication" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="LoanApplication" field="loanApplicationId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="loanApplicationId" field="newEntity.loanApplicationId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateLoanBalance" short-description="Update LoanApplication">
        <entity-one entity-name="LoanApplication" value-field="loanApplication"/>
        <set-nonpk-fields value-field="loanApplication" map="parameters"/>
        <store-value value-field="loanApplication"/>
    </simple-method>
    
    <simple-method method-name="deleteLoanBalance" short-description="Delete LoanApplication">
        <entity-one entity-name="LoanApplication" value-field="loanApplication"/>
        <remove-value value-field="loanApplication"/>
    </simple-method>
     <!-- memberShareBalance -->
     <simple-method method-name="createShareBalance" short-description="Create Share Balance">
        <make-value entity-name="MemberShare" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="MemberShare" field="memberShareId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="memberShareId" field="newEntity.memberShareId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateShareBalance" short-description="Update Share Balance">
        <entity-one entity-name="MemberShare" value-field="memberShare"/>
        <set-nonpk-fields value-field="memberShare" map="parameters"/>
        <store-value value-field="memberShare"/>
    </simple-method>
    
    <simple-method method-name="deleteShareBalance" short-description="Delete Share Balance">
        <entity-one entity-name="MemberShare" value-field="memberShare"/>
        <remove-value value-field="memberShare"/>
    </simple-method>
    
    <!-- Account Status -->
     <simple-method method-name="createAccountStatus" short-description="Create Account Status">
        <make-value entity-name="AccountStatus" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="AccountStatus" field="accountStatusId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="accountStatusId" field="newEntity.accountStatusId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateAccountStatus" short-description="Update Account Status">
        <entity-one entity-name="AccountStatus" value-field="accountStatus"/>
        <set-nonpk-fields value-field="accountStatus" map="parameters"/>
        <store-value value-field="accountStatus"/>
    </simple-method>
    
    <simple-method method-name="deletAccountStatus" short-description="Delete Account Status">
        <entity-one entity-name="AccountStatus" value-field="accountStatus"/>
        <remove-value value-field="accountStatus"/>
    </simple-method>
    
    <!-- Approve Member -->
    <simple-method method-name="createApproveMemberLog" short-description="Create Member Status Log">
        <make-value entity-name="MemberStatusLog" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="MemberStatusLog" field="memberStatusLogId"/>
        <set from-field="memberStatusLogId" field="newEntity.memberStatusLogId"/>
        <set value="ACTIVE" field="newEntity.memberStatus"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <set field="newEntity.isActive" value="Y"/>
        <set field="newEntity.createdBy" from-field="userLogin.userLoginId"/>
        <set field="newEntity.branchId" from-field="userLogin.partyId"/>
        <create-value value-field="newEntity"/>
        
        <set field="partyId" from-field="newEntity.partyId"/>
        <entity-one entity-name="Member" value-field="member">
        	 <field-map field-name="partyId" from-field="partyId"/>
        </entity-one>
        <set value="ACTIVE" field="member.memberStatus"/>
        <store-value value-field="member"/>
    </simple-method>
    
    <simple-method method-name="updateApproveMemberLog" short-description="Update Member Status Log">
        <entity-one entity-name="MemberStatusLog" value-field="memberStatusLog"/>
        <set-nonpk-fields value-field="memberStatusLog" map="parameters"/>
        <store-value value-field="memberStatusLog"/>
    </simple-method>
    
    <simple-method method-name="deleteApproveMemberLog" short-description="Delete Member Status Log">
        <entity-one entity-name="MemberStatusLog" value-field="memberStatusLog"/>
        <remove-value value-field="memberStatusLog"/>
    </simple-method>
    
    <!-- Reject Member -->
    <simple-method method-name="createRejectMemberLog" short-description="Create Member Status Log">
        <make-value entity-name="MemberStatusLog" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="MemberStatusLog" field="memberStatusLogId"/>
        <set from-field="memberStatusLogId" field="newEntity.memberStatusLogId"/>
        <set value="REJECTED" field="newEntity.memberStatus"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <set field="newEntity.isActive" value="Y"/>
        <set field="newEntity.createdBy" from-field="userLogin.userLoginId"/>
        <set field="newEntity.branchId" from-field="userLogin.partyId"/>
        <create-value value-field="newEntity"/>
        
        <set field="partyId" from-field="newEntity.partyId"/>
        <entity-one entity-name="Member" value-field="member">
        	 <field-map field-name="partyId" from-field="partyId"/>
        </entity-one>
        <set value="REJECTED" field="member.memberStatus"/>
        <store-value value-field="member"/>
        
    </simple-method>
    
    <simple-method method-name="updateRejectMemberLog" short-description="Update Member Status Log">
        <entity-one entity-name="MemberStatusLog" value-field="memberStatusLog"/>
        <set-nonpk-fields value-field="memberStatusLog" map="parameters"/>
        <store-value value-field="memberStatusLog"/>
    </simple-method>
    
    <simple-method method-name="deleteRejectMemberLog" short-description="Delete Member Status Log">
        <entity-one entity-name="MemberStatusLog" value-field="memberStatusLog"/>
        <remove-value value-field="memberStatusLog"/>
    </simple-method>
    
    <!-- Change Member Status -->
    <simple-method method-name="createChangeMemberStatus" short-description="Create Change Member Status">
        <make-value entity-name="MemberStatusLog" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="MemberStatusLog" field="memberStatusLogId"/>
        <set from-field="memberStatusLogId" field="newEntity.memberStatusLogId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <set field="newEntity.isActive" value="Y"/>
        <set field="newEntity.createdBy" from-field="userLogin.userLoginId"/>
        <set field="newEntity.branchId" from-field="userLogin.partyId"/>
        <create-value value-field="newEntity"/>
        
        <set field="partyId" from-field="newEntity.partyId"/>
        <entity-one entity-name="Member" value-field="member">
        	 <field-map field-name="partyId" from-field="partyId"/>
        </entity-one>
        <set from-field="newEntity.memberStatus" field="member.memberStatus"/>
        <store-value value-field="member"/>
    </simple-method>
    
    <simple-method method-name="updateChangeMemberStatus" short-description="Update Change Member Status">
        <entity-one entity-name="MemberStatusLog" value-field="memberStatusLog"/>
        <set-nonpk-fields value-field="memberStatusLog" map="parameters"/>
        <store-value value-field="memberStatusLog"/>
    </simple-method>
    
    <simple-method method-name="deleteChangeMemberStatus" short-description="Delete Change Member Status">
        <entity-one entity-name="MemberStatusLog" value-field="memberStatusLog"/>
        <remove-value value-field="memberStatusLog"/>
    </simple-method>
    
    <!-- ChangeMemberStation -->
     <simple-method method-name="createChangeMemberStation" short-description="Create ChangeMemberStation">
		<call-simple-method method-name="saveMemberStation" scope="inline"></call-simple-method>
		<!-- Update Member with new station -->
		<entity-one value-field="member" entity-name="Member">
			<field-map field-name="partyId" value="${newEntity.partyId}"/>
		</entity-one>
		<set field="member.stationId" value="${newEntity.toStation}"/>
		<store-value value-field="member"/>
    </simple-method>
    <simple-method method-name="saveMemberStation">
    	<make-value entity-name="ChangeMemberStation" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="ChangeMemberStation" field="changeMemberStationId"/>
        <set from-field="changeMemberStationId" field="newEntity.changeMemberStationId"/>
        <set field="newEntity.changedBy" from-field="userLogin.userLoginId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateChangeMemberStation" short-description="Update ChangeMemberStation">
        <entity-one entity-name="ChangeMemberStation" value-field="lookUpValue"/>
        <set-nonpk-fields value-field="lookUpValue" map="parameters"/>
        <store-value value-field="lookUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteChangeMemberStation" short-description="Delete ChangeMemberStation">
        <entity-one entity-name="ChangeMemberStation" value-field="lookUpValue"/>
        <remove-value value-field="lookUpValue"/>
    </simple-method>
    <!-- ChangeMemberEmploymentType -->
     <simple-method method-name="createChangeMemberEmploymentType" short-description="Create ChangeMemberEmploymentType">
        
        <call-simple-method method-name="saveEmployeeType" scope="inline"></call-simple-method>
		<!-- Update Member with new station -->
		<entity-one value-field="member" entity-name="Member">
			<field-map field-name="partyId" value="${newEntity.partyId}"/>
		</entity-one>
		<set field="member.employeeType" value="${newEntity.toEmploymentType}"/>
		<store-value value-field="member"/>
    </simple-method>
    
    <simple-method method-name="saveEmployeeType">
    	<make-value entity-name="ChangeMemberEmploymentType" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="ChangeMemberEmploymentType" field="changeMemberEmploymentTypeId"/>
        <set from-field="changeMemberEmploymentTypeId" field="newEntity.changeMemberEmploymentTypeId"/>
        <set field="newEntity.changedBy" from-field="userLogin.userLoginId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateChangeMemberEmploymentType" short-description="Update ChangeMemberEmploymentType">
        <entity-one entity-name="ChangeMemberEmploymentType" value-field="lookUpValue"/>
        <set-nonpk-fields value-field="lookUpValue" map="parameters"/>
        <store-value value-field="lookUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteChangeMemberEmploymentType" short-description="Delete ChangeMemberEmploymentType">
        <entity-one entity-name="ChangeMemberEmploymentType" value-field="lookUpValue"/>
        <remove-value value-field="lookUpValue"/>
    </simple-method>
    <!-- ChangeMemberEmployeeNumber -->
     <simple-method method-name="createChangeMemberEmployeeNumber" short-description="Create ChangeMemberEmployeeNumber">
        <call-simple-method method-name="saveEmployeeNumber" scope="inline"></call-simple-method>
		<!-- Update Member with new station -->
		<entity-one value-field="member" entity-name="Member">
			<field-map field-name="partyId" value="${newEntity.partyId}"/>
		</entity-one>
		<set field="member.employeeNumber" value="${newEntity.toEmployeeNumber}"/>
		<store-value value-field="member"/>
    </simple-method>
    <simple-method method-name="saveEmployeeNumber">
    	 	<make-value entity-name="ChangeMemberEmployeeNumber" value-field="newEntity"/>
        	<set-pk-fields map="parameters" value-field="newEntity"/>
        	<set-nonpk-fields map="parameters" value-field="newEntity"/>
        	<sequenced-id sequence-name="ChangeMemberEmployeeNumber" field="changeMemberEmployeeNumberId"/>
        	<set from-field="changeMemberEmployeeNumberId" field="newEntity.changeMemberEmployeeNumberId"/>
        	<set field="newEntity.changedBy" from-field="userLogin.userLoginId"/>
        	<create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateChangeMemberEmployeeNumber" short-description="Update ChangeMemberEmployeeNumber">
        <entity-one entity-name="ChangeMemberEmployeeNumber" value-field="lookUpValue"/>
        <set-nonpk-fields value-field="lookUpValue" map="parameters"/>
        <store-value value-field="lookUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteChangeMemberEmployeeNumber" short-description="Delete ChangeMemberEmployeeNumber">
        <entity-one entity-name="ChangeMemberEmployeeNumber" value-field="lookUpValue"/>
        <remove-value value-field="lookUpValue"/>
    </simple-method>
    
    <!-- ChangeMemberBranch -->
     <simple-method method-name="createChangeMemberBranch" short-description="Create ChangeMemberBranch">
     	<call-simple-method method-name="saveMemberBranch" scope="inline"></call-simple-method>
		<!-- Update Member with new station -->
		<entity-one value-field="member" entity-name="Member">
			<field-map field-name="partyId" value="${newEntity.partyId}"/>
		</entity-one>
		<set field="member.branchId" value="${newEntity.toBranch}"/>
		<store-value value-field="member"/>
    </simple-method>
    
    <simple-method method-name="saveMemberBranch">
    	<make-value entity-name="ChangeMemberBranch" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="ChangeMemberBranch" field="changeMemberBranchId"/>
        <set from-field="changeMemberBranchId" field="newEntity.changeMemberBranchId"/>
        <set field="newEntity.changedBy" from-field="userLogin.userLoginId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateChangeMemberBranch" short-description="Update ChangeMemberBranch">
        <entity-one entity-name="ChangeMemberBranch" value-field="lookUpValue"/>
        <set-nonpk-fields value-field="lookUpValue" map="parameters"/>
        <store-value value-field="lookUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteChangeMemberBranch" short-description="Delete ChangeMemberBranch">
        <entity-one entity-name="ChangeMemberBranch" value-field="lookUpValue"/>
        <remove-value value-field="lookUpValue"/>
    </simple-method>
    <!-- ChangeMemberShareAmount -->
     <simple-method method-name="createChangeMemberShareAmount" short-description="Create ChangeMemberShareAmount">
     	<call-simple-method method-name="saveShareAmount" scope="inline"></call-simple-method>
		<!-- Update Member with new station -->
		<entity-one value-field="member" entity-name="Member">
			<field-map field-name="partyId" value="${newEntity.partyId}"/>
		</entity-one>
		<set field="member.shareAmount" value="${newEntity.toShareAmount}"/>
		<store-value value-field="member"/>
    </simple-method>
    
    <simple-method method-name="saveShareAmount">
    	<make-value entity-name="ChangeMemberShareAmount" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="ChangeMemberShareAmount" field="changeMemberShareAmountId"/>
        <set from-field="changeMemberShareAmountId" field="newEntity.changeMemberShareAmountId"/>
        <set field="newEntity.changedBy" from-field="userLogin.userLoginId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateChangeMemberShareAmount" short-description="Update ChangeMemberShareAmount">
        <entity-one entity-name="ChangeMemberShareAmount" value-field="lookUpValue"/>
        <set-nonpk-fields value-field="lookUpValue" map="parameters"/>
        <store-value value-field="lookUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteChangeMemberShareAmount" short-description="Delete ChangeMemberShareAmount">
        <entity-one entity-name="ChangeMemberShareAmount" value-field="lookUpValue"/>
        <remove-value value-field="lookUpValue"/>
    </simple-method>

</simple-methods>