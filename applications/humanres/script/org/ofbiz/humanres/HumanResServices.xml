<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor 
	license agreements. See the NOTICE file distributed with this work for additional 
	information regarding copyright ownership. The ASF licenses this file to 
	you under the Apache License, Version 2.0 (the "License"); you may not use 
	this file except in compliance with the License. You may obtain a copy of 
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods-v2.xsd">
	<simple-method method-name="createSupervisorLevel"
		short-description="Supervisor Level">
		<make-value entity-name="SupervisorLevel" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<!-- <if-empty field="newEntity.fromDate"> <now-timestamp field="nowTimeStamp"/> 
			<set field="newEntity.fromDate" from-field="nowTimeStamp"/> </if-empty> -->
		<sequenced-id sequence-name="SupervisorLevelSequence"
			stagger-max="1" field="SupervisorLevelId" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<set field="newEntity.supervisorLevelId" from-field="SupervisorLevelId" />
		<!-- <field-to-result field="newEntity.partyId" result-name="partyId"/> -->
		<!-- <field-to-result field="newEntity.partyQualTypeId" result-name="partyQualTypeId"/> -->
		<!-- <field-to-result field="newEntity.fromDate" result-name="fromDate"/> -->
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<!-- Ability Group -->
	<simple-method method-name="updateSupervisorLevel"
		short-description="Supervisor Level">
		<entity-one entity-name="SupervisorLevel" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteSupervisorLevel"
		short-description="Delete Supervisor Level">
		<entity-one entity-name="SupervisorLevel" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	<!-- Party Qualification -->
	<simple-method method-name="createPartyQual"
		short-description="Create a Party Qualification">
		<make-value entity-name="PartyQual" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<if-empty field="newEntity.fromDate">
			<now-timestamp field="nowTimeStamp" />
			<set field="newEntity.fromDate" from-field="nowTimeStamp" />
		</if-empty>
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<field-to-result field="newEntity.partyId"
			result-name="partyId" />
		<field-to-result field="newEntity.partyQualTypeId"
			result-name="partyQualTypeId" />
		<field-to-result field="newEntity.fromDate"
			result-name="fromDate" />
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<!-- Ability Group -->
	<simple-method method-name="updatePartyQual"
		short-description="Update Qualification of a Party">
		<entity-one entity-name="PartyQual" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deletePartyQual"
		short-description="Delete Qualification of a Party">
		<entity-one entity-name="PartyQual" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<!-- Party Qualification Type -->
	<simple-method method-name="createPartyQualType"
		short-description="Create a Party Qualification Type">
		<make-value entity-name="PartyQualType" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="PartyQualType" field="partyQualTypeId" />
		<now-timestamp field="newEntity.createdDate" />
		<set from-field="partyQualTypeId" field="newEntity.partyQualTypeId" />
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updatePartyQualType"
		short-description="Update Party Qualification Type">
		<entity-one entity-name="PartyQualType" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deletePartyQualType"
		short-description="Delete Party Qualification Type">
		<entity-one entity-name="PartyQualType" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
 <!-- ================COURSE SPECIALIZATION========================= -->
 
 <simple-method method-name="createPartyCourseSpecialization"
		short-description="Create a Party Qualification Type">
		<make-value entity-name="PartyCourseSpecialization" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="PartyCourseSpecialization" field="specializationId" />
		<set from-field="specializationId" field="newEntity.specializationId" />
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updatePartyCourseSpecialization"
		short-description="Update Party Qualification Type">
		<entity-one entity-name="PartyCourseSpecialization" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deletePartyCourseSpecialization"
		short-description="Delete Party Qualification Type">
		<entity-one entity-name="PartyCourseSpecialization" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
 
 
 <!-- ============================INSTITUTIONS======================================= -->
 
 <simple-method method-name="createPartyQualInstitution"
		short-description="Create a Party Qualification Type">
		<make-value entity-name="PartyQualInstitute" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="PartyQualInstitute" field="instituteId" />
		<set from-field="instituteId" field="newEntity.instituteId" />
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updatePartyQualInstitution"
		short-description="Update Party Qualification Type">
		<entity-one entity-name="PartyQualInstitute" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deletePartyQualInstitution"
		short-description="Delete Party Qualification Type">
		<entity-one entity-name="PartyQualInstitute" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	
	<!-- ============================GRADES======================================= -->
 
 <simple-method method-name="createPartyCourseGrade"
		short-description="Create a Party Qualification Type">
		<make-value entity-name="PartyCourseGrade" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="PartyCourseGrade" field="gradeId" />
		<set from-field="gradeId" field="newEntity.gradeId" />
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updatePartyCourseGrade"
		short-description="Update Party Qualification Type">
		<entity-one entity-name="PartyCourseGrade" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deletePartyCourseGrade"
		short-description="Delete Party Qualification Type">
		<entity-one entity-name="PartyCourseGrade" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	<!-- ================LEAVE CALENDER========================= -->
 
 <simple-method method-name="createLeaveCalender"
		short-description="Create a Party Qualification Type">
		<make-value entity-name="EmplLeaveCalender" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="EmplLeaveCalender" field="leaveCalenderId" />
		<set from-field="leaveCalenderId" field="newEntity.leaveCalenderId" />
		
			 <entity-one entity-name="Person" value-field="empterms">
		 	<field-map field-name="partyId" value="${userLogin.partyId}"/>
		 </entity-one>
		 
		 <set from-field="empterms.employmentTerms" field="userEmploymentTerms"/>
			
			<if>
			<condition>
						<if-compare operator="not-equals" value="permanent" field="userEmploymentTerms"></if-compare>
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels" 
						property="employmentTermsError" />
				</add-error>
				<check-errors />
			</then>
			
			<else>
			    <create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
			</else>
		</if>
			
	</simple-method>

	<simple-method method-name="updateLeaveCalender"
		short-description="Update Party Qualification Type">
		<entity-one entity-name="EmplLeaveCalender" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteLeaveCalender"
		short-description="Delete Party Qualification Type">
		<entity-one entity-name="EmplLeaveCalender" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	
		<!-- Party Qualification Group -->
	<simple-method method-name="createPartyQualGroup"
		short-description="Create a Party Qualification Group">
		<make-value entity-name="PartyQualGroup" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
		<sequenced-id sequence-name="PartyQualGroup" field="partyQualGroupId" />
		<now-timestamp field="newEntity.createdDate" />
		<set from-field="partyQualGroupId" field="newEntity.partyQualGroupId" />
		<!-- set field="entity.loanStatus" value="DRAFT"/ -->
		<!-- set field="productType" value="Loan"/ -->
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updatePartyQualGroup"
		short-description="Update Party Qualification Group">
		<entity-one entity-name="PartyQualGroup" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deletePartyQualGroup"
		short-description="Delete Party Qualification Group">
		<entity-one entity-name="PartyQualGroup" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>



	<simple-method method-name="createPartyResume"
		short-description="Create Resume for Party">
		<make-value entity-name="PartyResume" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="PartyResume" field="newEntity.resumeId" />
		<field-to-result field="resumeId" result-name="newEntity.resumeId" />
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updatePartyResume"
		short-description="Update a Resume of a Party">
		<entity-one entity-name="PartyResume" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deletePartyResume"
		short-description="Delete a Resume of a Party">
		<entity-one entity-name="PartyResume" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="createPartySkill"
		short-description="Create Party Skills">
		<make-value entity-name="PartySkill" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="PartySkill" field="newEntity.partySkillId" />
		<set field="newEntity.partySkillId" from-field="partySkillId"/>
		<entity-one entity-name="PartySkill" value-field="partySkill"
			auto-field-map="true" />
		<if>
			<condition>
				<and>
					<if-compare-field field="partySkill.partyId"
						to-field="parameters.partyId" operator="equals" />
					<if-compare-field field="partySkill.skillTypeId"
						to-field="parameters.skillTypeId" operator="equals" />
				</and>
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="HumanResPartySkillsAlreadyExists" />
				</add-error>
				<check-errors />
			</then>
			<else>
				<create-value value-field="newEntity" />
				<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
			</else>
		</if>
	</simple-method>

	<simple-method method-name="updatePartySkill"
		short-description="Update Party Skills">
		<entity-one entity-name="PartySkill" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deletePartySkill"
		short-description="Delete a Skill of Party">
		<entity-one entity-name="PartySkill" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	<simple-method method-name="createPerfManager" short-description="Create Perf Manager">
        <make-value entity-name="PerfManager" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="PerfManager" field="perfManagerId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="perfManagerId" field="newEntity.perfManagerId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
        <property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
    </simple-method>
    <simple-method method-name="updatePerfManager" short-description="Update Perf Manager">
        <entity-one entity-name="PerfManager" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="deletePerfManager" short-description="Delete Perf Manager">
        <entity-one entity-name="PerfManager" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
    </simple-method>

	<simple-method method-name="createPerfReview"
		short-description="Create a Performance Review">
		<make-value entity-name="PerfReview" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="PerfReview" field="newEntity.perfReviewId" />
		<create-value value-field="newEntity" />
		<field-to-result field="newEntity.perfReviewId"
			result-name="perfReviewId" />
		<field-to-result field="newEntity.employeePartyId"
			result-name="employeePartyId" />
		<field-to-result field="newEntity.employeeRoleTypeId"
			result-name="employeeRoleTypeId" />
	</simple-method>

	<simple-method method-name="updatePerfReview"
		short-description="Update Performance Review">
		<entity-one entity-name="PerfReview" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<field-to-result field="lookedUpValue.perfReviewId"
			result-name="perfReviewId" />
		<field-to-result field="lookedUpValue.employeePartyId"
			result-name="employeePartyId" />
		<field-to-result field="lookedUpValue.employeeRoleTypeId"
			result-name="employeeRoleTypeId" />
	</simple-method>

	<simple-method method-name="deletePerfReview"
		short-description="Delete Performance Review">
		<entity-one entity-name="PerfReview" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="createPerfReviewItem"
		short-description="Create Performance Review Items">
		<make-value entity-name="PerfReviewItem" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<make-next-seq-id value-field="newEntity"
			seq-field-name="perfReviewItemSeqId" />
		<field-to-result field="perfReviewItemSeqId"
			result-name="perfReviewItemSeqId" />
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updatePerfReviewItem"
		short-description="Update Performance Review Items">
		<entity-one entity-name="PerfReviewItem" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deletePerfReviewItem"
		short-description="Delete Performance Review Items">
		<entity-one entity-name="PerfReviewItem" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	  <!-- Perf Goal Definition -->
   <simple-method method-name="createPerfGoalsDef" short-description="create PerfGoalsDef">
        <make-value entity-name="PerfGoalsDef" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="PerfGoalsDef" field="perfGoalsDefId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="perfGoalsDefId" field="newEntity.perfGoalsDefId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
    </simple-method>
	
    <simple-method method-name="updatePerfGoalsDef" short-description="Update PerfGoalsDef">
       <entity-one entity-name="PerfGoalsDef" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
		
            <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
    </simple-method>
	
	<simple-method method-name="saveScores" short-description="Delete PerfGoalsDef">
        <entity-one entity-name="PerfGoalsDef" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
	

		
    
    <simple-method method-name="deletePerfGoalsDef" short-description="Delete PerfGoalsDef">
        <entity-one entity-name="PerfGoalsDef" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
    </simple-method>
   
    
            <!--======================= REVIEWS GROUPS DEFINITION =================================== -->
                     
	<simple-method method-name="createPerfReviews"
		short-description="Create File location">
		<make-value entity-name="PerfReviewsDefinition" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="PerfReviewsDefinition" field="perfReviewDefId" />
		<set from-field="perfReviewDefId" field="newEntity.perfReviewDefId" /> 
		
		<set field="quantitative" value="${bsh:org.ofbiz.humanres.HumanResServices.getQuantitativeTotal();}"/>
		<set field="qualitative" value="${bsh:org.ofbiz.humanres.HumanResServices.getQualitativeTotal();}"/>
		<set field="QNTQLTNotFull" value="${bsh:org.ofbiz.humanres.HumanResServices.getTotal();}"/>
		<set field="exist" value="${bsh:org.ofbiz.humanres.HumanResServices.CheckExistenceOfQualitativeIndicators();}"/>
		<set field="valid" value="INVALID"/>
		
		 
		
		
		<if>
			<condition>
					<if-compare-field field="QNTQLTNotFull"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="QNTQLTNotFullFoundError" />
				</add-error>
				<check-errors />
			</then>
	    </if>
	   
	    
	    <if>
			<condition>
					<if-compare-field field="quantitative"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="QuantitativeTotalError" />
				</add-error>
				<check-errors />
			</then>
			</if>
	    	<if>
			<condition>
					<if-compare-field field="qualitative"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="QualitativeTotalError" />
				</add-error>
				<check-errors />
			</then>
			</if>
		    <if>
			<condition>
					<if-compare-field field="exist"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="QuantitativeIndicatorNotFoundError" />
				</add-error>
				<check-errors />
			</then>
			
			<else>
			<entity-condition list="indicatorList" entity-name="PerfGoals">
				<condition-expr field-name="perfGoalsDefId" value="QTT_GOALS"/>
		</entity-condition>
		
		
		
		<iterate entry="singleindicator" list="indicatorList">
		<log message=">>>>>>>>>>>>>>>>>>>>>>> VOLUME-DETAILS ${singleindicator.percentage}" level="info"/>
		
		
		<make-value entity-name="PerfActionPlanIndicatorDefinition" value-field="newEntity2" />
		<sequenced-id sequence-name="PerfActionPlanIndicatorDefinition" field="PerfActionPlanIndicatorId" />
		<set from-field="PerfActionPlanIndicatorId" field="newEntity2.PerfActionPlanIndicatorId" /> 
		<set from-field="perfReviewDefId" field="newEntity2.perfReviewDefId" /> 
		<set from-field="singleindicator.goal" field="newEntity2.actionPlanIndicatorDescription" /> 
		<set from-field="singleindicator.percentage" field="newEntity2.percentage" /> 
		<set from-field="singleindicator.perfGoalsId" field="newEntity2.perfGoalsId" /> 
		
		<entity-one value-field="persGoal" entity-name="PerfGoals">
			<field-map field-name="perfGoalsId" from-field="singleindicator.perfGoalsId"/>
		</entity-one>
		
		<set from-field="persGoal.perfGoalsDefId" field="newEntity2.perfGoalsDefId" /> 
		
		 <create-value value-field="newEntity2" />
		</iterate>
		
			   <create-value value-field="newEntity" />
		      <property-to-field resource="HumanResUiLabels"
			  property="CreateSuccess" field="successMessage" />
			</else>
		</if>
		
			</simple-method>
			
			<simple-method method-name="updatePerfReviews"
		short-description="Update an existing Budget">
		<entity-one entity-name="PerfReviewsDefinition" value-field="lookedUpValue" />
		<set-nonpk-fields map="parameters" value-field="lookedUpValue" />
		<set-pk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		   <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" /> 
			
	</simple-method>
			
			
			<simple-method method-name="deletePerfReviews"
		short-description="Remove an file type">
		<set field="perfReviewDefId" from-field="parameters.perfReviewDefId" />
		<entity-one entity-name="PerfReviewsDefinition" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	  <!--======================= REVIEWS OBJECTIVES SETUP DEFINITION =================================== -->
                     
	<simple-method method-name="createPerfReviewObjective"
		short-description="Create File location">
		<make-value entity-name="PerfReviewsGroupObjectiveDefinition" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="PerfReviewsGroupObjectiveDefinition" field="PerfReviewsGroupObjectiveDefinitionId" />
		<set from-field="PerfReviewsGroupObjectiveDefinitionId" field="newEntity.PerfReviewsGroupObjectiveDefinitionId" /> 
		
		<entity-one value-field="persGoal" entity-name="PerfGoals">
			<field-map field-name="perfGoalsId" from-field="newEntity.perfGoalsId"/>
		</entity-one>
		<set from-field="persGoal.perfGoalsDefId" field="newEntity.perfGoalsDefId" /> 
		
		
		
		
		
		<make-value entity-name="PerfActionPlanIndicatorDefinition" value-field="newEntity2" />
		<set-pk-fields map="parameters" value-field="newEntity2" />
		<set-nonpk-fields map="parameters" value-field="newEntity2" />
		<sequenced-id sequence-name="PerfActionPlanIndicatorDefinition" field="PerfActionPlanIndicatorId" />
		<set from-field="PerfActionPlanIndicatorId" field="newEntity2.PerfActionPlanIndicatorId" /> 
		
		<set from-field="newEntity.perfGoalsDefId" field="newEntity2.perfGoalsDefId" /> 
		
		<set field="newEntity2.perfReviewDefId" from-field="newEntity.perfReviewDefId"/>
		<set field="newEntity2.perfGoalsId" from-field="newEntity.perfGoalsId"/>
		<set field="newEntity2.PerfReviewsGroupObjectiveDefinitionId" from-field="PerfReviewsGroupObjectiveDefinitionId"/>
		<set field="newEntity2.percentage" from-field="newEntity.percentage"/>
		
		
		
	    <set field="perc" from-field="newEntity.percentage"/>
	    <set field="goal" from-field="newEntity.perfGoalsId"/>
	    <set field="group" from-field="newEntity.perfReviewDefId"/>
	    
		<set field="quantitative" value="${bsh:org.ofbiz.humanres.HumanResServices.getQuantitativeTotal();}"/>
		<set field="qualitative" value="${bsh:org.ofbiz.humanres.HumanResServices.getQualitativeTotal();}"/>
		<set field="GoalObjectiveTotal" value="${bsh:org.ofbiz.humanres.HumanResServices.getObjectiveAndRespectivePerspectiveTotalAndCompareAtObjectiveCreation(group, goal, perc);}"/>
		<set field="valid" value="INVALID"/>
	    
	    
	    <if>
			<condition>
					<if-compare-field field="GoalObjectiveTotal"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="ObjectiveGoalTotalError" />
				</add-error>
				<check-errors />
			</then>
			</if>
			<if>
			<condition>
					<if-compare-field field="quantitative"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="QuantitativeTotalError" />
				</add-error>
				<check-errors />
			</then>
			</if>
	    	<if>
			<condition>
					<if-compare-field field="qualitative"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="QualitativeTotalError" />
				</add-error>
				<check-errors />
			</then>
			
			<else>
			   <create-value value-field="newEntity" />
			   <create-value value-field="newEntity2" />
		      <property-to-field resource="HumanResUiLabels"
			  property="CreateSuccess" field="successMessage" />
			</else>
		</if>
			
			
			</simple-method>
			
			
			
			
			
			 <!--======================= ACTION PLAN INDICATORS SETUP DEFINITION =================================== -->
                     
	<simple-method method-name="createPerfActionPlanIndicator"
		short-description="Create File location">
		<make-value entity-name="PerfActionPlanIndicatorDefinition" value-field="newEntity2" />
		<set-pk-fields map="parameters" value-field="newEntity2" />
		<set-nonpk-fields map="parameters" value-field="newEntity2" />
		<sequenced-id sequence-name="PerfActionPlanIndicatorDefinition" field="PerfActionPlanIndicatorId" />
		<set from-field="PerfActionPlanIndicatorId" field="newEntity2.PerfActionPlanIndicatorId" /> 
		
		<set from-field="obj.perfGoalsDefId" field="newEntity2.perfGoalsDefId" /> 
		
		<set field="newEntity2.perfReviewDefId" from-field="newEntity.perfReviewDefId"/>
		<set field="newEntity2.perfGoalsId" from-field="newEntity.perfGoalsId"/>
		<set field="newEntity2.PerfReviewsGroupObjectiveDefinitionId" from-field="PerfReviewsGroupObjectiveDefinitionId"/>
			  
			</simple-method>
			
			<simple-method method-name="updatePerfActionPlanIndicator"
		short-description="Update an existing Budget">
		<entity-one entity-name="PerfActionPlanIndicatorDefinition" value-field="lookedUpValue" />
		<set-nonpk-fields map="parameters" value-field="lookedUpValue" />
		<set-pk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		   <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" /> 
			
	</simple-method>
			
			
			
			<simple-method method-name="updatePerfReviewObjective"
		short-description="Update an existing Budget">
		<entity-one entity-name="PerfReviewsGroupObjectiveDefinition" value-field="lookedUpValue" />
		<set-nonpk-fields map="parameters" value-field="lookedUpValue" />
		<set-pk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		   <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" /> 
			
	</simple-method>
			
			
			<simple-method method-name="deletePerfReviewObjective"
		short-description="Remove an file type">
		<set field="PerfReviewsGroupObjectiveDefinitionId" from-field="parameters.PerfReviewsGroupObjectiveDefinitionId" />
		<entity-one entity-name="PerfReviewsGroupObjectiveDefinition" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	
	  <!--======================= OBJECTIVES ACTION PLANS SETUP DEFINITION =================================== -->
                     
	<simple-method method-name="createPerfObjectiveActionPlan"
		short-description="Create File location">
		<make-value entity-name="PerfObjectiveActionPlanDefinition" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="PerfObjectiveActionPlanDefinition" field="PerfObjectiveActionPlanId" />
		<set from-field="PerfObjectiveActionPlanId" field="newEntity.PerfObjectiveActionPlanId" /> 
		
		<entity-one value-field="obj" entity-name="PerfReviewsGroupObjectiveDefinition">
			<field-map field-name="PerfReviewsGroupObjectiveDefinitionId" from-field="newEntity.PerfReviewsGroupObjectiveDefinitionId"/>
			</entity-one>
		
		<set from-field="obj.perfGoalsDefId" field="newEntity.perfGoalsDefId" /> 
		
		<set field="newEntity.perfReviewDefId" from-field="obj.perfReviewDefId"/>
		<set field="newEntity.perfGoalsId" from-field="obj.perfGoalsId"/>
			
			
		<set field="objective" from-field="newEntity.PerfReviewsGroupObjectiveDefinitionId"/>
		<set field="PerspectiveTotalState" value="${bsh:org.ofbiz.humanres.HumanResServices.getObjectiveAndRespectivePerspectiveTotal(objective);}"/>
		<set field="valid" value="INVALID"/>
	    
	   
	    	<if>
			<condition>
					<if-compare-field field="PerspectiveTotalState"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="PerspectiveTotalError" />
				</add-error>
				<check-errors />
			</then>
			
			<else>
			   <create-value value-field="newEntity" />
		      <property-to-field resource="HumanResUiLabels"
			  property="CreateSuccess" field="successMessage" />
			</else>
		</if>
			
			
			</simple-method>
			
			<simple-method method-name="updatePerfObjectiveActionPlan"
		short-description="Update an existing Budget">
		<entity-one entity-name="PerfObjectiveActionPlanDefinition" value-field="lookedUpValue" />
		<set-nonpk-fields map="parameters" value-field="lookedUpValue" />
		<set-pk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		   <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" /> 
			
	</simple-method>
			
			
			<simple-method method-name="deletePerfObjectiveActionPlan"
		short-description="Remove an file type">
		<set field="PerfObjectiveActionPlanId" from-field="parameters.PerfObjectiveActionPlanId" />
		<entity-one entity-name="PerfObjectiveActionPlanDefinition" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	
			
			
			<simple-method method-name="deletePerfActionPlanIndicator"
		short-description="Remove an file type">
		<set field="PerfActionPlanIndicatorId" from-field="parameters.PerfActionPlanIndicatorId" />
		<entity-one entity-name="PerfActionPlanIndicatorDefinition" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	
	 <!--======================= ADD STAFF TO REVIEW GROUPS =================================== -->
                     
	<simple-method method-name="addStaffToReviewGroup"
		short-description="Create File location">
		<make-value entity-name="StaffInPerfReviewGroup" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="StaffInPerfReviewGroup" field="StaffInPerfReviewGroupId" />
		<set from-field="StaffInPerfReviewGroupId" field="newEntity.StaffInPerfReviewGroupId" /> 
		
		<set field="party" from-field="newEntity.partyId"/>
		
		<entity-one value-field="staff" entity-name="Person">
		<field-map field-name="partyId" from-field="party"/>
		</entity-one>
		
		<set field="newEntity.departmentId" from-field="staff.departmentId"/>
		<set field="newEntity.branchId" from-field="staff.branchId"/>
		
		<set field="party" value="${newEntity.partyId}"/>
		<set field="exist" value="${bsh:org.ofbiz.humanres.HumanResServices.findExistanceOfStaffInReviewGroups(party);}"/>
		<set field="indicatorTotal" value="${bsh:org.ofbiz.humanres.HumanResServices.getObjectiveAndRespectivePerspectiveTotalAndCompare();}"/>
		<set field="valid" value="INVALID"/>
	    
	    <if>
			<condition>
					<if-compare-field field="indicatorTotal"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="ActionPlanTotalError" />
				</add-error>
				<check-errors />
			</then>
	    </if>
		
		<if>
			<condition>
					<if-compare-field field="exist"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="StaffInReviewGroupError" />
				</add-error>
				<check-errors />
			</then>
			
			<else>
			   <create-value value-field="newEntity" />
		      <property-to-field resource="HumanResUiLabels"
			  property="CreateSuccess" field="successMessage" />
			</else>
		</if>
			</simple-method>
			
			
			<simple-method method-name="removeStaffToReviewGroup"
		short-description="Remove an file type">
		<set field="StaffInPerfReviewGroupId" from-field="parameters.StaffInPerfReviewGroupId" />
		<entity-one entity-name="StaffInPerfReviewGroup" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	
	 <!--======================= CREATE REVIEW PERIOD =================================== -->
                     
	<simple-method method-name="createReviewPeriod"
		short-description="Create File location">
		<make-value entity-name="PerfReviewPeriod" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="PerfReviewPeriod" field="PerfReviewPeriodId" />
		<set from-field="PerfReviewPeriodId" field="newEntity.PerfReviewPeriodId" /> 
		<set value="${newEntity.year}-Quarter-1" field="newEntity.quarter" /> 
		<set value="NEW" field="newEntity.status" /> 
		
		<make-value entity-name="PerfReviewPeriod" value-field="newEntity2" />
		<set-pk-fields map="parameters" value-field="newEntity2" />
		<set-nonpk-fields map="parameters" value-field="newEntity2" />
		<sequenced-id sequence-name="PerfReviewPeriod" field="PerfReviewPeriodId" />
		<set from-field="PerfReviewPeriodId" field="newEntity2.PerfReviewPeriodId" /> 
		<set value="${newEntity2.year}-Quarter-2" field="newEntity2.quarter" /> 
		<set value="NEW" field="newEntity2.status" />
		
		<make-value entity-name="PerfReviewPeriod" value-field="newEntity3" />
		<set-pk-fields map="parameters" value-field="newEntity3" />
		<set-nonpk-fields map="parameters" value-field="newEntity3" />
		<sequenced-id sequence-name="PerfReviewPeriod" field="PerfReviewPeriodId" />
		<set from-field="PerfReviewPeriodId" field="newEntity3.PerfReviewPeriodId" /> 
		<set value="${newEntity3.year}-Quarter-3" field="newEntity3.quarter" /> 
		<set value="NEW" field="newEntity3.status" />
		
		<make-value entity-name="PerfReviewPeriod" value-field="newEntity4" />
		<set-pk-fields map="parameters" value-field="newEntity4" />
		<set-nonpk-fields map="parameters" value-field="newEntity4" />
		<sequenced-id sequence-name="PerfReviewPeriod" field="PerfReviewPeriodId" />
		<set from-field="PerfReviewPeriodId" field="newEntity4.PerfReviewPeriodId" /> 
		<set value="${newEntity4.year}-Quarter-4" field="newEntity4.quarter" /> 
		<set value="NEW" field="newEntity4.status" />
		
		<set field="party" value="${newEntity.year}"/>
		<set field="exist" value="${bsh:org.ofbiz.humanres.HumanResServices.findExistanceOfYear(party);}"/>
		<set field="valid" value="INVALID"/>
		
		<if>
			<condition>
					<if-compare-field field="exist"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="yearExistError" />
				</add-error>
				<check-errors />
			</then>
			
			<else>
			   <create-value value-field="newEntity" />
			   <create-value value-field="newEntity2" />
			   <create-value value-field="newEntity3" />
			   <create-value value-field="newEntity4" />
		      <property-to-field resource="HumanResUiLabels"
			  property="CreateSuccess" field="successMessage" />
			</else>
		</if>
			</simple-method>
			
			
		<!--======================= OPEN REVIEW PERIOD =================================== -->
			
		<simple-method method-name="openReviewPeriod" short-description="create KPI Definition">
		<set field="exist" value="${bsh:org.ofbiz.humanres.HumanResServices.findExistanceOfOpenPeriod();}"/>
		<set field="indicatorTotal" value="${bsh:org.ofbiz.humanres.HumanResServices.getObjectiveAndRespectivePerspectiveTotalAndCompare();}"/>
		<set field="valid" value="INVALID"/>
	    
	     <if>  
			<condition>
					<if-compare-field field="indicatorTotal"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="ActionPlanTotalError" />
				</add-error>
				<check-errors />
			</then>
	    </if> 
		 
		<if>
			<condition>
					<if-compare-field field="exist"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="OpenReviewPeriodExistError"/>
				</add-error>
				<check-errors />
			</then>
			
			<else>
			   
		<entity-condition list="staffList" entity-name="StaffInPerfReviewGroup">
		</entity-condition>
		
		<iterate entry="singlestaff" list="staffList">
		<log message=">>>>>>>>>>>>>>>>>>>>>>> VOLUME-DETAILS ${singlestaff.perfReviewDefId}" level="info"/>
		
		
		<entity-condition list="indicatorList" entity-name="PerfActionPlanIndicatorDefinition">
			<condition-expr field-name="perfReviewDefId" from-field="singlestaff.perfReviewDefId"/>
		</entity-condition>
		
		<iterate entry="singleindicate" list="indicatorList">
		
		 <make-value entity-name="PerfPartyReview" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="PerfPartyReview" field="reviewId"/>
        <set from-field="reviewId" field="newEntity.reviewId"/>
        
         <entity-one entity-name="PerfReviewPeriod" value-field="per">
		 	<field-map field-name="PerfReviewPeriodId" from-field="parameters.PerfReviewPeriodId"/>
		 </entity-one>
		 
		 
		 	
		<set from-field="per.year" field="newEntity.year"/>
		<set from-field="per.quarter" field="newEntity.quarter"/>
		<set from-field="singlestaff.partyId" field="newEntity.partyId"/>
		<set from-field="singleindicate.perfReviewDefId" field="newEntity.perfReviewDefId"/>
		<set from-field="singleindicate.perfGoalsDefId" field="newEntity.perfGoalsDefId"/>
		<set from-field="singleindicate.perfGoalsId" field="newEntity.perfGoalsId"/>
		<set from-field="singleindicate.PerfReviewsGroupObjectiveDefinitionId" field="newEntity.PerfReviewsGroupObjectiveDefinitionId"/>
		<set from-field="singleindicate.PerfObjectiveActionPlanId" field="newEntity.PerfObjectiveActionPlanId"/>
		<set from-field="singleindicate.PerfActionPlanIndicatorId" field="newEntity.PerfActionPlanIndicatorId"/>
		<set value="STAFF" field="newEntity.stage"/>
		<set from-field="singleindicate.percentage" field="newEntity.scoreOne"/>
		<set from-field="singlestaff.hod" field="newEntity.hod"/>
		
		<!-- Commented out these so that the default score can be null by Japheth Odonya -->
		<!-- set value="${bsh:org.ofbiz.humanres.HumanResServices.returnBigDecimal();}" field="newEntity.scoreTwo"/>
		<set value="${bsh:org.ofbiz.humanres.HumanResServices.returnBigDecimal();}" field="newEntity.scoreThree"/>
		<set value="${bsh:org.ofbiz.humanres.HumanResServices.returnBigDecimal();}" field="newEntity.scoreFour"/ -->
				
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
		property="CreateSuccess" field="successMessage" />
		</iterate>
		
		
		
		
		
		
		
		
		
		
		
		
		 
		</iterate>
        
			   <call-simple-method method-name="openStatusToReviewPeriod" scope="inline"></call-simple-method>
			   
			</else>
		</if>
		
		
    </simple-method>
    
    
   
    	<!--=============== CHANGE PERIOD STATUS TO OPEN ==============================-->
    
    <simple-method method-name="openStatusToReviewPeriod" short-description="Update PerfGoals">
        <entity-one entity-name="PerfReviewPeriod" value-field="lookedUpValue">
        <field-map field-name="PerfReviewPeriodId" from-field="parameters.PerfReviewPeriodId"/>
        </entity-one>
        <set field="lookedUpValue.status" value="OPEN"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <!--=============== CHANGE PERIOD STATUS TO CLOSED ==============================-->
    
    <simple-method method-name="closeReviewPeriod" short-description="Update PerfGoals">
       <entity-one entity-name="PerfReviewPeriod" value-field="lookedUpValue">
        <field-map field-name="PerfReviewPeriodId" from-field="parameters.PerfReviewPeriodId"/>
        </entity-one>
        
       
        <set field="lookedUpValue.status" value="CLOSED"/>
        
        
		<set field="period" from-field="lookedUpValue.quarter"/>
		<set field="exist" value="${bsh:org.ofbiz.humanres.HumanResServices.haveAllScoresBeenForwarded(period);}"/>
		<set field="valid" value="INVALID"/>
		
		<if>
			<condition>
					<if-compare-field field="exist"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="SomeStaffScoresNotSubmittedError" />
				</add-error>
				<check-errors />
			</then>
			
			<else>
			 <entity-condition list="groups" entity-name="StaffInPerfReviewGroup">
        <condition-expr field-name="stage" operator="not-equals" value="CLOSED"/>
        </entity-condition>
        <iterate entry="singlegroup" list="groups">
        <entity-one entity-name="StaffInPerfReviewGroup" value-field="lookedUpValue2">
        <field-map field-name="StaffInPerfReviewGroupId" from-field="singlegroup.StaffInPerfReviewGroupId"/>
        </entity-one>
        <set field="lookedUpValue2.stage" value="CLOSED"/>
         <store-value value-field="lookedUpValue2"/>
        </iterate>
			   <store-value value-field="lookedUpValue"/>
			  
		      <property-to-field resource="HumanResUiLabels"
			  property="UpdateSuccess" field="successMessage" />
			</else>
		</if>
    </simple-method>
			
			<!--======================= REVIEW MYSELF =================================== -->
	<simple-method method-name="reviewMyself" short-description="Update PerfGoals" >
        <entity-one entity-name="PerfPartyReview" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <set field="trueValue" value="true" type="Boolean"/>
        <set field="scoreValue" from-field="lookedUpValue.scoreTwo" type="BigDecimal"/>
        
        
        <entity-one value-field="perfGoalsVal" entity-name="PerfGoals">
        	<field-map field-name="perfGoalsId" from-field="lookedUpValue.perfGoalsId"/>
        </entity-one>
        
        <entity-one value-field="perfReviewsGroupObjectiveDefinitionVal" entity-name="PerfReviewsGroupObjectiveDefinition">
        	<field-map field-name="PerfReviewsGroupObjectiveDefinitionId" from-field="lookedUpValue.PerfReviewsGroupObjectiveDefinitionId"/>
        </entity-one>
        
        	<!-- add-error>
					<fail-message message="Got a score :: ${lookedUpValue.scoreTwo}"/>
				</add-error>
				<check-errors />
			<if>
				<condition>
					<if-compare operator="equals" value="" field="scoreValue"></if-compare>
				</condition>
				<then>
				<add-error>
					<fail-message message="Please provide review score for ${perfReviewsGroupObjectiveDefinitionVal.objectiveDescription}"/>
				</add-error>
				<check-errors />
				</then>
				<else>
					<store-value value-field="lookedUpValue"/>
				</else>
			</if -->
			<store-value value-field="lookedUpValue"/>	
        
    </simple-method>
    
    <!--======================= SUBMIT PERSONAL REVIEW SCORES =================================== -->
			  
		<simple-method method-name="submitPersonalReviewScores" short-description="Update PerfGoals">
		
		
		<set field="score" value="scoreTwo"/>
		<set field="party" from-field="parameters.partyId"/>
		<set field="validate" value="${bsh:org.ofbiz.humanres.HumanResServices.forwardPerformanceScoresValidation(party, score);}"/>
		<set field="invalid" value="INVALID"/>
		
		
		<if>
			<condition>
					<if-compare-field field="validate"
						to-field="invalid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="ForwardingZeroScoreError" />
				</add-error>
				<check-errors />
			</then>
			
			<else>
			
		
			
		
		<entity-condition list="reviews" entity-name="PerfPartyReview">
		<condition-list>
		<condition-expr field-name="partyId" from-field="parameters.partyId"/>
		<condition-expr field-name="stage" value="STAFF"/>
		</condition-list>
		</entity-condition>
		<iterate entry="singleReview" list="reviews">
		<entity-one entity-name="PerfPartyReview" value-field="lookedUpValue">
        <field-map field-name="reviewId" from-field="singleReview.reviewId"/>
        </entity-one>
        <set field="lookedUpValue.stage" value="HOD"/>
        <store-value value-field="lookedUpValue"/>
		</iterate>
		
		<entity-condition list="staffs" entity-name="StaffInPerfReviewGroup">
		<condition-list>
		<condition-expr field-name="partyId" from-field="parameters.partyId"/>
		</condition-list>
		</entity-condition>
		<iterate entry="singleStaff" list="staffs">
		<entity-one entity-name="StaffInPerfReviewGroup" value-field="lookedUpValue2">
        <field-map field-name="StaffInPerfReviewGroupId" from-field="singleStaff.StaffInPerfReviewGroupId"/>
        </entity-one>
        <set field="lookedUpValue2.stage" value="HOD"/>
        <store-value value-field="lookedUpValue2"/>
		</iterate>
		
		</else>
		</if>
        
    </simple-method>
    
    <!--======================= HOD REVIEW  =================================== -->
		<simple-method method-name="HODreviews" short-description="HOD Reviews">
        <entity-one entity-name="PerfPartyReview" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        
        <set field="score" set-if-empty="true" set-if-null="true"/>
        <set field="userScore" from-field="lookedUpValue.scoreThree"/>
        <set field="validate" value="${bsh:org.ofbiz.humanres.HumanResServices.PerformanceScoresReviewValidation(score);}"/>
		<set field="invalid" value="INVALID"/>
        
        <if>
			<condition>
					<if-compare-field field="validate"
						to-field="invalid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="ForwardingZeroScoreError" />
				</add-error>
				<check-errors />
			</then>
			
			<else>
			 <store-value value-field="lookedUpValue"/>
			</else>
			</if>
       
    </simple-method>
    
    <!--======================= SUBMIT HOD REVIEW SCORES =================================== -->
			  
		<simple-method method-name="submitHODReviewScores" short-description="Update PerfGoals">
		
		<set field="score" value="scoreThree"/>
		<set field="party" from-field="parameters.partyId"/>
		<set field="validate" value="${bsh:org.ofbiz.humanres.HumanResServices.forwardPerformanceScoresValidation(party, score);}"/>
		<set field="invalid" value="INVALID"/>
		
		
		<if>
			<condition>
					<if-compare-field field="validate"
						to-field="invalid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="ForwardingZeroScoreError" />
				</add-error>
				<check-errors />
			</then>
			
			<else>
			
		
			
		
		<entity-condition list="reviews" entity-name="PerfPartyReview">
		<condition-list>
		<condition-expr field-name="partyId" from-field="parameters.partyId"/>
		<condition-expr field-name="stage" value="HOD"/>
		</condition-list>
		</entity-condition>
		<iterate entry="singleReview" list="reviews">
		<entity-one entity-name="PerfPartyReview" value-field="lookedUpValue">
        <field-map field-name="reviewId" from-field="singleReview.reviewId"/>
        </entity-one>
        <set field="lookedUpValue.stage" value="HARMONIZED"/>
        <store-value value-field="lookedUpValue"/>
		</iterate>
		
		<entity-condition list="staffs" entity-name="StaffInPerfReviewGroup">
		<condition-list>
		<condition-expr field-name="partyId" from-field="parameters.partyId"/>
		</condition-list>
		</entity-condition>
		<iterate entry="singleStaff" list="staffs">
		<entity-one entity-name="StaffInPerfReviewGroup" value-field="lookedUpValue2">
        <field-map field-name="StaffInPerfReviewGroupId" from-field="singleStaff.StaffInPerfReviewGroupId"/>
        </entity-one>
        <set field="lookedUpValue2.stage" value="HARMONIZED"/>
        <set field="lookedUpValue2.trainingStage" value="HOD"/>
        <store-value value-field="lookedUpValue2"/>
		</iterate>
		
		</else>
		</if>
        
    </simple-method>
    
     <!--======================= RETURN REVIEW TO HOD   =================================== -->
			  <simple-method method-name="returnToHOD" short-description="Update PerfGoals">
			  
		<entity-condition list="staffs" entity-name="StaffInPerfReviewGroup">
		<condition-list>
		<condition-expr field-name="partyId" from-field="parameters.partyId"/>
		</condition-list>
		</entity-condition>
		<iterate entry="singleStaff" list="staffs">
		<entity-one entity-name="StaffInPerfReviewGroup" value-field="lookedUpValue2">
        <field-map field-name="StaffInPerfReviewGroupId" from-field="singleStaff.StaffInPerfReviewGroupId"/>
        </entity-one>
        <set field="lookedUpValue2.stage" value="HARMONIZED"/>
        <set field="lookedUpValue2.trainingStage" value="HOD"/>
        <store-value value-field="lookedUpValue2"/>
		</iterate>
		
		       <!-- LOOK FOR OPEN PERIOD -->
		<entity-condition list="periods" entity-name="PerfReviewPeriod">
		<condition-list>
		<condition-expr field-name="status" value="OPEN"/>
		</condition-list>
		</entity-condition>
		<iterate entry="singlePeriod" list="periods">
		<entity-one entity-name="PerfReviewPeriod" value-field="lookedUpValue23">
        <field-map field-name="PerfReviewPeriodId" from-field="singlePeriod.PerfReviewPeriodId"/>
        </entity-one>
        <set field="quater" from-field="lookedUpValue23.quarter"/>
		
		
		<entity-condition list="reviews" entity-name="PerfPartyReview">
		<condition-list>
		<condition-expr field-name="partyId" from-field="parameters.partyId"/>
		<condition-expr field-name="quarter" from-field="quater"/>
		</condition-list>
		</entity-condition>
		<iterate entry="singlereview" list="reviews">
		<entity-one entity-name="PerfPartyReview" value-field="lookedUpValue24">
        <field-map field-name="reviewId" from-field="singlereview.reviewId"/>
        </entity-one>
        <set field="lookedUpValue24.stage" value="HARMONIZED"/>
        <store-value value-field="lookedUpValue24"/>
		</iterate>
		</iterate>
		
    </simple-method>
    
    <!--======================= HARMONIZED REVIEW  =================================== -->
			  <simple-method method-name="HarmonizedHODReview" short-description="Update PerfGoals">
        <entity-one entity-name="PerfPartyReview" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <!--======================= SUBMIT HARMONIZED REVIEW SCORES =================================== -->
			  
		<simple-method method-name="submitHarmonizedReviewScores" short-description="Update PerfGoals">
		
		
		<set field="score" value="scoreFour"/>
		<set field="party" from-field="parameters.partyId"/>
		<set field="validate" value="${bsh:org.ofbiz.humanres.HumanResServices.forwardPerformanceScoresValidation(party, score);}"/>
		<set field="invalid" value="INVALID"/>
		
		
		<if>
			<condition>
					<if-compare-field field="validate"
						to-field="invalid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="ForwardingZeroScoreError" />
				</add-error>
				<check-errors />
			</then>
			
			<else>
		
		<entity-condition list="reviews" entity-name="PerfPartyReview">
		<condition-list>
		<condition-expr field-name="partyId" from-field="parameters.partyId"/>
		<condition-expr field-name="stage" value="HARMONIZED"/>
		</condition-list>
		</entity-condition>
		<iterate entry="singleReview" list="reviews">
		<entity-one entity-name="PerfPartyReview" value-field="lookedUpValue">
        <field-map field-name="reviewId" from-field="singleReview.reviewId"/>
        </entity-one>
        <set field="lookedUpValue.stage" value="FORWARDED"/>
        <store-value value-field="lookedUpValue"/>
		</iterate>
		
		<entity-condition list="staffs" entity-name="StaffInPerfReviewGroup">
		<condition-list>
		<condition-expr field-name="partyId" from-field="parameters.partyId"/>
		</condition-list>
		</entity-condition>
		<iterate entry="singleStaff" list="staffs">
		<entity-one entity-name="StaffInPerfReviewGroup" value-field="lookedUpValue2">
        <field-map field-name="StaffInPerfReviewGroupId" from-field="singleStaff.StaffInPerfReviewGroupId"/>
        </entity-one>
        <set field="lookedUpValue2.stage" value="FORWARDED"/>
        <store-value value-field="lookedUpValue2"/>
		</iterate>
		
		</else>
		</if>
        
    </simple-method>
			
	
	
		   
    
     <!-- ============== PERFORMANCE GOALS MANAGEMENT ================= -->
     
   <simple-method method-name="createPerfGoals" short-description="create PerfGoals">
        <make-value entity-name="PerfGoals" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="PerfGoals" field="perfGoalsId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="perfGoalsId" field="newEntity.perfGoalsId"/>
        
         <set field="perc" from-field="newEntity.percentage"/>
	     <set field="goal" from-field="newEntity.perfGoalsDefId"/>
       


        <set field="exist" value="${bsh:org.ofbiz.humanres.HumanResServices.getTotal();}"/>
        <set field="GoalPerspectiveValid" value="${bsh:org.ofbiz.humanres.HumanResServices.getPerspectiveAndRespectiveGoalTotalAndCompareAtPerspectiveCreation(goal, perc);}"/>
		<set field="valid" value="INVALID"/>
		
		
		 <if>
			<condition>
					<if-compare-field field="GoalPerspectiveValid"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="PerspectiveGoalTotalError" />
				</add-error>
				<check-errors />
			</then>
			</if>
		<if>
			<condition>
					<if-compare-field field="exist"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="QNTQLTNotFullFoundError" />
				</add-error>
				<check-errors />
			</then>
			
			<else>
			
		
			   <create-value value-field="newEntity" />
		      <property-to-field resource="HumanResUiLabels"
			  property="CreateSuccess" field="successMessage" />
			</else>
		</if>

    </simple-method>
    
    
    <simple-method method-name="updatePerfGoals" short-description="Update PerfGoals">
        <entity-one entity-name="PerfGoals" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deletePerfGoals" short-description="Delete PerfGoals">
        <entity-one entity-name="PerfGoals" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
    </simple-method>
	
	
	<simple-method method-name="createKPIDefinition" short-description="create KPI Definition">
        <make-value entity-name="KeyPerformanceIndicators" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="KeyPerformanceIndicators" field="keyPerformanceIndicatorsId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="keyPerformanceIndicatorsId" field="newEntity.keyPerformanceIndicatorsId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
        <property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
    </simple-method>
    <simple-method method-name="updateKPIDefinition" short-description="Update KPI Definition">
        <entity-one entity-name="KeyPerformanceIndicators" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="deleteKPIDefinition" short-description="Delete KPI Definition">
        <entity-one entity-name="KeyPerformanceIndicators" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="createKPIAchievementStatus" short-description="create KPI Achievement Status">
        <make-value entity-name="KPIAchievementStatus" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="KPIAchievementStatus" field="kpiAchievementStatusId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="kpiAchievementStatusId" field="newEntity.kpiAchievementStatusId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
        <property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
    </simple-method>
    <simple-method method-name="updateKPIAchievementStatus" short-description="Update KPI Achievement Status">
        <entity-one entity-name="KPIAchievementStatus" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="deleteKPIAchievementStatus" short-description="Delete KPI Achievement Status">
        <entity-one entity-name="KPIAchievementStatus" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
    </simple-method>
	
	<simple-method method-name="createPositionObjectives" short-description="create Position Objectives">
        <make-value entity-name="KPITargets" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="KPITargets" field="kpiTargetId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="kpiTargetId" field="newEntity.kpiTargetId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
        <property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
    </simple-method>
    <simple-method method-name="updatePositionObjectives" short-description="Update Position Objectives">
        <entity-one entity-name="KPITargets" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="deletePositionObjectives" short-description="Delete Position Objectives">
        <entity-one entity-name="KPITargets" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="createBranchObjectives" short-description="create Branch Objectives">
        <make-value entity-name="KPITargets" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="KPITargets" field="kpiTargetId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="kpiTargetId" field="newEntity.kpiTargetId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
        <property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
    </simple-method>
    <simple-method method-name="updateBranchObjectives" short-description="Update Branch Objectives">
        <entity-one entity-name="KPITargets" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="deleteBranchObjectives" short-description="Delete Branch Objectives">
        <entity-one entity-name="KPITargets" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="createDepartmentObjectives" short-description="create Department Objectives">
        <make-value entity-name="KPITargets" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="KPITargets" field="kpiTargetId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="kpiTargetId" field="newEntity.kpiTargetId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
        <property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
    </simple-method>
    <simple-method method-name="updateDepartmentObjectives" short-description="Update Department Objectives">
        <entity-one entity-name="KPITargets" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="deleteDepartmentObjectives" short-description="Delete Department Objectives">
        <entity-one entity-name="KPITargets" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="createStaffObjectives" short-description="create Staff Objectives">
        <make-value entity-name="KPITargets" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="KPITargets" field="kpiTargetId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="kpiTargetId" field="newEntity.kpiTargetId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
        <property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
    </simple-method>
    <simple-method method-name="updateStaffObjectives" short-description="Update Staff Objectives">
        <entity-one entity-name="KPITargets" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="deleteStaffObjectives" short-description="Delete Staff Objectives">
        <entity-one entity-name="KPITargets" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
    </simple-method>
	
	<simple-method method-name="createPerfRatingType" short-description="create Performance Rating Type">
        <make-value entity-name="PerfRatingType" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="PerfRatingType" field="perfRatingTypeId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="perfRatingTypeId" field="newEntity.perfRatingTypeId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
        <property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
    </simple-method>
    <simple-method method-name="updatePerfRatingType" short-description="Update Performance Rating Type">
        <entity-one entity-name="PerfRatingType" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="deletePerfRatingType" short-description="Delete Performance Rating Type">
        <entity-one entity-name="PerfRatingType" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="createPerfRatingTypeQTT" short-description="create Performance Rating Type">
        <make-value entity-name="PerfRatingType_QTT" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="PerfRatingType_QTT" field="perfRatingTypeQTTId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="perfRatingTypeQTTId" field="newEntity.perfRatingTypeQTTId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
        <property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
    </simple-method>
    <simple-method method-name="updatePerfRatingTypeQTT" short-description="Update Performance Rating Type">
        <entity-one entity-name="PerfRatingType_QTT" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="deletePerfRatingTypeQTT" short-description="Delete Performance Rating Type">
        <entity-one entity-name="PerfRatingType_QTT" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
    </simple-method>
	

	<simple-method method-name="createPerformanceNote"
		short-description="Create Performance Note">
		<make-value entity-name="PerformanceNote" value-field="newEntity" />
		<set-pk-fields value-field="newEntity" map="parameters" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<if-empty field="newEntity.fromDate">
			<now-timestamp field="nowTimeStamp" />
			<set field="newEntity.fromDate" from-field="nowTimeStamp" />
		</if-empty>
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updatePerformanceNote"
		short-description="Update Performance Note">
		<entity-one entity-name="PerformanceNote" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deletePerformanceNote"
		short-description="Delete Performance Note">
		<entity-one entity-name="PerformanceNote" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	

	<!-- Employment Group -->
	<simple-method method-name="createEmployment"
		short-description="Create Employment">
		<make-value entity-name="Employment" value-field="newEntity" />
		<set-pk-fields value-field="newEntity" map="parameters" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<if-empty field="newEntity.fromDate">
			<now-timestamp field="nowTimeStamp" />
			<set field="newEntity.fromDate" from-field="nowTimeStamp" />
		</if-empty>
		<!--  -->
		
		<set field="partyIdTo" value="${newEntity.partyIdTo}" type="String"/>
		
		<!-- set field="existstatus" value="${bsh:org.ofbiz.humanres.HumanResourceSetup.employeePostingExist(partyIdTo);}" type="Boolean"/ -->
		<set field="existstatus" value="false" type="Boolean"/>
		<if>
			<condition>
				<if-compare operator="equals" value="true" field="existstatus"></if-compare>
			</condition>
			<then>
				<add-error>
					<fail-message message="The Employee is posted ONLY once. The Employee You Selected has already been posted. Search To See his Postings "/>
				</add-error>
				 <check-errors /> 
			</then>
			<else>
		
		<create-value value-field="newEntity" />
		
		<set-service-fields service-name="createPayHistory"
			map="newEntity" to-map="createPayHistoryMap" />
		<call-service service-name="createPayHistory"
			in-map-name="createPayHistoryMap" />
			</else>
		</if>
		
		<!--  
		
		<create-value value-field="newEntity" />
		
		<set-service-fields service-name="createPayHistory"
			map="newEntity" to-map="createPayHistoryMap" />
		<call-service service-name="createPayHistory"
			in-map-name="createPayHistoryMap" />
		-->
	</simple-method>

	<simple-method method-name="updateEmployment"
		short-description="Update Employment">
		<entity-one entity-name="Employment" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteEmployment"
		short-description="Delete Employment">
		<entity-one entity-name="Employment" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	<!-- ============================================================================================================== -->
	<simple-method method-name="postingUpdate" short-description="Posting Update ">
		 <call-simple-method method-name="createEmployment" scope="inline"></call-simple-method>
		 <!-- call-simple-method method-name="saveRequestedFile" scope="inline"></call-simple-method>
		  <call-simple-method method-name="saveRequestActionToLogs" scope="inline"></call-simple-method -->
		 
		<set field="partyIdTo" value="${partyIdTo}"/>
		<log message=">>>>>>>>>>>>>>>>********************************>>>>>>>PARAMETERS1 ${parameters.partyIdTo}" level="info"/>
		<log message=">>>>>>>>>>>>>>>>********************************>>>>>>>PARAMETERS2 ${parameters.branchId}" level="info"/>
		<log message=">>>>>>>>>>>>>>>>********************************>>>>>>>PARAMETERS3 ${parameters.departmentId}" level="info"/>

		 
		 <entity-one entity-name="Person" value-field="pers">
		 	<field-map field-name="partyId" from-field="parameters.partyIdTo"/>
		 </entity-one>

		 <!-- Get status -->
		 <set field="pers.branchId" from-field="parameters.branchId" />
		 <set field="pers.departmentId" from-field="parameters.departmentId" />
           		<store-value value-field="pers" />
		        <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>
	<!-- ============================================================================================================== -->
	
	<!-- ========================= DEPARTMENT DEFINITION =================================== -->
	
	<!-- Estate -->
    <simple-method method-name="createDepartment" short-description="Create Estate">
            <make-value entity-name="department" value-field="newEntity"/>
             <set-pk-fields map="parameters" value-field="newEntity"/>
            <set-nonpk-fields map="parameters" value-field="newEntity"/>
            <sequenced-id sequence-name="department" field="departmentId"/>
            <set from-field="departmentId" field="newEntity.departmentId"/>
            <create-value value-field="newEntity"/>
            <property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="deleteDepartment" short-description="Remove an estate">
        <set field="departmentId" from-field="parameters.departmentId"/>
        <entity-one entity-name="department" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="updateDepartment" short-description="Update an existing Budget">
        <entity-one entity-name="department" value-field="lookedUpValue"/>
        <set-nonpk-fields map="parameters" value-field="lookedUpValue"/>
        <set-pk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
       
    </simple-method>
	
	<!-- ========================= OFFICIAL EMAILS DEFINITION =================================== -->
	
	<!-- Estate -->
    <simple-method method-name="createEmail" short-description="Create Estate">
            <make-value entity-name="OfficialEmail" value-field="newEntity"/>
             <set-pk-fields map="parameters" value-field="newEntity"/>
            <set-nonpk-fields map="parameters" value-field="newEntity"/>
            <create-value value-field="newEntity"/>
            <property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="deleteEmail" short-description="Remove an estate">
        <set field="partyId" from-field="parameters.partyId"/>
        <entity-one entity-name="OfficialEmail" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="updateEmail" short-description="Update an existing Budget">
        <entity-one entity-name="OfficialEmail" value-field="lookedUpValue"/>
        <set-nonpk-fields map="parameters" value-field="lookedUpValue"/>
        <set-pk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
       
    </simple-method>
	
	
	
	

	<simple-method method-name="createEmploymentApp"
		short-description="Create an Employment Application">
		<make-value entity-name="EmploymentApp" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="EmploymentApp" field="newEntity.applicationId" />
		<field-to-result field="newEntity.applicationId"
			result-name="applicationId" />
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updateEmploymentApp"
		short-description="Update EmploymentApp">
		<entity-one entity-name="EmploymentApp" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteEmploymentApp"
		short-description="Delete EmploymentApp">
		<entity-one entity-name="EmploymentApp" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	<simple-method method-name="createEmploymentHistory" short-description="Create Employment History">
        <make-value entity-name="EmploymentHistory" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="EmploymentHistory" field="employmentHistoryId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="employmentHistoryId" field="newEntity.employmentHistoryId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
        <property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
    </simple-method>
    <simple-method method-name="updateEmploymentHistory" short-description="Update Employment History">
        <entity-one entity-name="EmploymentHistory" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="deleteEmploymentHistory" short-description="Delete Employment History">
        <entity-one entity-name="EmploymentHistory" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
    </simple-method>

	<simple-method method-name="createPartyBenefit"
		short-description="Create Party Benefit">
		<make-value entity-name="PartyBenefit" value-field="newEntity" />
		<set-pk-fields value-field="newEntity" map="parameters" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<if-empty field="newEntity.fromDate">
			<now-timestamp field="nowTimeStamp" />
			<set field="newEntity.fromDate" from-field="nowTimeStamp" />
		</if-empty>
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updatePartyBenefit"
		short-description="Update Party Benefit">
		<entity-one entity-name="PartyBenefit" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deletePartyBenefit"
		short-description="Delete Party Benefit">
		<now-timestamp field="nowTimeStamp" />
		<entity-one entity-name="PartyBenefit" value-field="lookedUpValue" />
		<set field="lookedUpValue.thruDate" from-field="nowTimeStamp" />
		<store-value value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="createPayGrade"
		short-description="Create a Pay Grade">
		<make-value entity-name="PayGrade" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		
		<sequenced-id sequence-name="PayGrade" field="payGradeId" />
		
		<set field="newEntity.payGradeId" from-field="payGradeId"/>
		
		<set field="payGradeName" value="${newEntity.payGradeName}" type="String"/>
		
		<set field="existstatus" value="${bsh:org.ofbiz.humanres.HumanResourceSetup.payGradeExists(payGradeName);}" type="Boolean"/>
		
		<if>
			<condition>
				<if-compare operator="equals" value="true" field="existstatus"></if-compare>
			</condition>
			<then>
				<add-error>
					<fail-message message="Paygrade ${payGradeName} already exists, please try another one "/>
				</add-error>
				 <check-errors /> 
			</then>
			<else>
				<create-value value-field="newEntity" />
				<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
			</else>
		</if>
		
	</simple-method>

	<simple-method method-name="updatePayGrade"
		short-description="Update Pay Grade">
		<entity-one entity-name="PayGrade" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

    <!--<simple-method method-name="deletePayGrade"
		short-description="Delete Pay Grade">
		<entity-one entity-name="PayGrade" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	 -->
	
	<simple-method method-name="deletePayGrade"
		short-description="Delete Pay Grade">
		<set field="payGradeId" from-field="parameters.payGradeId" />
		<entity-one entity-name="PayGrade" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	

	<simple-method method-name="createPayHistory"
		short-description="Create Pay History">
		<make-value entity-name="PayHistory" value-field="newEntity" />
		<set-pk-fields value-field="newEntity" map="parameters" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<if-empty field="newEntity.fromDate">
			<now-timestamp field="nowTimeStamp" />
			<set field="newEntity.fromDate" from-field="nowTimeStamp" />
		</if-empty>
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updatePayHistory"
		short-description="Update Pay History">
		<entity-one entity-name="PayHistory" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deletePayHistory"
		short-description="Delete Pay History">
		<now-timestamp field="nowTimeStamp" />
		<entity-one entity-name="PayHistory" value-field="lookedUpValue" />
		<set field="lookedUpValue.thruDate" from-field="nowTimeStamp" />
		<store-value value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="createPayrollPreference"
		short-description="Create a Payroll Preference">
		<make-value entity-name="PayrollPreference" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="PayrollPreference"
			field="newEntity.payrollPreferenceSeqId" />
		<field-to-result field="payrollPreferenceSeqId"
			result-name="payrollPreferenceSeqId" />
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updatePayrollPreference"
		short-description="Update Payroll Preference">
		<entity-one entity-name="PayrollPreference" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deletePayrollPreference"
		short-description="Delete Payroll Preference">
		<entity-one entity-name="PayrollPreference" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="createSalaryStep"
		short-description="Create a Salary Step">
		<make-value entity-name="SalaryStep" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="SalaryStep" field="newEntity.salaryStepSeqId" />
		<field-to-result field="salaryStepSeqId" result-name="salaryStepSeqId" />
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updateSalaryStep"
		short-description="Update Salary Step">
		<entity-one entity-name="SalaryStep" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteSalaryStep"
		short-description="Delete Salary Step">
		<entity-one entity-name="SalaryStep" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="createTerminationReason"
		short-description="Create a Termination Reason">
		<make-value entity-name="TerminationReason" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<if-empty field="newEntity.terminationReasonId">
			<sequenced-id sequence-name="TerminationReason"
				field="newEntity.terminationReasonId" />
		</if-empty>
		<field-to-result field="newEntity.terminationReasonId"
			result-name="terminationReasonId" />
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updateTerminationReason"
		short-description="Update Termination Reason">
		<entity-one entity-name="TerminationReason" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteTerminationReason"
		short-description="Delete Termination Reason">
		<entity-one entity-name="TerminationReason" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="createUnemploymentClaim"
		short-description="Create a Unemployment Claim">
		<make-value entity-name="UnemploymentClaim" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="UnemploymentClaim"
			field="newEntity.unemploymentClaimId" />
		<field-to-result field="newEntity.unemploymentClaimId"
			result-name="unemploymentClaimId" />
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updateUnemploymentClaim"
		short-description="Update Unemployment Claim">
		<entity-one entity-name="UnemploymentClaim" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteUnemploymentClaim"
		short-description="Delete Unemployment Claim">
		<now-timestamp field="nowTimeStamp" />
		<entity-one entity-name="UnemploymentClaim" value-field="lookedUpValue" />
		<set field="lookedUpValue.thruDate" from-field="nowTimeStamp" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<!-- Employee Position Group -->
	<simple-method method-name="createEmplPosition"
		short-description="Create a Employee Position">
		<make-value entity-name="EmplPosition" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="EmplPosition" field="newEntity.emplPositionId" />
		<field-to-result field="newEntity.emplPositionId"
			result-name="emplPositionId" />
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updateEmplPosition"
		short-description="Update Employee Position">
		<entity-one entity-name="EmplPosition" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteEmplPosition"
		short-description="Delete Employee Position">
		<entity-one entity-name="EmplPosition" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	
	<!-- ============================================================================================================== -->
	<simple-method method-name="positionUpdate" short-description="Position Update ">
		<call-simple-method method-name="createEmplPositionFulfillment" scope="inline"></call-simple-method>
		 
		 <!-- call-simple-method method-name="saveRequestedFile" scope="inline"></call-simple-method>
		  <call-simple-method method-name="saveRequestActionToLogs" scope="inline"></call-simple-method -->
		 
		<set field="partyId" value="${partyId}"/>
		<log message=">>>>>>>>>>>>>>>>********************************>>>>>>>PARAMETERS ${parameters.partyId}" level="info"/>
		<log message=">>>>>>>>>>>>>>>>********************************>>>>>>>PARAMETERS2 ${parameters.emplPositionTypeId}" level="info"/>
		 
		 
		 <entity-one entity-name="Person" value-field="pers">
		 	<field-map field-name="partyId" from-field="parameters.partyId"/>
		 </entity-one>
		 
		  <entity-one entity-name="EmplPositionType" value-field="ept">
		 	<field-map field-name="emplPositionTypeId" from-field="parameters.emplPositionTypeId"/>
		 </entity-one>

		 <!-- Get status -->
		 <set field="pers.emplPositionTypeId" from-field="parameters.emplPositionTypeId" />
		 <set field="pers.payGradeId" from-field="ept.payGradeId" />
		<store-value value-field="pers" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>
	
	

	<simple-method method-name="createEmplPositionFulfillment"
		short-description="Create a Employee Position Fulfillment">
		<log message="====PARAETERS+++++++++++++++ ${parameters}===" level="info"/>
		<log message="====+++++++++++++++=================================================================" level="info"/>
		
		<make-value entity-name="EmplPositionFulfillment"	value-field="newEntity" />
			<log message="====newEntity+++++++++++++++ ${newEntity}===" level="info"/>
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<if-empty field="newEntity.fromDate">
			<now-timestamp field="nowTimeStamp" />
			<set field="newEntity.fromDate" from-field="nowTimeStamp" />
		</if-empty>
		
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
		
	<!--	<entity-one entity-name="Person" value-field="personContext">
		 	<field-map field-name="partyId" from-field="newEntity.partyId"/>
		 </entity-one>
		
		 <set field="personContext.emplPositionTypeId" from-field="parameters.emplPositionTypeId"/>
		 <log message=">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>PARTYID+++++++++++++++ ${personContext.partyId}===" level="info"/>
		 <set field="personContext.partyId" from-field="partyId"/>
		 <call-service service-name="updatePerson" in-map-name="personContext"/>
		--><!--<call-simple-method  method-name="positionUpdate" scope="inline">
		</call-simple-method>-->
		
	</simple-method>

	<simple-method method-name="updateEmplPositionFulfillment"
		short-description="Update Employee Position Fulfillment">
		<entity-one entity-name="EmplPositionFulfillment"
			value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteEmplPositionFulfillment"
		short-description="Delete Employee Position Fulfillment">
		<entity-one entity-name="EmplPositionFulfillment"
			value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="createEmplPositionReportingStruct"
		short-description="Create a Employee Position Reporting Structure">
		<make-value entity-name="EmplPositionReportingStruct"
			value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<if-empty field="newEntity.fromDate">
			<now-timestamp field="nowTimeStamp" />
			<set field="newEntity.fromDate" from-field="nowTimeStamp" />
		</if-empty>
		<if>
			<condition>
				<if-compare-field field="parameters.emplPositionIdManagedBy"
					to-field="parameters.emplPositionIdReportingTo" operator="not-equals" />
			</condition>
			<then>
				<create-value value-field="newEntity" />
			</then>
			<else>
				<add-error>
					<fail-property
						property="HumanResEmplPostitionIdReportingToAndEmplPositionIdManagedByMustBeDiff"
						resource="HumanResUiLabels" />
				</add-error>
				<check-errors />
			</else>
		</if>
	</simple-method>

	<simple-method method-name="updateEmplPositionReportingStruct"
		short-description="Update Employee Position Reporting Structure">
		<entity-one entity-name="EmplPositionReportingStruct"
			value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteEmplPositionReportingStruct"
		short-description="Delete Employee Position Reporting Structure">
		<entity-one entity-name="EmplPositionReportingStruct"
			value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="createEmplPositionResponsibility"
		short-description="Create a Employee Position Responsibility">
		<make-value entity-name="EmplPositionResponsibility"
			value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<if-empty field="newEntity.fromDate">
			<now-timestamp field="nowTimeStamp" />
			<set field="newEntity.fromDate" from-field="nowTimeStamp" />
		</if-empty>
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updateEmplPositionResponsibility"
		short-description="Update Employee Position Responsibility">
		<entity-one entity-name="EmplPositionResponsibility"
			value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteEmplPositionResponsibility"
		short-description="Delete Employee Position Responsibility">
		<entity-one entity-name="EmplPositionResponsibility"
			value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="createValidResponsibility"
		short-description="Create a Valid Responsibility">
		<make-value entity-name="ValidResponsibility" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<if-empty field="newEntity.fromDate">
			<now-timestamp field="nowTimeStamp" />
			<set field="newEntity.fromDate" from-field="nowTimeStamp" />
		</if-empty>
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updateValidResponsibility"
		short-description="Update Valid Responsibility">
		<entity-one entity-name="ValidResponsibility" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteValidResponsibility"
		short-description="Delete Valid Responsibility">
		<entity-one entity-name="ValidResponsibility" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	<!-- Skill Types -->
	<simple-method method-name="createSkillType"
		short-description="Create a SkillType">
		<make-value entity-name="SkillType" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
			<sequenced-id sequence-name="SkillType" field="skillTypeId" />
		<set field="newEntity.skillTypeId" from-field="skillTypeId"/>
		<set field="newEntity.skill" from-field="newEntity.description"/>
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updateSkillType"
		short-description="Update SkillType">
		<entity-one entity-name="SkillType" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteSkillType" short-description="Delete SkillType">
		<entity-one entity-name="SkillType" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

    <simple-method method-name="createPartyRole" short-description="Create Party Role">
        <entity-one entity-name="PartyRole" value-field="partyRole"/>
        <if-empty field="partyRole">
            <make-value entity-name="PartyRole" value-field="newEntity"/>
            <set-pk-fields map="parameters" value-field="newEntity"/>
            <create-value value-field="newEntity"/>
            <property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
        </if-empty>
    </simple-method>



	<simple-method method-name="createEmployee"
		short-description="Create New Employee">
		<set field="parameters.roleTypeId" value="EMPLOYEE" />
		<set field="roleMap.partyId" from-field="parameters.accountPartyId"/>
        <set field="roleMap.roleTypeId" value="EMPLOYEE"/>
        <call-service service-name="createPartyRole" in-map-name="roleMap"/>
		<call-simple-method method-name="createPersonRoleAndContactMechs"
			xml-resource="component://party/script/org/ofbiz/party/party/PartySimpleMethods.xml" />
		<if-not-empty field="parameters.partyIdFrom">
			<set field="partyRelationshipCtx.partyId" from-field="partyId" />
			<set field="partyRelationshipCtx.partyIdFrom" from-field="parameters.partyIdFrom" />
			<set field="partyRelationshipCtx.partyIdTo" from-field="partyId" />
			<set field="partyRelationshipCtx.roleTypeIdFrom" value="INTERNAL_ORGANIZATIO" />
			<set field="partyRelationshipCtx.roleTypeIdTo" value="EMPLOYEE" />
			<set field="partyRelationshipCtx.relationshipName" value="EMPLOYMENT" />
			<set field="partyRelationshipCtx.fromDate" from-field="parameters.fromDate" />
			<now-timestamp field="nowTimestamp" />
			<if-empty field="partyRelationshipCtx.fromDate">
				<set field="partyRelationshipCtx.fromDate" from-field="nowTimestamp" />
			</if-empty>
			<call-service service-name="createPartyRelationship"
				in-map-name="partyRelationshipCtx" />
		</if-not-empty>
		<field-to-result field="partyId" />
	</simple-method>

	<!-- Responsibility Types -->
	<simple-method method-name="createResponsibilityType"
		short-description="Create a ResponsibilityType">
		<make-value entity-name="ResponsibilityType" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<if-empty field="newEntity.responsibilityTypeId">
			<sequenced-id sequence-name="ResponsibilityType"
				field="newEntity.responsibilityTypeId" />
		</if-empty>
		<field-to-result field="newEntity.responsibilityTypeId"
			result-name="responsibilityTypeId" />
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updateResponsibilityType"
		short-description="Update ResponsibilityType">
		<entity-one entity-name="ResponsibilityType" value-field="lookedUpValue" />
		<set-nonpk-fields map="parameters" value-field="lookedUpValue" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteResponsibilityType"
		short-description="Delete ResponsibilityType">
		<entity-one entity-name="ResponsibilityType" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="createTerminationType"
		short-description="Create a TerminationType">
		<make-value entity-name="TerminationType" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<if-empty field="newEntity.terminationTypeId">
			<sequenced-id sequence-name="TerminationType"
				field="newEntity.terminationTypeId" />
		</if-empty>
		<field-to-result field="newEntity.terminationTypeId"
			result-name="terminationTypeId" />
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updateTerminationType"
		short-description="Update TerminationType">
		<entity-one entity-name="TerminationType" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteTerminationType"
		short-description="Delete TerminationType">
		<entity-one entity-name="TerminationType" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="createEmplPositionType"
		short-description="Create a PositionType">
		<make-value entity-name="EmplPositionType" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		
		<sequenced-id sequence-name="EmplPositionType" field="emplPositionTypeId" />

		<set from-field="emplPositionTypeId" field="newEntity.emplPositionTypeId" />
		
		<create-value value-field="newEntity" />
		<call-simple-method method-name="createEmplPositionAtTypeCreation" scope="inline"></call-simple-method>
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>
	
	<simple-method method-name="createEmplPositionAtTypeCreation"
		short-description="Create a Employee Position">
		<make-value entity-name="EmplPosition" value-field="newEntity2" />
		<set-nonpk-fields map="parameters" value-field="newEntity2" />
		<sequenced-id sequence-name="EmplPosition" field="emplPositionId" />
		<set from-field="emplPositionId" field="newEntity2.emplPositionId" />
		<set from-field="newEntity.emplPositionTypeId" field="newEntity2.emplPositionTypeId" />
		<create-value value-field="newEntity2" />
	</simple-method>

	<simple-method method-name="updateEmplPositionType"
		short-description="Update PositionType">
		<entity-one entity-name="EmplPositionType" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteEmplPositionType"
		short-description="Delete EmplPositionType">
		<entity-one entity-name="EmplPositionType" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updateEmplPositionTypeRate"
		short-description="Update/create EmplPositionTypeRate">
		<entity-one entity-name="EmplPositionTypeRate" value-field="lookedUpValue" />
		<!-- check if already exist is so expire current record -->
		<entity-and entity-name="EmplPositionTypeRate" list="emplPositionTypeRates"
			filter-by-date="true">
			<field-map field-name="emplPositionTypeId" from-field="parameters.emplPositionTypeId" />
			<field-map field-name="rateTypeId" from-field="parameters.rateTypeId" />
		</entity-and>
		<if-not-empty field="emplPositionTypeRates">
			<first-from-list entry="emplPositionTypeRate" list="emplPositionTypeRates" />
			<now-timestamp field="emplPositionTypeRate.thruDate" />
			<store-value value-field="emplPositionTypeRate" />
		</if-not-empty>

		<make-value value-field="newEntity" entity-name="EmplPositionTypeRate" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<if-empty field="newEntity.fromDate">
			<now-timestamp field="newEntity.fromDate" />
		</if-empty>
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<create-value value-field="newEntity" />

		<if-not-empty field="parameters.rateAmount">
			<set-service-fields service-name="updateRateAmount"
				map="parameters" to-map="updRate" />
			<call-service service-name="updateRateAmount"
				in-map-name="updRate" />
		</if-not-empty>
	</simple-method>

	<simple-method method-name="deleteEmplPositionTypeRate"
		short-description="Delete EmplPositionTypeRate">
		<entity-one entity-name="EmplPositionTypeRate" value-field="lookedUpValue" />
		<now-timestamp field="lookedUpValue.thruDate" />
		<store-value value-field="lookedUpValue" />

		<set-service-fields service-name="deleteRateAmount"
			map="parameters" to-map="delRateAmount" />
		<set field="delRateAmount.fromDate" from-field="parameters.rateAmountFromDate" />
		<call-service service-name="deleteRateAmount"
			in-map-name="delRateAmount" />
			<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="createAgreementEmploymentAppl"
		short-description="Create Agreement Employment Appl">
		<make-value entity-name="AgreementEmploymentAppl"
			value-field="agreementEmploymentAppl" />
		<set-pk-fields value-field="agreementEmploymentAppl"
			map="parameters" />
		<set-nonpk-fields value-field="agreementEmploymentAppl"
			map="parameters" />
		<create-value value-field="agreementEmploymentAppl" />
		<check-errors />
	</simple-method>

	<simple-method method-name="updateAgreementEmploymentAppl"
		short-description="update an Agreement Employment Appl">
		<entity-one entity-name="AgreementEmploymentAppl"
			value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteAgreementEmploymentAppl"
		short-description="Delete Agreement Employment Appl">
		<entity-one entity-name="AgreementEmploymentAppl"
			value-field="agreementEmploymentAppl" />
		<remove-value value-field="agreementEmploymentAppl" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>


<!-- 	<simple-method method-name="createEmplLeave"
		short-description="Create Employee Leave">
		<make-value entity-name="EmplLeave" value-field="newEntity" />
		<set-pk-fields value-field="newEntity" map="parameters" />
		<set-nonpk-fields value-field="newEntity" map="parameters" />
		<if-empty field="newEntity.leaveId">
			<sequenced-id sequence-name="EmplLeaveId" field="leaveId" />
		</if-empty>
		<set field="newEntity.leaveId" from-field="leaveId" />
		<set field="newEntity.documentTypeId" value="LEAVE" />
		<set field="newEntity.leaveStage" from-field="leaveStage" />
		<create-value value-field="newEntity" />
		<check-errors />
		<property-to-field resource="HumanResUiLabels"
			property="HumanResLeaveCreationSuccess" field="successMessage" />
		<field-to-result field="responseMessage" result-name="successMessage" />
	</simple-method> -->
	
	

<!-- 	<simple-method method-name="updateEmplLeave"
		short-description="Update Employee Leave">
		<entity-one entity-name="EmplLeave"  value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="HumanResLeaveCreationSuccess" field="successMessage" />
	</simple-method> -->
	
	<!-- <simple-method method-name="updateEmplLeave"
		short-description="Update Employee Leave">
		<entity-one entity-name="EmplLeave" value-field="lookedUpValue" />
		<set-nonpk-fields map="parameters" value-field="lookedUpValue" />
		<set-pk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />

	</simple-method>  -->
	
	<simple-method method-name="updateEmplLeave" short-description="Update an existing user estate">
        <entity-one entity-name="EmplLeave" value-field="lookedUpValue"/>
        <set-nonpk-fields map="parameters" value-field="lookedUpValue"/>
        
          
           
        <set field="leaveType" from-field="lookedUpValue.leaveTypeId"/>
		<set field="party" value="${userLogin.partyId}"  />
		<set field="durat" from-field="lookedUpValue.leaveDuration" type="Double"/>
		<set field="thruDate" from-field="lookedUpValue.thruDate" />
		<set field="fromDate" from-field="lookedUpValue.fromDate" />
		<set field="userGender" value="${bsh:org.ofbiz.humanres.LeaveApplicationValidation.getGenderState(leaveType, party);}"/>
		<set field="notice" value="${bsh:org.ofbiz.humanres.LeaveApplicationValidation.getNoticePeriodState(leaveType, fromDate);}"/>
		<set field="duration" value="${bsh:org.ofbiz.humanres.LeaveApplicationValidation.getLeaveDurationState(leaveType, durat);}"/>
		<set field="employementTermsState" value="${bsh:org.ofbiz.humanres.LeaveApplicationValidation.getEmploymentStatusState(party);}"/>
		<set field="correctDateState" value="${bsh:org.ofbiz.humanres.LeaveApplicationValidation.isLeaveApplicationCorrect(leaveType, fromDate, durat, thruDate);}"/>
		<set field="correctAnnualDurationState" value="${bsh:org.ofbiz.humanres.LeaveApplicationValidation.getAnnualLeaveDurationState(leaveType, durat, party);}"/>
		<set field="valid" value="INVALID"/>
		<set field="no" value="NO"/>
		
		<log message=">>>>>>>>>>>>>>>>***>>>>>>>DURATION_STATE ${duration}" level="info"/>
		<if>
			<condition>
					<if-compare-field field="correctAnnualDurationState"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="annualLeaveDurationError" />
				</add-error>
				<check-errors />
			</then>
		</if>
		<if>
			<condition>
					<if-compare-field field="correctDateState"
						to-field="no" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="leaveApplicationDatesError" />
				</add-error>
				<check-errors />
			</then>
		</if>
		
		<if>
			<condition>
					<if-compare-field field="employementTermsState"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="employmentTermsError" />
				</add-error>
				<check-errors />
			</then>
		</if>
		
		<if>
			<condition>
					<if-compare-field field="duration"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="LeavedurationError" />
				</add-error>
				<check-errors />
			</then>
		</if>
		
		<if>
			<condition>
					<if-compare-field field="notice"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="NoticeperiodError" />
				</add-error>
				<check-errors />
			</then>
		</if>
		
		<if>
			<condition>
					<if-compare-field field="userGender"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="GenderError" />
				</add-error>
				<check-errors />
			</then>
			
			<else>
			    <store-value value-field="lookedUpValue"/>
       <property-to-field resource="HumanResUiLabels" 
			property="UpdateSuccess" field="successMessage" />
			</else>
		</if>
        
        
      
    </simple-method>
    
	
	<simple-method method-name="updateEmplLeave2"
		short-description="Update Employee Leave">
		<entity-one entity-name="EmplLeave" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>
	
	

    <simple-method method-name="approveEmplLeaveStatus"
        short-description="Approved Employee Leave">
        <entity-one entity-name="EmplLeave" value-field="lookedUpValue" />
        <set-nonpk-fields value-field="lookedUpValue" map="parameters" />
        <set field="lookedUpValue.approvedBy" from-field="userLogin.userLoginId" />
       
        <if-compare operator="equals" value="01" field="lookedUpValue.leaveStage">
         <set field="lookedUpValue.leaveStage" value="02" />
        </if-compare>
        <if-compare operator="equals" value="02" field="lookedUpValue.leaveStage">
         <set field="lookedUpValue.leaveStage" value="03" />
        </if-compare>
        <if-compare operator="equals" value="03" field="lookedUpValue.leaveStage">
         <set field="lookedUpValue.leaveStage" value="04" />
        </if-compare>
        
        <set field="lookedUpValue.leaveStatus" value="Approved" />
        
        <now-timestamp field="nowTimestamp" />
		<set from-field="nowTimestamp" field="lookedUpValue.dateApprovedRejected"/>

        <store-value value-field="lookedUpValue" />
        
		<log message="==== Leave Approved for ${lookedUpValue.partyId} by ${userLogin.userLoginId}===" level="info"/>
        <make-value value-field="newEntity" entity-name="LeaveStatusLog" />
        <set-pk-fields map="parameters" value-field="newEntity" />
        <set-nonpk-fields map="parameters" value-field="newEntity" />
        <sequenced-id sequence-name="LeaveStatusLog" stagger-max="1" field="leaveStsLogId" />
        <set field="newEntity.leaveStsLogId" from-field="leaveStsLogId" />
        <set field="newEntity.leaveId" from="lookedUpValue.leaveId" />
        <set field="newEntity.partyId" from="lookedUpValue.partyId" />
        <set field="newEntity.approvedBy" from-field="userLogin.userLoginId" />
        <set field="newEntity.approvalStatus" value="Approved" />
        <create-value value-field="newEntity" />
        <log message="===== Leave Approved log stored for ${lookedUpValue.partyId} by ${userLogin.userLoginId} ===" level="info"/>
        
       

    </simple-method>
    
  
	
	
    
     <!-- ==============================EMPLOYEE CALL BACK FROM LEAVE================================== -->
     <simple-method method-name="updateLeaveDuration"
        short-description="Reject Employee Leave">
        <entity-one entity-name="EmplLeave" value-field="lookedUpValue" />
        <set-nonpk-fields value-field="lookedUpValue" map="parameters" />
        <set field="lookedUpValue.leaveDuration" from-field="lookedUpValue.newDuration" />
        
        <set field="lookedUpValue.thruDate" from-field="lookedUpValue.callBackDate" />
        <store-value value-field="lookedUpValue" />
			
        
        <make-value value-field="newEntity" entity-name="LeaveStatusLog" />
        <set-pk-fields map="parameters" value-field="newEntity" />
        <set-nonpk-fields map="parameters" value-field="newEntity" />
        <sequenced-id sequence-name="LeaveStatusLog" field="leaveStsLogId" />
        <set field="newEntity.leaveStsLogId" from-field="leaveStsLogId" />
        <log message="===== Leave Rejected log stored for ${lookedUpValue.partyId} by ${userLogin.userLoginId} ===" level="info"/>
        <set field="newEntity.rejectedBy" value="${userLogin.partyId}"  />
        <set field="newEntity.leaveId" from="lookedUpValue.leaveId" />
        <set field="newEntity.approvalStatus" value="Called Back" />
        <create-value value-field="newEntity" />
			<log message="===== Leave Rejected log stored for ${lookedUpValue.partyId} by ${userLogin.userLoginId} ===" level="info"/>
    </simple-method>
    
     <!-- ==============================RESET STAFF LOST LEAVE DAYS================================== -->
     <simple-method method-name="updateAnnualLeaveBalanceNOT"
        short-description="Reject Employee Leave">
        <entity-one entity-name="LeaveBalances" value-field="lookedUpValue" />
        <set-nonpk-fields value-field="lookedUpValue" map="parameters" />
        <set field="lost" from-field="lookedUpValue.lostLeaveDays" type="String"/>
        <set field="bal" from-field="lookedUpValue.availableLeaveDays" type="String"/>
        <set field="lookedUpValue.availableLeaveDays" value="${bsh:org.ofbiz.humanres.Leave.getValuesForAnnualLeaveReset(bal,lost);}" />
        <set field="lookedUpValue.lostLeaveDays" value="0" type="Double"/>
        <store-value value-field="lookedUpValue" />
    </simple-method>
    
    <simple-method method-name="updateAnnualLeaveBalance"
        short-description="Reject Employee Leave">
         <make-value value-field="newEntity" entity-name="AnnualLeaveBalancesReset" />
        <set-pk-fields map="parameters" value-field="newEntity" />
        <set-nonpk-fields map="parameters" value-field="newEntity" />
        <create-value value-field="newEntity" />
    </simple-method>
    
    
    
    <!-- ==============================REJECT LEAVE WITH REASON================================== -->
     <simple-method method-name="rejectLeaveWithReason"
        short-description="Reject Employee Leave">
        <entity-one entity-name="EmplLeave" value-field="lookedUpValue" />
        <set-nonpk-fields value-field="lookedUpValue" map="parameters" />
        <set field="lookedUpValue.responsibleEmployee" value="" />
        <set field="lookedUpValue.applicationStatus" value="Rejected" />
        <set field="lookedUpValue.approvalStatus" value="Rejected" />
        <set field="lookedUpValue.rejectReason" from-field="lookedUpValue.rejectReason" />
        
        <now-timestamp field="nowTimestamp" />
		<set from-field="nowTimestamp" field="lookedUpValue.dateApprovedRejected"/>
        <store-value value-field="lookedUpValue" />
		
	<!-- 	<set field="leaveId" value="${bsh:org.ofbiz.humanres.LeaveServices.SendRejectionMailToStaff(leaveId , userLoginPartyId );}"/> 
        
        <log message="#######LEAVE ID REJECTION  ${leaveId}" level="info"/> -->
        
        <make-value value-field="newEntity" entity-name="LeaveStatusLog" />
        <set-pk-fields map="parameters" value-field="newEntity" />
        <set-nonpk-fields map="parameters" value-field="newEntity" />
        <sequenced-id sequence-name="LeaveStatusLog" field="leaveStsLogId" />
        <set field="newEntity.leaveStsLogId" from-field="leaveStsLogId" />
        <log message="===== Leave Rejected log stored for ${lookedUpValue.partyId} by ${userLogin.userLoginId} ===" level="info"/>
        <set field="newEntity.rejectedBy" value="${userLogin.partyId}"  />
        <set field="newEntity.leaveId" from="lookedUpValue.leaveId" />
        <set field="newEntity.approvalStatus" value="Rejected" />
        
        <!-- value used to send mails to staffs on rejection -->
        <set field="theLeaveId" from-field="newEntity.leaveId"/>
        <set field="thePartyIdUserLoggedIn" from-field="newEntity.rejectedBy"/>
        
        <log message="########The LeaveID ###### ${theLeaveId}#######" level="info"/>
        <log message="########UserLoggedInParty ID ###### ${thePartyIdUserLoggedIn}#######" level="info"/>
        
        <set field="leaveId" value="${bsh:org.ofbiz.humanres.LeaveServices.SendRejectionMailToStaff(theLeaveId,thePartyIdUserLoggedIn);}"/>
        
         <log message="########RETURNED LEAVE ID ###### ${leaveId}#######" level="info"/>
        
        <!--END OF value used to send mails to staffs on rejection -->
        
        <create-value value-field="newEntity" />
			<log message="===== Leave Rejected log stored for ${lookedUpValue.partyId} by ${userLogin.userLoginId} ===" level="info"/>
			
			<call-simple-method method-name="rejectEmplLeaveStatusEmailInformation" scope="inline"></call-simple-method>
			<call-simple-method method-name="createStaffLeaveLogsReject" scope="inline"></call-simple-method>
			
			
			
    </simple-method>
    
     <!--======================= STAFF LEAVE LOGS =================================== -->
                     
	<simple-method method-name="createStaffLeaveLogsReject" short-description="Create File location">
		<make-value entity-name="staffLeaveLogs" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="staffLeaveLogs" field="logId" />
		<set from-field="logId" field="newEntity.logId" /> 
		
		
		
		<entity-one value-field="leavety" entity-name="EmplLeaveType">
			<field-map field-name="leaveTypeId" from-field="parameters.leaveTypeId"/>
			</entity-one>
			
			<entity-one value-field="approver" entity-name="Person">
			<field-map field-name="partyId" value="${userLogin.partyId}"/>
			</entity-one>
		
		<set field="newEntity.partyId" from-field="userLogin.userLoginId"/>
		<set field="newEntity.leaveType" from-field="leavety.description"/>
		<set field="newEntity.action" value="Leave Rejected By: ${approver.firstName} ${approver.lastName}"/>
		<set field="newEntity.actionBy" value="${userLogin.partyId}"/>
		
	   <create-value value-field="newEntity" />
			
			</simple-method>
    
    
      <simple-method method-name="rejectEmplLeaveStatusEmailInformation">
		<make-value entity-name="StaffScheduledMail" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="StaffScheduledMail" field="msgId" />
		<set from-field="msgId" field="newEntity.msgId" />
		 <set field="newEntity.partyId" from-field="parameters.partyId"/> 
		<set field="newEntity.body" value="Your Leave Application has been rejected with the following reason/comment:- [${lookedUpValue.rejectReason}] " />
		 <set field="newEntity.subject" value="Leave Status"/>
		<set field="newEntity.sendStatus" value="NOTSEND" />
		<create-value value-field="newEntity" />
	</simple-method>
	
    
     <!-- ==============================SEND BACK LEAVE WITH REASON================================== -->
     <simple-method method-name="sentLeaveBackWithReason"
        short-description="Reject Employee Leave">
        <entity-one entity-name="EmplLeave" value-field="lookedUpValue" />
        <set-nonpk-fields value-field="lookedUpValue" map="parameters" />
        <set field="lookedUpValue.responsibleEmployee" value="NEW" />
        <set field="lookedUpValue.applicationStatus" value="Send Back" />
        <set field="lookedUpValue.approvalStatus" value="Send Back" />
        <set field="lookedUpValue.rejectReason" from-field="lookedUpValue.rejectReason" />
        <store-value value-field="lookedUpValue" />
			
        
        <make-value value-field="newEntity" entity-name="LeaveStatusLog" />
        <set-pk-fields map="parameters" value-field="newEntity" />
        <set-nonpk-fields map="parameters" value-field="newEntity" />
        <sequenced-id sequence-name="LeaveStatusLog" field="leaveStsLogId" />
        <set field="newEntity.leaveStsLogId" from-field="leaveStsLogId" />
        <log message="===== Leave Rejected log stored for ${lookedUpValue.partyId} by ${userLogin.userLoginId} ===" level="info"/>
        <set field="newEntity.rejectedBy" value="${userLogin.partyId}" />
        <set field="newEntity.leaveId" from="lookedUpValue.leaveId" />
        <set field="newEntity.approvalStatus" value="Send Back" />
        <create-value value-field="newEntity" />
			<log message="===== Leave Rejected log stored for ${lookedUpValue.partyId} by ${userLogin.userLoginId} ===" level="info"/>
    </simple-method>
    
     
    
    <simple-method method-name="rejectEmplLeaveStatus"
        short-description="Reject Employee Leave">
        <entity-one entity-name="EmplLeave" value-field="lookedUpValue" />
        <set-nonpk-fields value-field="lookedUpValue" map="parameters" />
        <set field="lookedUpValue.responsibleEmployee" value="" />
        <set field="lookedUpValue.applicationStatus" value="Rejected" />
        <set field="lookedUpValue.approvalStatus" value="Rejected" />
        <store-value value-field="lookedUpValue" />
			
        
        <make-value value-field="newEntity" entity-name="LeaveStatusLog" />
        <set-pk-fields map="parameters" value-field="newEntity" />
        <set-nonpk-fields map="parameters" value-field="newEntity" />
        <sequenced-id sequence-name="LeaveStatusLog" stagger-max="1" field="leaveStsLogId" />
        <set field="newEntity.leaveStsLogId" from-field="leaveStsLogId" />
        <set field="newEntity.leaveId" from="lookedUpValue.leaveId" />
        <set field="newEntity.partyId" from="lookedUpValue.partyId" />
        <set field="newEntity.rejectedBy" from-field="userLogin.userLoginId" />
        <set field="newEntity.approvalStatus" value="Rejected" />
        <create-value value-field="newEntity" />
			<log message="===== Leave Rejected log stored for ${lookedUpValue.partyId} by ${userLogin.userLoginId} ===" level="info"/>
    </simple-method>
    
    <!-- ==============================EDIT STAFF CONFIRMATION DATE================================== -->
     <simple-method method-name="updateStaffConfirmation"
        short-description="Change staff confirmation date">
        <entity-one entity-name="Person" value-field="lookedUpValue" />
        <set-nonpk-fields value-field="lookedUpValue" map="parameters" />
        <set field="lookedUpValue.confirmationdate" from-field="lookedUpValue.confirmationdate"/>
        <store-value value-field="lookedUpValue" />
        <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
        </simple-method>
        
        <!-- ==============================STAFF CONFIRMATION================================== -->
     <simple-method method-name="ConfirmStaff"
        short-description="Change staff confirmation status">
        <entity-one entity-name="Person" value-field="lookedUpValue" />
        <set-nonpk-fields value-field="lookedUpValue" map="parameters" />
        <set field="lookedUpValue.employmentStatusEnumId" value="16"/>
        <store-value value-field="lookedUpValue" />
        </simple-method>
        
         <!-- ==============================STAFF DISMISSAL================================== -->
         
        <simple-method method-name="dismissStaff"
		short-description="Delete Employee">
		<set field="partyId" from-field="lookedUpValue.partyId" />
		<entity-one entity-name="Person" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		
		<call-simple-method method-name="dismissStaffFromPartyRole" scope="inline"></call-simple-method>
		<call-simple-method method-name="dismissStaffFromParty" scope="inline"></call-simple-method>
		
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	 <simple-method method-name="dismissStaffFromPartyRole"
		short-description="Delete Employee">
		<set field="partyId" from-field="lookedUpValue.partyId" />
		<entity-one entity-name="PartyRole" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
	</simple-method>
	
	 <simple-method method-name="dismissStaffFromParty"
		short-description="Delete Employee">
		<set field="partyId" from-field="lookedUpValue.partyId" />
		<entity-one entity-name="Party" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
	</simple-method>
	
	
    
    
	<simple-method method-name="createEmplLeave"
		short-description="Create Employee Leave">
		<make-value entity-name="EmplLeave" value-field="newEntity"/>
		<set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <now-timestamp field="createdDate"/>
        
        <entity-one value-field="deduct" entity-name="EmplLeaveType">
			<field-map field-name="leaveTypeId" value="${newEntity.leaveTypeId}"/>
		</entity-one>
        
		<set field="documentName" value="LEAVE"  />
		<set field="fromDate" from-field="newEntity.fromDate"  />
		<set field="newEntity.fromDate" from-field="newEntity.fromDate"  />
		<if-empty field="parameters.workflowDocumentTypeId">
			<set field="newEntity.workflowDocumentTypeId" 
			value="${bsh:org.ofbiz.humanres.LeaveServices.getWorkflowDocumentType(documentName);}"/>
		</if-empty>
		<set field="newEntity.financialYear" value="${bsh:org.ofbiz.humanres.LeaveServices.getCurrentYear(fromDate);}" type="String"/>
		<set field="newEntity.isDeductedFromAnnual" value="${deduct.isDeductedFromAnnual}"/>
		<set field="newEntity.hasbalance" value="${deduct.hasbalance}"/>
		<set field="newEntity.applicationStatus" value="NEW"/>
		<set field="newEntity.leaveStatus" value="DRAFT"/>
		<set field="newEntity.createdDate" from-field="createdDate"/>
        <set field="newEntity.isActive" value="Y"/>
        <set field="newEntity.createdBy" value="${userLogin.partyId}" />
		<sequenced-id sequence-name="EmplLeave" field="leaveId" />
		<set field="newEntity.leaveId" from-field="leaveId" />
		<!-- <create-value value-field="newEntity"/> -->

		<make-value value-field="newStatusLog" entity-name="LeaveStatusLog" />
		<set-pk-fields map="parameters" value-field="newStatusLog" />
		<set-nonpk-fields map="parameters" value-field="newStatusLog" />
		<sequenced-id sequence-name="LeaveStatusLog" stagger-max="1" field="leaveStsLogId" />
		<set field="newStatusLog.leaveStsLogId" from-field="leaveStsLogId" />
		<set field="newStatusLog.leaveId" from="newEntity.leaveId" />
		<set field="newStatusLog.partyId" value="${userLogin.partyId}"  />
		<set field="newStatusLog.approvalStatus" value="NEW" />
		
		<set field="leaveType" from-field="newEntity.leaveTypeId"/>
		<set field="party" value="${userLogin.partyId}"  />
		<set field="durat" from-field="newEntity.leaveDuration" type="Integer"/>
		<set field="thruDate" from-field="newEntity.thruDate"  />
		<set field="userGender" value="${bsh:org.ofbiz.humanres.LeaveApplicationValidation.getGenderState(leaveType, party);}"/>
		<set field="notice" value="${bsh:org.ofbiz.humanres.LeaveApplicationValidation.getNoticePeriodState(leaveType, fromDate);}"/>
		<set field="duration" value="${bsh:org.ofbiz.humanres.LeaveApplicationValidation.getLeaveDurationState(leaveType, durat);}"/>
		<set field="employementTermsState" value="${bsh:org.ofbiz.humanres.LeaveApplicationValidation.getEmploymentStatusState(party);}"/>
		<set field="correctDateState" value="${bsh:org.ofbiz.humanres.LeaveApplicationValidation.isLeaveApplicationCorrect(leaveType, fromDate, durat, thruDate);}"/>
		<set field="valid" value="INVALID"/>
		<set field="no" value="NO"/>
		
		<log message=">>>>>>>>>>>>>>>>***>>>>>>>DURATION_STATE ${duration}" level="info"/>
		<if>
			<condition>
					<if-compare-field field="correctDateState"
						to-field="no" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="leaveApplicationDatesError" />
				</add-error>
				<check-errors />
			</then>
		</if>
		
		<if>
			<condition>
					<if-compare-field field="employementTermsState"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="employmentTermsError" />
				</add-error>
				<check-errors />
			</then>
		</if>
		
		<if>
			<condition>
					<if-compare-field field="duration"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="LeavedurationError" />
				</add-error>
				<check-errors />
			</then>
		</if>
		
		<if>
			<condition>
					<if-compare-field field="notice"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="NoticeperiodError" />
				</add-error>
				<check-errors />
			</then>
		</if>
		
		<if>
			<condition>
					<if-compare-field field="userGender"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="GenderError" />
				</add-error>
				<check-errors />
			</then>
			
			<else>
			    <create-value value-field="newEntity"/>
				<create-value value-field="newStatusLog" />
				<call-simple-method method-name="createStaffLeaveLogs" scope="inline"></call-simple-method>
				<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
			</else>
		</if>
		
		
		
		</simple-method>
		
		
		 <!--======================= STAFF LEAVE LOGS =================================== -->
                     
	<simple-method method-name="createStaffLeaveLogs" short-description="Create File location">
		<make-value entity-name="staffLeaveLogs" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="staffLeaveLogs" field="logId" />
		<set from-field="logId" field="newEntity.logId" /> 
		
		<now-timestamp field="nowTimestamp" />
		
		<entity-one value-field="leavety" entity-name="EmplLeaveType">
			<field-map field-name="leaveTypeId" from-field="parameters.leaveTypeId"/>
			</entity-one>
		
		<set field="newEntity.partyId" value="${userLogin.partyId}"/>
		<set field="newEntity.leaveType" from-field="leavety.description"/>
		<set field="newEntity.action" value="Leave Application"/>
		<set field="newEntity.actionBy" value="${userLogin.partyId}"/>
		
	   <create-value value-field="newEntity" />
			
			</simple-method>
		
		
		
		
		
	
	<simple-method method-name="updateLeaveApplication" short-description="Update Leave Application">
        <entity-one entity-name="EmplLeave" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        
        <set field="partyId" from-field="parameters.partyId"/>
        <set field="leaveTypeId" from-field="parameters.leaveTypeId"/>
        <set field="fromDate" from-field="parameters.fromDate"/>
        	<entity-one value-field="currentApplication" entity-name="EmplLeave">
        		<field-map field-name="leaveTypeId" from-field="leaveTypeId"/>
        		<field-map field-name="partyId" from-field="partyId"/>
        		<field-map field-name="fromDate" from-field="fromDate"/>
        	</entity-one>
           <set field="lookedUpValue.updatedBy" from-field="userLogin.userLoginId"/>
           
         
		  <store-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
           
           
    </simple-method>
    
    
    


	<simple-method method-name="deleteEmplLeave"
		short-description="Delete Employee Leave">
		<set field="leaveId" from-field="parameters.leaveId" />
		<entity-one entity-name="EmplLeave" value-field="lookedUpValue" /> 
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	

	
	<simple-method method-name="createOpeningLeaveBalances"
		short-description="Create File Type">
		<make-value entity-name="EmplLeaveOpeningBalance" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="EmplLeaveOpeningBalance" field="leaveBalanceId" />

		<set from-field="leaveBalanceId" field="newEntity.leaveBalanceId" />
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>
	

	<simple-method method-name="createEmplLeaveType"
		short-description="Create a LeaveType">
		<make-value entity-name="EmplLeaveType" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="EmplLeaveType" field="leaveTypeId" />
		<set field="newEntity.leaveTypeId" from-field="leaveTypeId"/>
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updateEmplLeaveType"
		short-description="Update leaveType">
		<entity-one entity-name="EmplLeaveType" value-field="lookedUpValue"/>
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue"/>
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>
	
    
	
	

	<simple-method method-name="deleteEmplLeaveType"
		short-description="Delete leaveType">
		<entity-one entity-name="EmplLeaveType" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>


	<simple-method method-name="createStaffLeaveBalances"
		short-description="Create Staff Leave Balances">
		<make-value entity-name="StaffLeaveBalances" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<if-empty field="newEntity.staffLeaveBalancesId">
			<sequenced-id sequence-name="StaffLeaveBalances"
				field="newEntity.staffLeaveBalancesId" />
		</if-empty>
		<field-to-result field="newEntity.staffLeaveBalancesId"
			result-name="staffLeaveBalancesId" />
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updateStaffLeaveBalances"
		short-description="Update Staff Leave Balances">
		<entity-one entity-name="StaffLeaveBalances" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteStaffLeaveBalances"
		short-description="Delete Staff Leave Balances">
		<entity-one entity-name="StaffLeaveBalances" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>


	<simple-method method-name="getCurrentPartyEmploymentData"
		short-description="Get all current employment information for a certain partyId">
		<!-- party benefit -->
		<entity-and entity-name="BenefitTypeAndParty" list="partyBenefitTypes"
			filter-by-date="true">
			<field-map field-name="partyIdTo" from-field="parameters.partyId" />
		</entity-and>
		<field-to-result field="partyBenefitTypes" />
		<!-- employment -->
		<entity-and entity-name="Employment" list="employments"
			filter-by-date="true">
			<field-map field-name="partyIdTo" from-field="parameters.partyId" />
		</entity-and>
		<first-from-list entry="employment" list="employments" />
		<field-to-result field="employment" />
		<!-- position -->
		<entity-and entity-name="EmplPositionAndFulfillment" list="emplPositionAndFulfillments"
			filter-by-date="true">
			<field-map field-name="employeePartyId" from-field="parameters.partyId" />
			<field-map field-name="partyId" from-field="employment.partyIdFrom" />
		</entity-and>
		<first-from-list entry="emplPositionAndFulfillment"
			list="emplPositionAndFulfillments" />
		<field-to-result field="emplPositionAndFulfillment"
			result-name="emplPosition" />
		<!-- position type -->
		<if-not-empty field="emplPositionAndFulfillment">
			<get-related-one value-field="emplPositionAndFulfillment"
				relation-name="EmplPositionType" to-value-field="emplPositionType" />
			<field-to-result field="emplPositionType" />
		</if-not-empty>
		<!-- rate amount -->
		<entity-one entity-name="PartyAcctgPreference" value-field="partyAcctgPreference">
			<field-map field-name="partyId" from-field="employment.partyIdFrom" />
		</entity-one>
		<entity-and entity-name="RateAmount" list="rateAmounts"
			filter-by-date="true">
			<field-map field-name="emplPositionTypeId" from-field="emplPositionType.emplPositionTypeId" />
			<field-map field-name="rateCurrencyUomId"
				from-field="partyAcctgPreference.baseCurrencyUomId" />
		</entity-and>
		<first-from-list entry="rateAmount" list="rateAmounts" />
		<field-to-result field="rateAmount" result-name="emplPositionRateAmount" />
	</simple-method>
	

	<simple-method method-name="createJobRequisition"
		short-description="Create Job Requisition">
		<make-value entity-name="JobRequisition" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="JobRequisition" field="newEntity.jobRequisitionId" />
		<field-to-result field="newEntity.jobRequisitionId"
			result-name="jobRequisitionId" />
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updateJobRequisition"
		short-description="Update Job Requisition">
		<entity-one entity-name="JobRequisition" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteJobRequisition"
		short-description="Delete Job Requisition">
		<entity-one entity-name="JobRequisition" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="createInternalJobPosting"
		short-description="Create Internal Job Posting">
		<make-value entity-name="EmploymentApp" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="EmploymentApp" field="newEntity.applicationId" />
		<field-to-result field="newEntity.applicationId"
			result-name="applicationId" />
		<if-empty field="newEntity.applicationDate">
			<now-timestamp field="nowTimestamp" />
			<set from-field="nowTimestamp" field="newEntity.applicationDate" />
		</if-empty>
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updateInternalJobPosting"
		short-description="Update Internal Job Posting">
		<entity-one entity-name="EmploymentApp" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteInternalJobPosting"
		short-description="Delete Internal Job Posting">
		<entity-one entity-name="EmploymentApp" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="createJobInterview"
		short-description="Create Job Interview">
		<make-value entity-name="JobInterview" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="JobInterview" field="newEntity.jobInterviewId" />
		<field-to-result field="newEntity.jobInterviewId"
			result-name="jobInterviewId" />
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updateJobInterview"
		short-description="Update Job Interview">
		<entity-one entity-name="JobInterview" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteJobInterview"
		short-description="Delete Job Interview">
		<entity-one entity-name="JobInterview" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="createJobInterviewType"
		short-description="Create Job Interview Type">
		<make-value entity-name="JobInterviewType" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<if-empty field="parameters.jobInterviewTypeId">
			<sequenced-id sequence-name="JobInterviewType"
				field="newEntity.jobInterviewTypeId" />
			<else>
				<set from-field="parameters.jobInterviewTypeId" field="newEntity.jobInterviewTypeId" />
			</else>
		</if-empty>
		<field-to-result field="newEntity.jobInterviewTypeId"
			result-name="jobInterviewTypeId" />
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updateJobInterviewType"
		short-description="Update Interview Type">
		<entity-one entity-name="JobInterviewType" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteJobInterviewType"
		short-description="Delete Interview Type">
		<entity-one entity-name="JobInterviewType" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updateApprovalStatus"
		short-description="Update Approval Status">
		<entity-one entity-name="EmploymentApp" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updateTrainingStatus"
		short-description="Update Training Status">
		<entity-one entity-name="PersonTraining" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="applyTraining"
		short-description="Apply Training">
		<make-value entity-name="TrainingRequest" value-field="trainingRequest" />
		<make-next-seq-id value-field="trainingRequest"
			seq-field-name="trainingRequestId" />
		<create-value value-field="trainingRequest" />
		<make-value entity-name="PersonTraining" value-field="personTraining" />
		<set-pk-fields map="parameters" value-field="personTraining" />
		<set-nonpk-fields map="parameters" value-field="personTraining" />
		<set from-field="trainingRequest.trainingRequestId" field="personTraining.trainingRequestId" />
		<set field="personTraining.fromDate" from-field="parameters.fromDate" />
		<set field="personTraining.thruDate" from-field="parameters.thruDate" />
		<set field="personTraining.trainingClassTypeId" from-field="parameters.workEffortName" />
		<create-value value-field="personTraining" />
		<check-errors />
	</simple-method>
	<simple-method method-name="assignTraining"
		short-description="Assign Training">
		<make-value entity-name="TrainingRequest" value-field="trainingRequest" />
		<make-next-seq-id value-field="trainingRequest"
			seq-field-name="trainingRequestId" />
		<create-value value-field="trainingRequest" />
		<make-value entity-name="PersonTraining" value-field="personTraining" />
		<set-pk-fields map="parameters" value-field="personTraining" />
		<set-nonpk-fields map="parameters" value-field="personTraining" />
		<set from-field="trainingRequest.trainingRequestId" field="personTraining.trainingRequestId" />
		<set field="personTraining.fromDate" from-field="parameters.fromDate" />
		<set field="personTraining.thruDate" from-field="parameters.thruDate" />
		<create-value value-field="personTraining" />
		<check-errors />
	</simple-method>

	<simple-method method-name="createTrainingTypes"
		short-description="Create Training Types">
		<make-value entity-name="TrainingClassType" value-field="newEntity" />
		<set-pk-fields value-field="newEntity" map="parameters" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updateTrainingTypes"
		short-description="Update Training Types">
		<entity-one entity-name="TrainingClassType" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteTrainingTypes"
		short-description="Delete Training Types">
		<entity-one entity-name="TrainingClassType" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	

	<!-- Training Cost Type Starts Here -->
	<simple-method method-name="createTrainingCostType" short-description="Add Training Cost Type">
        <make-value entity-name="TrainingCostType" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="TrainingCostType" field="trainingCostTypesId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="trainingCostTypesId" field="newEntity.trainingCostTypesId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
        <property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
    </simple-method>
    <simple-method method-name="updateTrainingCostType" short-description="Update Training Cost Type">
        <entity-one entity-name="TrainingCostType" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="deleteTrainingCostType" short-description="Delete Training Cost Type">
        <entity-one entity-name="TrainingCostType" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
    </simple-method>
    
    <!-- Training Costs Starts Here -->
	<simple-method method-name="createTrainingCosts" short-description="Add Training Cost">
        <make-value entity-name="TrainingCosts" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="TrainingCosts" field="trainingCostId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="trainingCostId" field="newEntity.trainingCostId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
        <property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
    </simple-method>
    <simple-method method-name="updateTrainingCosts" short-description="Update Training Cost">
        <entity-one entity-name="TrainingCosts" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="deleteTrainingCosts" short-description="Delete Training Cost">
        <entity-one entity-name="TrainingCosts" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
    </simple-method>
    
    <!-- =================================== PUBLIC HOLIDAYS DEFINITION =============================================== -->
     <simple-method method-name="createHoliday" short-description="Create User Estate">
            <make-value entity-name="PublicHolidays" value-field="newEntity"/>
             <set-pk-fields map="parameters" value-field="newEntity"/>
            <set-nonpk-fields map="parameters" value-field="newEntity"/>
            <sequenced-id sequence-name="PublicHolidays" field="holidayId"/>
            <set from-field="holidayId" field="newEntity.holidayId"/>
            
            <set field="holidayName" value="${newEntity.holidayName}" type="String"/>
		
		<set field="existstatus" value="${bsh:org.ofbiz.humanres.HumanResourceSetup.theholidayDate(holidayDate);}" type="Boolean"/>
		
		<if>
			<condition>
				<if-compare operator="equals" value="true" field="existstatus"></if-compare>
			</condition>
			<then>
				<add-error>
					<fail-message message="The Holiday Name  ${holidayName} is already assigned to another Holiday "/>
				</add-error>
				 <check-errors /> 
			</then>
			<else>
				<create-value value-field="newEntity" />
				<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
			</else>
		</if>
		

    </simple-method>
    
    <simple-method method-name="deleteHoliday" short-description="Remove user estate">
    <set field="holidayId" from-field="parameters.holidayId"/>
        <entity-one entity-name="PublicHolidays" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    
    
    <simple-method method-name="updateHoliday" short-description="Update an existing user estate">
        <entity-one entity-name="PublicHolidays" value-field="lookedUpValue"/>
        <set-nonpk-fields map="parameters" value-field="lookedUpValue"/>
        <store-value value-field="lookedUpValue"/>
       <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
    </simple-method>
    
    

	<simple-method method-name="createEmplLeaveReasonType"
		short-description="Create a Leave Reason Type">
		<make-value entity-name="EmplLeaveReasonType" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
			<sequenced-id sequence-name="EmplLeaveReasonType" field="emplLeaveReasonTypeId" />
			<set field="newEntity.emplLeaveReasonTypeId" from-field="emplLeaveReasonTypeId"/>
			
			<set field="newEntity.reason" value=" ${newEntity.reason}" type="String"/>
			
			<set field="existstatus" value="${bsh:org.ofbiz.humanres.HumanResourceSetup.reasonTypeExist(reason);}" type="Boolean"/>
		
		<if>
			<condition>
				<if-compare operator="equals" value="true" field="existstatus"></if-compare>
			</condition>
			<then>
				<add-error>
					<fail-message message="Reason Type  ${reason} already exists, please try with a different Reason "/>
				</add-error>
				 <check-errors /> 
			</then>
			<else>
				<create-value value-field="newEntity" />
				<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
			</else>
		</if>

	</simple-method>

	<simple-method method-name="updateEmplLeaveReasonType"
		short-description="Update leave Reason Type">
		<entity-one entity-name="EmplLeaveReasonType" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteEmplLeaveReasonType"
		short-description="Delete leave Reason Type">
		<entity-one entity-name="EmplLeaveReasonType" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updateEmplLeaveStatus"
		short-description="Update Leave Approval Status">
		<entity-one entity-name="EmplLeave" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="createTribe"
		short-description="Create Tribe">
		<make-value entity-name="Tribe" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="Tribe" field="tribeId" />
		<set from-field="tribeId" field="newEntity.tribeId" />
		
		
		<set field="tribe" value="${newEntity.tribe}" type="String"/>
		
		<set field="existstatus" value="${bsh:org.ofbiz.humanres.HumanResourceSetup.TribeExist(tribe);}" type="Boolean"/>
		
		<if>
			<condition>
				<if-compare operator="equals" value="true" field="existstatus"></if-compare>
			</condition>
			<then>
				<add-error>
					<fail-message message="Tribe ${tribe} already exists, please try another one "/>
				</add-error>
				 <check-errors /> 
			</then>
			<else>
				<create-value value-field="newEntity" />
				<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
			</else>
		</if>
		
		
		
		<!-- <if-empty field="newEntity.tribeId">
			<sequenced-id sequence-name="Tribe" field="newEntity.tribeId" />
		</if-empty>
		<field-to-result field="newEntity.tribeId"
			result-name="tribeId" /> -->
	</simple-method>

	<simple-method method-name="updateTribe"
		short-description="Update Tribe">
		<entity-one entity-name="Tribe" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteTribe"
		short-description="Delete Tribe">
		<entity-one entity-name="Tribe" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="createCounty"
		short-description="Create County">
		<make-value entity-name="County" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
			<sequenced-id sequence-name="County" field="newEntity.countyId" />
			<set from-field="countyId" field="newEntity.countyId"/>
			
			<set field="county" value="${newEntity.county}" type="String"/>
		
		<set field="existstatus" value="${bsh:org.ofbiz.humanres.HumanResourceSetup.countyExist(county);}" type="Boolean"/>
		
		<if>
			<condition>
				<if-compare operator="equals" value="true" field="existstatus"></if-compare>
			</condition>
			<then>
				<add-error>
					<fail-message message="County ${county}  already exists, please try with another County "/>
				</add-error>
				 <check-errors /> 
			</then>
			<else>
				<create-value value-field="newEntity" />
				<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
			</else>
		</if>

	</simple-method>

	<simple-method method-name="updateCounty"
		short-description="Update County">
		<entity-one entity-name="County" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteCounty"
		short-description="Delete County">
		<entity-one entity-name="County" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="createBloodGroup"
		short-description="Create Blood Group">
		<make-value entity-name="BloodGroup" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="BloodGroup" field="newEntity.bloodGroupId" />
			<set from-field="bloodGroupId" field="newEntity.bloodGroupId" />
			
			<set field="bloodGroup" value="${newEntity.bloodGroup}" type="String"/>
		
		<set field="existstatus" value="${bsh:org.ofbiz.humanres.HumanResourceSetup.bloodGroupExists(bloodGroup);}" type="Boolean"/>
		
		<if>
			<condition>
				<if-compare operator="equals" value="true" field="existstatus"></if-compare>
			</condition>
			<then>
				<add-error>
					<fail-message message="Blood Group ${bloodGroup} already exists, please try another one "/>
				</add-error>
				 <check-errors /> 
			</then>
			<else>
				<create-value value-field="newEntity" />
				<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
			</else>
		</if>
		
	</simple-method>

	<simple-method method-name="updateBloodGroup"
		short-description="Update Blood Group">
		<entity-one entity-name="BloodGroup" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteBloodGroup"
		short-description="Delete Blood Group">
		<entity-one entity-name="BloodGroup" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="createReligion"
		short-description="Create Religion">
		<make-value entity-name="Religion" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		
		<sequenced-id sequence-name="Religion" field="religionId" />

		<set from-field="religionId" field="newEntity.religionId" />
		
		<!-- <if-empty field="newEntity.religionId">
			<sequenced-id sequence-name="Religion" field="newEntity.religionId" />
		</if-empty>
		<field-to-result field="newEntity.religionId"
			result-name="religionId" /> -->
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="updateReligion"
		short-description="Update Religion">
		<entity-one entity-name="Religion" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteReligion"
		short-description="Delete Religion">
		<entity-one entity-name="Religion" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="createFamilyRelations"
		short-description="Create Family Relations">
		<make-value entity-name="FamilyRelations" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
			<sequenced-id sequence-name="FamilyRelations" field="familyRelationsId" />
			<set field="newEntity.familyRelationsId" from-field="familyRelationsId"/>
						
			<set field="relationship" value="${newEntity.relationship}" type="String"/>
		
		<set field="existstatus" value="${bsh:org.ofbiz.humanres.HumanResourceSetup.familyRelationship(relationship);}" type="Boolean"/>
		
		<if>
			<condition>
				<if-compare operator="equals" value="true" field="existstatus"></if-compare>
			</condition>
			<then>
				<add-error>
					<fail-message message="The Relationship ${relationship} already exists, please try another one "/>
				</add-error>
				 <check-errors /> 
			</then>
			<else>
				<create-value value-field="newEntity" />
				<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
			</else>
		</if>
	</simple-method>

	<simple-method method-name="updateFamilyRelations"
		short-description="Update Family Relations">
		<entity-one entity-name="FamilyRelations" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteFamilyRelations"
		short-description="Delete Family Relations">
		<entity-one entity-name="FamilyRelations" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<!-- Staff Spouse Details Start Here -->
	<simple-method method-name="createStaffSpouse"
		short-description="Add Spouse Details">
		<make-value entity-name="StaffSpouse" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
		<sequenced-id sequence-name="StaffSpouse" field="staffspouseId" />
		<now-timestamp field="newEntity.createdDate" />
		<set from-field="staffspouseId" field="newEntity.staffspouseId" />
		<!-- set field="entity.loanStatus" value="DRAFT"/ -->
		<!-- set field="productType" value="Loan"/ -->
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>
	<simple-method method-name="updateStaffSpouse"
		short-description="Update Spouse Details">
		<entity-one entity-name="StaffSpouse" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteStaffSpouse"
		short-description="Delete Spouse Details">
		<entity-one entity-name="StaffSpouse" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<!-- Staff Dependant Details Start Here -->
	<simple-method method-name="createStaffDependant"
		short-description="Add Dependant Details">
		<make-value entity-name="StaffDependant" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
		<sequenced-id sequence-name="StaffDependant" field="staffdependantId" />
		<now-timestamp field="newEntity.createdDate" />
		<set from-field="staffdependantId" field="newEntity.staffdependantId" />
		<!-- set field="entity.loanStatus" value="DRAFT"/ -->
		<!-- set field="productType" value="Loan"/ -->
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>
	<simple-method method-name="updateStaffDependant"
		short-description="Update Dependant Details">
		<entity-one entity-name="StaffDependant" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteStaffDependant"
		short-description="Delete Dependant Details">
		<entity-one entity-name="StaffDependant" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>

	<!-- Staff Next Of Kin Details Start Here -->
	<simple-method method-name="createStaffNextOfKin"
		short-description="Add Next Of Kin Details">
		<make-value entity-name="StaffNextOfKin" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
		<sequenced-id sequence-name="StaffNextOfKin" field="staffnokId" />
		<now-timestamp field="newEntity.createdDate" />
		<set from-field="staffnokId" field="newEntity.staffnokId" />
		<!-- set field="entity.loanStatus" value="DRAFT"/ -->
		<!-- set field="productType" value="Loan"/ -->
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>
	<simple-method method-name="updateStaffNextOfKin"
		short-description="Update Next Of Kin Details">
		<entity-one entity-name="StaffNextOfKin" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteStaffNextOfKin"
		short-description="Delete Next Of Kin Details">
		<entity-one entity-name="StaffNextOfKin" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	<!--Emmergency Contacts  -->
		<simple-method method-name="createStaffEmmergencyContacts"
		short-description="Add Emmergency Details">
		<make-value entity-name="EmmergencyContacts" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
		<sequenced-id sequence-name="EmmergencyContacts" field="emmergencyContactId" />
		<now-timestamp field="newEntity.createdDate" />
		<set from-field="emmergencyContactId" field="newEntity.emmergencyContactId" />
		<!-- set field="entity.loanStatus" value="DRAFT"/ -->
		<!-- set field="productType" value="Loan"/ -->
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>
	<simple-method method-name="updateStaffEmmergencyContacts"
		short-description="Update Emmergency Contacts">
		<entity-one entity-name="EmmergencyContacts" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>

	<simple-method method-name="deleteStaffEmmergencyContacts"
		short-description="Delete Emmergency Contacts Details">
		<entity-one entity-name="EmmergencyContacts" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	 <!-- Bank Details Starts Here -->
	<simple-method method-name="createBankDetails" short-description="Add Bank Details">
        <make-value entity-name="BankDetails" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="BankDetails" field="bankDetailsId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="bankDetailsId" field="newEntity.bankDetailsId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
        <property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
    </simple-method>
    <simple-method method-name="updateBankDetails" short-description="Update Bank Details">
        <entity-one entity-name="BankDetails" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="deleteBankDetails" short-description="Delete Bank Details">
        <entity-one entity-name="BankDetails" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
    </simple-method>
    
    
       
    <!--======================== Retirement Age Definiton ======================== -->
    
    
    <simple-method method-name="createRetirementAge" short-description="Add Bank Details">
        <make-value entity-name="RetirementAge" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="RetirementAge" field="ageId"/>
        <set field="newEntity.ageId" from-field="ageId"/>
        
         <set field="valid" value="INVALID"/>
         <set field="input" from-field="newEntity.retirementAge"/>
        <set field="userInput" value="${bsh:org.ofbiz.humanres.HumanResServices.isEntryInteger(input);}" /> 
        
        <if>
			<condition>
					<if-compare-field field="userInput"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="IntegerInputError" />
				</add-error>
				<check-errors />
			</then>
			
			<else>
			    <create-value value-field="newEntity"/>
				<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
			</else>
		</if>
    </simple-method>
    
    
      
    <!--======================== payroll Prefix ======================== -->
    
    
    <simple-method method-name="createPayrollPrefix" short-description="Add Bank Details">
        <make-value entity-name="payRollPrefix" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="payRollPrefix" field="prefixId"/>
        <set field="newEntity.prefixId" from-field="prefixId"/>
        
         <set field="payRoll" value="${newEntity.lowerCase}" type="String"/>
        <set field="newEntity.payRollPrefix" value="${bsh:org.ofbiz.humanres.HumanResServices.payrollUpperCase(payRoll);}" /> 
        
        
        <create-value value-field="newEntity"/>
        <property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
    </simple-method>
    
    <!--======================== party Content Types======================== -->
    
    
    <simple-method method-name="createPartyContentType" short-description="Add Bank Details">
        <make-value entity-name="PartyContentType" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="PartyContentType" field="partyContentTypeId"/>
        <set field="newEntity.partyContentTypeId" from-field="partyContentTypeId"/>
        
        
        <now-timestamp field="newEntity.createdDate"/>
        <create-value value-field="newEntity"/>
        <property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
    </simple-method>
   
	
	<simple-method method-name="updatePartyContentType"
		short-description="Update PartyContentType">
		<entity-one entity-name="PartyContentType" value-field="lookedUpValue" />
		<set-nonpk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
	</simple-method>
    
    <simple-method method-name="deletePartyContentType" short-description="Delete Bank Details">
        <entity-one entity-name="PartyContentType" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
    </simple-method>
    
    <!-- Bank Branch Starts Here -->
	<simple-method method-name="createBankBranch" short-description="Add Bank Branch">
        <make-value entity-name="BankBranch" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="BankBranch" field="bankBranchId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="bankBranchId" field="newEntity.bankBranchId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
        <property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
    </simple-method>
    <simple-method method-name="updateBankBranch" short-description="Update Bank Branch">
        <entity-one entity-name="BankBranch" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="deleteBankBranch" short-description="Delete Bank Branch">
    <set field="bankDetailsId" from-field="parameters.bankDetailsId"/>
        <entity-one entity-name="BankBranch" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
    </simple-method>
    
    <!-- Pay Point Starts Here -->
	<simple-method method-name="createEmplPayPoint" short-description="Add Pay Point">
        <make-value entity-name="PayPoint" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="PayPoint" field="payPointId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="payPointId" field="newEntity.payPointId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
        <property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
    </simple-method>
    <simple-method method-name="updatePayPoint" short-description="Update Pay Point">
        <entity-one entity-name="PayPoint" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="deletePayPoint" short-description="Delete Pay Point">
        <entity-one entity-name="PayPoint" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
    </simple-method>
    
    <!-- =======================Employee Separation Service================================== -->
	<simple-method method-name="createSeparationTypes" short-description="Create Separation Types">
        <make-value entity-name="SeparationType" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="SeparationType" field="separationTypeId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <set from-field="separationTypeId" field="newEntity.separationTypeId"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
        <property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
    </simple-method>
    <simple-method method-name="updateSeparationTypes" short-description="Update Separation Types">
        <entity-one entity-name="SeparationType" value-field="separationTypeId"/>
        <set-nonpk-fields value-field="separationTypeId" map="parameters"/>
        <store-value value-field="separationTypeId"/>
        <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="deleteSeparationTypes" short-description="Delete Separation Types">
        <entity-one entity-name="SeparationType" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
    </simple-method>
    
   	<simple-method method-name="createSeparationApplication" short-description="Create Separation Application">
        <make-value entity-name="SeparationApplication" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- set field="saccoProductId" value="newEntity.saccoProductId"/ -->
        <sequenced-id sequence-name="SeparationApplication" field="separationApplicationId"/>
        <now-timestamp field="newEntity.createdDate"/>
        <now-date-to-env field="dateCreated"/>
        <set from-field="separationApplicationId" field="newEntity.separationApplicationId"/>
        <set field="newEntity.createdDate" from-field="dateCreated"/>
        <set field="newEntity.processStatus" value="NOT PROCESSED"/>
        <!--  set field="entity.loanStatus" value="DRAFT"/ -->
        <!-- set field="productType" value="Loan"/ -->
        <create-value value-field="newEntity"/>
        <property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
    </simple-method>
    <simple-method method-name="updateSeparationApplication" short-description="Update Separation Application">
        
        <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="deleteSeparationApplication" short-description="Delete Separation Application">
        <entity-one entity-name="SeparationApplication" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <property-to-field resource="HumanResUiLabels"
			property="Process Successfully Cancelled" field="successMessage" />
    </simple-method>
    
    <simple-method method-name="cancelSeparation" short-description="Calcel Employee separation">
    <entity-one value-field="lookedUpValue" entity-name="SeparationApplication"></entity-one>
    <remove-value value-field="lookedUpValue"/>
    <property-to-field resource="HumanResUiLabels" property="Process Successfully Cancelled" field="successMessage"/>
    </simple-method>
     <!--======================= TRAINING TYPES SETUP DEFINITION =================================== -->
                     
	<simple-method method-name="createStaffTrainingType"
		short-description="Create File location">
		<make-value entity-name="TrainingTypes" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="TrainingTypes" field="trainingTypeId" />
		<set from-field="trainingTypeId" field="newEntity.trainingTypeId" /> 
		
		<create-value value-field="newEntity" />
		      <property-to-field resource="HumanResUiLabels"
			  property="CreateSuccess" field="successMessage" />
			
			</simple-method>
			
			<simple-method method-name="updateStaffTrainingType"
		short-description="Update an existing Budget">
		<entity-one entity-name="TrainingTypes" value-field="lookedUpValue" />
		<set-nonpk-fields map="parameters" value-field="lookedUpValue" />
		<set-pk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		   <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" /> 
			
	</simple-method>
			
			
			<simple-method method-name="deleteStaffTrainingType"
		short-description="Remove an file type">
		<set field="trainingTypeId" from-field="parameters.trainingTypeId" />
		<entity-one entity-name="TrainingTypes" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	  <!--======================= TRAINING COST TYPES SETUP DEFINITION =================================== -->
                     
	<simple-method method-name="createStaffTrainingCostType"
		short-description="Create File location">
		<make-value entity-name="CostTypes" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="CostTypes" field="costTypeId" />
		<set from-field="costTypeId" field="newEntity.costTypeId" /> 
		
		<create-value value-field="newEntity" />
		      <property-to-field resource="HumanResUiLabels"
			  property="CreateSuccess" field="successMessage" />
			
			</simple-method>
			
		<simple-method method-name="updateStaffTrainingCostType"
		short-description="Update an existing Budget">
		<entity-one entity-name="CostTypes" value-field="lookedUpValue" />
		<set-nonpk-fields map="parameters" value-field="lookedUpValue" />
		<store-value value-field="lookedUpValue" />
		   <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" /> 
			
	</simple-method>
			
			
			<simple-method method-name="deleteStaffTrainingCostType"
		short-description="Remove an file type">
		<set field="costTypeId" from-field="parameters.costTypeId" />
		<entity-one entity-name="CostTypes" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	  <!--======================= TRAINING EVENT SETUP DEFINITION =================================== -->
                     
	<simple-method method-name="createStaffTrainingEvent"
		short-description="Create File location">
		<make-value entity-name="TrainingEvent" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="TrainingEvent" field="eventId" />
		<set from-field="eventId" field="newEntity.eventId" /> 
		
			  
	    <set field="valid" value="INVALID"/>
	    <set field="from" from-field="newEntity.startDate"/>
	    <set field="end" from-field="newEntity.endDate"/>
        <set field="datesCompare" value="${bsh:org.ofbiz.humanres.HumanResServices.CompareStartEndDate(from, end);}" /> 
        
        <if>
			<condition>
					<if-compare-field field="datesCompare"
						to-field="valid" operator="equals" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels"
						property="startEndDateError" />
				</add-error>
				<check-errors />
			</then>
			
			<else>
			    <create-value value-field="newEntity"/>
				<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
			</else>
		</if>
			
			</simple-method>
			
			<simple-method method-name="updateStaffTrainingEvent"
		short-description="Update an existing Budget">
		<entity-one entity-name="TrainingEvent" value-field="lookedUpValue" />
		<set-nonpk-fields map="parameters" value-field="lookedUpValue" />
		<set-pk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		   <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" /> 
			
	</simple-method>
			
			
			<simple-method method-name="deleteStaffTrainingEvent"
		short-description="Remove an file type">
		<set field="eventId" from-field="parameters.eventId" />
		<entity-one entity-name="TrainingEvent" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	  <!--======================= ADD STAFF TO TRAINING EVENT SETUP DEFINITION =================================== -->
                     
	<simple-method method-name="addStaffToTrainingEvent"
		short-description="Create File location">
		<make-value entity-name="PatyInTrainingEvent" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="PatyInTrainingEvent" field="partyTrainingId" />
		<set from-field="partyTrainingId" field="newEntity.partyTrainingId" /> 
		<set value="NEW" field="newEntity.approvalStatus" /> 
		
        
        <entity-condition list="staffs" entity-name="StaffWhoNeedTraining">
		<condition-list>
		<condition-expr field-name="partyId" from-field="newEntity.partyId"/>
		</condition-list>
		</entity-condition>
		<iterate entry="singleStaff" list="staffs">
		<entity-one entity-name="StaffWhoNeedTraining" value-field="lookedUpValue2">
        <field-map field-name="needId" from-field="singleStaff.needId"/>
        </entity-one>
        <set field="fromHod" from-field="lookedUpValue2.trainingStageFromHod"/>
        
        <if-compare operator="equals" value="FORWARDED" field="fromHod">
        <set field="lookedUpValue2.trainingStageFromHod" value="DONE"/>
        <store-value value-field="lookedUpValue2"/>
        </if-compare>
        
		</iterate>
		
		
		
		    <create-value value-field="newEntity" />
		      <property-to-field resource="HumanResUiLabels"
			  property="CreateSuccess" field="successMessage" />
			
			</simple-method>
			
			<simple-method method-name="updateaddStaffToTrainingEvent"
		short-description="Update an existing Budget">
		<entity-one entity-name="PatyInTrainingEvent" value-field="lookedUpValue" />
		<set-nonpk-fields map="parameters" value-field="lookedUpValue" />
		<set-pk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		   <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" /> 
			
	</simple-method>
			
			
			<simple-method method-name="deleteaddStaffToTrainingEvent"
		short-description="Remove an file type">
		<set field="partyTrainingId" from-field="parameters.partyTrainingId" />
		<entity-one entity-name="PatyInTrainingEvent" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
    
    <!--======================= APPROVE TRAINING  =================================== -->
    
    	<simple-method method-name="approveTraining"
		short-description="Update an existing Budget">
		<entity-one entity-name="PatyInTrainingEvent" value-field="lookedUpValue" />
		<set field="lookedUpValue.approvalStatus" value="APPROVED"/>
		<store-value value-field="lookedUpValue" />
		   <property-to-field resource="HumanResUiLabels"
			property="successTrainingApproval" field="successMessage" /> 
			
	</simple-method>
	
	<!--======================= DISAPPROVE TRAINING =================================== -->
	
		<simple-method method-name="disapproveTraining"
		short-description="Update an existing Budget">
		<entity-one entity-name="PatyInTrainingEvent" value-field="lookedUpValue" />
		<set field="lookedUpValue.approvalStatus" value="DISAPPROVED"/>
		<store-value value-field="lookedUpValue" />
		   <property-to-field resource="HumanResUiLabels"
			property="successTrainingDisapproval" field="successMessage" /> 
			
	</simple-method>
	
	
	<!--======================= STAFF WHO NEED TRAINING FOR HODS =================================== -->
	
	<simple-method method-name="hodAddStaffWithTrainingNeeds"
		short-description="Create a Party Qualification Group">
		<make-value entity-name="StaffWhoNeedTraining" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="StaffWhoNeedTraining" field="needId"/>
		<set from-field="needId" field="newEntity.needId" />
		
		
		<entity-condition list="staffs" entity-name="StaffInPerfReviewGroup">
		<condition-list>
		<condition-expr field-name="partyId" from-field="parameters.partyId"/>
		</condition-list>
		</entity-condition>
		<iterate entry="singleStaff" list="staffs">
		<entity-one entity-name="StaffInPerfReviewGroup" value-field="lookedUpValue2">
        <field-map field-name="StaffInPerfReviewGroupId" from-field="singleStaff.StaffInPerfReviewGroupId"/>
        </entity-one>
        <!-- set field="lookedUpValue2.trainingStage" value="DONE"/ -->
        <store-value value-field="lookedUpValue2"/>
		</iterate>
		
		<entity-condition list="staffwithneeds" entity-name="StaffWhoNeedTraining">
		<condition-list>
		<condition-expr field-name="partyId" from-field="parameters.partyId"/>
		</condition-list>
		</entity-condition>
		<iterate entry="singlestaffwithneeds" list="staffwithneeds">
		<entity-one entity-name="StaffWhoNeedTraining" value-field="lookedUpValue3">
        <field-map field-name="needId" from-field="singlestaffwithneeds.needId"/>
        </entity-one>
        <set field="lookedUpValue3.trainingStageFromHod" value="FORWARDED"/>
        <store-value value-field="lookedUpValue3"/>
		</iterate>
		
		
		<entity-one value-field="staff" entity-name="Person">
		<field-map field-name="partyId" from-field="parameters.partyId"/>
		</entity-one>
		
		<set field="newEntity.departmentId" from-field="staff.departmentId"/>
		<set field="newEntity.branchId" from-field="staff.branchId"/>
		
		<create-value value-field="newEntity" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
	</simple-method>
	
	
	<!--======================= STAFF DONT NEED TRAINING FOR HODS =================================== -->
	<simple-method method-name="staffDontNeedTraining"
		short-description="Create a Party Qualification Group">
		
		<entity-condition list="staffs" entity-name="StaffInPerfReviewGroup">
		<condition-list>
		<condition-expr field-name="partyId" from-field="parameters.partyId"/>
		</condition-list>
		</entity-condition>
		<iterate entry="singleStaff" list="staffs">
		<entity-one entity-name="StaffInPerfReviewGroup" value-field="lookedUpValue2">
        <field-map field-name="StaffInPerfReviewGroupId" from-field="singleStaff.StaffInPerfReviewGroupId"/>
        </entity-one>
        <set field="lookedUpValue2.trainingStage" value="DONE"/>
        <store-value value-field="lookedUpValue2"/>
		</iterate>
		
		<property-to-field resource="HumanResUiLabels"
		property="UpdateSuccess" field="successMessage" />
		
		
	</simple-method>
	
	
	
	 <!--======================= LEAVE WORKFLOW SETUP =================================== -->
                     
	<simple-method method-name="createWorkflow"
		short-description="Create File location">
		<make-value entity-name="LeaveWorkFlow" value-field="newEntity2" />
		<set-pk-fields map="parameters" value-field="newEntity2" />
		<set-nonpk-fields map="parameters" value-field="newEntity2" />
		<sequenced-id sequence-name="LeaveWorkFlow" field="leaveWorkFlowId" />
		<set from-field="leaveWorkFlowId" field="newEntity2.leaveWorkFlowId" /> 
		
		<set field="leaveWorkflow" from-field="newEntity2.name"/>
		<set field="validWorkflow" value="${bsh:org.ofbiz.humanres.LeaveServices.validateWorkflowName(leaveWorkflow);}"/>
		
		
		<if>
			<condition>
						<if-compare operator="equals" value="INVALID" field="validWorkflow"></if-compare>
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels" 
						property="doubleWorkflowError" />
				</add-error>
				<check-errors />
			</then>
			
			<else>
			    <create-value value-field="newEntity2" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
			</else>
		</if>
			  
			</simple-method>
			
			<simple-method method-name="updateWorkflow"
		short-description="Update an existing Budget">
		<entity-one entity-name="LeaveWorkFlow" value-field="lookedUpValue" />
		<set-nonpk-fields map="parameters" value-field="lookedUpValue" />
		<set-pk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		   <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" /> 
			
	</simple-method>
		
			
			
			<simple-method method-name="deleteWorkflow"
		short-description="Remove an file type">
		<set field="leaveWorkFlowId" from-field="parameters.leaveWorkFlowId" />
		<entity-one entity-name="LeaveWorkFlow" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	
	
	 <!--======================= LEAVE WORKFLOW RESPONSIBLE STAFF SETUP =================================== -->
                     
	<simple-method method-name="createWorkflowResponsibleStaff"
		short-description="Create File location">
		<make-value entity-name="LeaveWorkFlowResponsibleStaff" value-field="newEntity2" />
		<set-pk-fields map="parameters" value-field="newEntity2" />
		<set-nonpk-fields map="parameters" value-field="newEntity2" />
		<sequenced-id sequence-name="LeaveWorkFlowResponsibleStaff" field="leaveWorkFlowResponsibleStaffId" />
		<set from-field="leaveWorkFlowResponsibleStaffId" field="newEntity2.leaveWorkFlowResponsibleStaffId" />
		
		<set field="staff" from-field="newEntity2.responsibleEmployee"/>
		<entity-one value-field="staffNames" entity-name="Person">
		<field-map field-name="partyId" from-field="staff"/>
		</entity-one> 
		<set field="newEntity2.fName" from-field="staffNames.firstName"/>
		<set field="newEntity2.sName" from-field="staffNames.lastName"/>
		<create-value value-field="newEntity2"/>
			  
			</simple-method>
			
			<simple-method method-name="updateWorkflowResponsibleStaff"
		short-description="Update an existing Budget">
		<entity-one entity-name="LeaveWorkFlowResponsibleStaff" value-field="lookedUpValue" />
		<set-nonpk-fields map="parameters" value-field="lookedUpValue" />
		<set-pk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		   <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" /> 
			
	</simple-method>
		
			
			
			<simple-method method-name="deleteWorkflowResponsibleStaff"
		short-description="Remove an file type">
		<set field="leaveWorkFlowResponsibleStaffId" from-field="parameters.leaveWorkFlowResponsibleStaffId" />
		<entity-one entity-name="LeaveWorkFlowResponsibleStaff" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	<!--======================= LEAVE WORKFLOW  STAFF MAPPING SETUP =================================== -->
                     
	<simple-method method-name="createWorkflowStaffMapping"
		short-description="Create File location">
		<make-value entity-name="LeaveWorkFlowStaffMapping" value-field="newEntity2" />
		<set-pk-fields map="parameters" value-field="newEntity2" />
		<set-nonpk-fields map="parameters" value-field="newEntity2" />
		<sequenced-id sequence-name="LeaveWorkFlowStaffMapping" field="leaveWorkFlowStaffMappingId" />
		<set from-field="leaveWorkFlowStaffMappingId" field="newEntity2.leaveWorkFlowStaffMappingId" /> 
		
			
		<set field="leaveWorkflow" from-field="newEntity2.partyId"/>
		<set field="validStaff" value="${bsh:org.ofbiz.humanres.LeaveServices.validateWorkflowStaffMapping(leaveWorkflow);}"/>
		
		
		<if>
			<condition>
						<if-compare operator="equals" value="INVALID" field="validStaff"></if-compare>
			</condition>
			<then>
				<add-error>
					<fail-property resource="HumanResUiLabels" 
						property="doubleStaffWorkflowError" />
				</add-error>
				<check-errors />
			</then>
			
			<else>
			    <create-value value-field="newEntity2" />
		<property-to-field resource="HumanResUiLabels"
			property="CreateSuccess" field="successMessage" />
			</else>
		</if>
			  
			</simple-method>
			
			<simple-method method-name="updateWorkflowStaffMapping"
		short-description="Update an existing Budget">
		<entity-one entity-name="LeaveWorkFlowStaffMapping" value-field="lookedUpValue" />
		<set-nonpk-fields map="parameters" value-field="lookedUpValue" />
		<set-pk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />
		   <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" /> 
			
	</simple-method>
		
			
			
			<simple-method method-name="deleteWorkflowStaffMapping"
		short-description="Remove an file type">
		<set field="leaveWorkFlowStaffMappingId" from-field="parameters.leaveWorkFlowStaffMappingId" />
		<entity-one entity-name="LeaveWorkFlowStaffMapping" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	
	<!-- ========================= SUBMIT LEAVE APPLICATION ============================ -->
	
	<simple-method method-name="SubmitApplication"
		short-description="Update an existing Budget">
		<entity-one entity-name="EmplLeave" value-field="lookedUpValue" />
		<set-nonpk-fields map="parameters" value-field="lookedUpValue" />
		<set-pk-fields value-field="lookedUpValue" map="parameters" />
		
		<set field="leave" from-field="parameters.leaveId"/>
		<set field="lookedUpValue.responsibleEmployee" value="${bsh:org.ofbiz.humanres.LeaveServices.getFirstWorkflowApprover(leave);}"/>
		<store-value value-field="lookedUpValue" />
		
		<call-simple-method method-name="firstApproverEmailInformation" scope="inline"></call-simple-method>
		   <property-to-field resource="HumanResUiLabels"
			property="UpdateSuccess" field="successMessage" /> 
			
	</simple-method>
	
	
	<simple-method method-name="firstApproverEmailInformation">
		<make-value entity-name="StaffScheduledMail" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="StaffScheduledMail" field="msgId" />
		<set from-field="msgId" field="newEntity.msgId" />
		
		<entity-one value-field="staff" entity-name="Person">
		<field-map field-name="partyId" from-field="lookedUpValue.partyId"/>
		</entity-one>
		
		 <set field="newEntity.partyId" from-field="lookedUpValue.responsibleEmployee"/> 
		<set field="newEntity.body" value="Leave Application has been Send to you for approval by :${staff.firstName} ${staff.lastName} Payroll : ${staff.employeeNumber}" />
		 <set field="newEntity.subject" value="LEAVE APPROVAL"/>
		<set field="newEntity.sendStatus" value="NOTSEND" />
		<create-value value-field="newEntity" />
	</simple-method>
		
	<simple-method method-name="createEmployeeLostItems" short-description="Save emplloyee lost items">
	<make-value value-field="newEntity" entity-name="EmployeeLostItems"/>
	<set-pk-fields value-field="newEntity" map="parameters"/>
	<set-nonpk-fields value-field="newEntity" map="parameters"/>
	<sequenced-id sequence-name="EmployeeLostItems" field="lostItemId"/>
	<set field="newEntity.lostItemId" from-field="lostItemId"/>
	<create-value value-field="newEntity"/>
	<property-to-field resource="HumanResUiLabels" property="Record Successfully Saved" field="successMessage"/>
	</simple-method>	
	
	<simple-method method-name="updateEmployeeLostItems">
	<entity-one value-field="lookedUpValue" entity-name="EmployeeLostItems"></entity-one>
	<set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
	<store-value value-field="lookedUpValue"/>
	<property-to-field resource="HumanResUiLabels" property="Record Successfully Updated" field="successMessage"/>
	</simple-method>
	
	<simple-method method-name="deleteEmployeeLostItems">
	<entity-one value-field="lookedUpValue" entity-name="EmployeeLostItems"></entity-one>
	<remove-value value-field="lookedUpValue"/>
	<property-to-field resource="HumanResUiLabels" property="Record Successfully Deleted" field="successMessage"/>
	</simple-method>
	
	<!--SEPARATION MODULE  -->
	
	<simple-method method-name="SeparationModule" short-description="Calculate And Save to The Database">
	<make-value value-field="newEntity" entity-name="EmplSeparationProcessing"/>
	<set-pk-fields value-field="newEntity" map="parameters"/>
	<set-nonpk-fields value-field="newEntity" map="parameters"/>
	<now-timestamp field="today"/>
	
	<entity-one value-field="FromseparationApplication" entity-name="SeparationApplication">
	<field-map field-name="separationApplicationId" value="${newEntity.separationApplicationId}"/>
	</entity-one>
	
	<entity-one value-field="personEmp" entity-name="Person">
	<field-map field-name="partyId" value="${newEntity.partyId}"/>
	</entity-one>
	
	<set field="appointmentDate" value="personEmp.appointmentdate"/>
	
	<set field="theCreatedDate" value="${FromseparationApplication.createdDate}"/>
	<set field="newEntity.partyId" value="${FromseparationApplication.partyId}"/>
	<set field="effectivedate" value="${FromseparationApplication.effectiveDate}"/>
	
	<set field="party" from-field="newEntity.partyId"/>
	<set field="thecreatedDDate" from-field="theCreatedDate"/>
	<set field="DispEffective" from-field="effectivedate"/>
	
	<set field="leaveBal" value="${bsh:org.ofbiz.humanres.Separation.getLeaveBalances(party)}"/>
	<set field="leaveBalDisp" from-field="leaveBal"/>
	
    <set field="diffDays" value="${bsh:org.ofbiz.humanres.Separation.calculateTheCalendarDaysBetweenDates(thecreatedDDate,DispEffective)}"/>
    <set field="DistDatsDiff"/>
    
    <set field="dateFormat1" value="yyyy-MM-dd"/>
    <set field="dateFormat2" value="yyyy-MM-dd"/>
    <set field="yearCreated" from-field="theCreatedDate" type="String"/>
    <set field="yearseparate" from-field="effectivedate" type="String"/>
    
    <set field="basicSalary" value="${bsh:org.ofbiz.humanres.Separation.employeeBasicSalaryKsh(party)}"/> 
    <set field="empLoans" value="${bsh:org.ofbiz.humanres.Separation.employeeLoans(party)}"/>
    <set field="leaveAllowance" value="${bsh:org.ofbiz.humanres.Separation.AmountDueToLeave(diffDays,leaveBalDisp,basicSalary)}"/> 
	<set field="newEntity.allowanceByLeave" from-field="leaveAllowance" type="String"/>
	<set field="yearsWorkedd" value="${bsh:org.ofbiz.humanres.Separation.getNumberOfYearsBetweenWK(yearCreated,dateFormat1,yearseparate,dateFormat2)}"/>
	
	<log message="#######PARTY############### ${party} ############" level="info"/>
	<log message="#######CREATED DATE######## ${thecreatedDDate} ############" level="info"/>
	<log message="####EFFECTIVE  DATE######## ${DispEffective} ############" level="info"/>
	<log message="####DAYS DIFFERENCE######## ${diffDays} ############" level="info"/>
	<log message="##BASIC SALARY############# ${basicSalary} ############" level="info"/>
	<log message="##EMPL LOANS############# ${empLoans} ############" level="info"/>
	<log message="##LEAVE ALLOWANCE#### ${leaveAllowance} ############" level="info"/>
	<log message="##Years Worked#### ${yearsWorkedd} ############" level="info"/>
	
	 <set field="lostAmount" value="${bsh:org.ofbiz.humanres.Separation.EmployeeLostItemsAmount(party)}"/>
	<set field="totalAmount" from-field="lostAmount" /> 
	

	<log message="##############LEAVE BALANCE####### ${leaveBalDisp} ############" level="info"/>
	
	<log message="##############TOTAL LOST####### ${totalAmount} ############" level="info"/>
	<sequenced-id sequence-name="EmplSeparationProcessing" field="emplSeparationProcessingId" />
	<set field="newEntity.emplSeparationProcessingId" from="emplSeparationProcessingId"/>
	
	<create-value value-field="newEntity"/>
	<property-to-field resource="HumanResUiLabels" property="Saved" field="successMessage"/>
	
	</simple-method>
	
	
	<!-- SEPARATION DETAIL CALCULATION -->
	
	
	
	
	<simple-method method-name="separationDetailCalculation">
	<make-value value-field="newEntity" entity-name="SeparationDetail"/>
	<set-pk-fields value-field="newEntity" map="parameters"/>
	<set-nonpk-fields value-field="newEntity" map="parameters"/>
	<now-date-to-env field="dayLeft"/> 
	
	<entity-one value-field="FromseparationApplication" entity-name="SeparationApplication">
	<field-map field-name="separationApplicationId" value="${newEntity.separationApplicationId}"/>
	</entity-one>
	
	<entity-one value-field="FromSeparationType" entity-name="SeparationTypes">
	<field-map field-name="separationTypesId" value="${newEntity.separationTypesId}"/>
	</entity-one>
	
	<entity-one value-field="FromTypesOfSeparation" entity-name="SeparationTypes">
	<field-map field-name="separationTypesId" value="${newEntity.separationApplicationId}"/>
	</entity-one>
	
	<entity-one value-field="person" entity-name="Person">
	<field-map field-name="partyId" value="${newEntity.partyId}"/>
	</entity-one>
	<set field="appointmentDate" value="${person.appointmentdate}" />
	
	
	<set field="noticePeriod" value="${FromTypesOfSeparation.noticePeriod}"/>
	<set field="goldenHandShake" value="${FromTypesOfSeparation.goldenHandShake}"/>
	<set field="transportAllowance" value="${FromTypesOfSeparation.transportAllowance}"/>
	<set field="servicePay" value="${FromTypesOfSeparation.servicePay}"/>
	<set field="yearWorkedMultiple" value="${FromTypesOfSeparation.yearsWorked}"/>
	
	<set field="createdDate" value="${FromseparationApplication.createdDate}"/>
	<set field="effectiveDate" value="${FromseparationApplication.effectiveDate}"/>
	<set field="party" value="${FromseparationApplication.partyId}"/>
	<set field="separationTypeId" value="${FromseparationApplication.separationTypesId}"/>
	<set field="separationApplicationId" value="${FromseparationApplication.separationApplicationId}"/>
	
	<set field="theCreatedDate" from-field="createdDate"/>
	<set field="theEffectiveDate" from-field="effectiveDate"/>
	
	<set field="appointmentDATE" value="${bsh:org.ofbiz.humanres.Separation.getAppointmentDate(party)}"/>
	<set field="appointmentdate" from-field="appointmentDATE" type="date"/>
	
	<set field="dateFormat1" value="yyyy-MM-dd"/>
    <set field="dateFormat2" value="yyyy-MM-dd"/>
    <set field="yearCreated" from-field="appointmentDATE" type="String"/>
    <set field="yearseparate" from-field="effectiveDate" type="String"/>
	
	
	<set field="noticeP" value="${bsh:org.ofbiz.humanres.Separation.getNoticePeriod(separationTypeId)}"/>
	<set field="golden" value="${bsh:org.ofbiz.humanres.Separation.getGoldenHandShake(separationTypeId)}"/>
	<set field="transportAll" value="${bsh:org.ofbiz.humanres.Separation.transportAllowance(separationTypeId)}"/>
	<set field="noticePreiod" from-field="noticeP" type="String"/>
	
	<set field="daysDifference" value="${bsh:org.ofbiz.humanres.Separation.calculateTheCalendarDaysBetweenDates(theCreatedDate,theEffectiveDate)}"/>
	<set field="leaveBalance" value="${bsh:org.ofbiz.humanres.Separation.getLeaveBalances(party)}"/>
	<set field="employeeBasicSalary" value="${bsh:org.ofbiz.humanres.Separation.employeeBasicSalaryKsh(party)}"/>
	<set field="employeeLoans" value="${bsh:org.ofbiz.humanres.Separation.employeeLoans(party)}"/>
	<set field="yearsWorked" value="${bsh:org.ofbiz.humanres.Separation.getNumberOfYearsBetweenWK(yearCreated,dateFormat1,yearseparate,dateFormat2)}"/>
    <set field="servicePaidEmpl" value="${bsh:org.ofbiz.humanres.Separation.servicePayAmount(separationTypeId,employeeBasicSalary,yearsWorked)}"/> 
	<set field="lostAmount" value="${bsh:org.ofbiz.humanres.Separation.EmployeeLostItemsAmount(party)}"/>
	<set field="leaveAllowance" value="${bsh:org.ofbiz.humanres.Separation.leaveAllowanceAmount(separationTypeId,daysDifference,leaveBalance,employeeBasicSalary)}"/>
	<set field="grossTotal" value="${bsh:org.ofbiz.humanres.Separation.grossTotal(employeeBasicSalary,leaveAllowance,servicePaidEmpl,transportAll,golden)}"/>
    <set field="payeAmt" value="${bsh:org.ofbiz.humanres.Separation.amountPAYE(grossTotal)}"/>
    <set field="amtAfterPaye" value="${bsh:org.ofbiz.humanres.Separation.totalNetAmount(grossTotal,payeAmt)}"/> 
    <set field="finalAmount" value="${bsh:org.ofbiz.humanres.Separation.finalTotal(amtAfterPaye,lostAmount,employeeLoans)}"/> 
 
    
    <log message="###GROSS***#####${grossTotal}" level="info"/>
    <log message="###PAYE#####${payeAmt}" level="info"/>
    <log message="###AFTER PAYE#####${amtAfterPaye}" level="info"/>
     <log message="###FINAL AMOUNT #####${finalAmount}" level="info"/>
	<log message="###SEPARATION_ID***#####${separationTypeId}" level="info"/>
	<log message="###PARTY_ID***########${party}" level="info"/>
	<log message="#NOTICE_PERIOD***#######${noticePreiod}" level="info"/>
	<log message="#GOLDEN_HANDSHAKE***####${golden}" level="info"/>
	<log message="#TRANSPORT_ALLOWANCE***#${transportAll}" level="info"/>
	<log message="##SERVICE_PAY***########${servicePaidEmpl}" level="info"/>
	<log message="##YEARS_WORKED***#######${yearsWorked}" level="info"/>
	<log message="##CREATED_DATE***#######${createdDate}" level="info"/>
	<log message="##EFFECTIVE_DATE***####${effectiveDate}" level="info"/>
	<log message="##DAYS_DIFFERENCE**####${daysDifference}" level="info"/>
	<log message="##LEAVE_BALANCE***####${leaveBalance}" level="info"/>
	<log message="##LEAVE_ALLOWANCE***####${leaveAllowance}" level="info"/>
	<log message="##EMP_SALARY***########${employeeBasicSalary}" level="info"/>
	<log message="##EMP_LOANS***########${employeeLoans}" level="info"/>
	<log message="##APPOINTMENT_DATE**###${appointmentDATE}" level="info"/>
	
	<set field="newEntity.separationApplicationId"  from-field="separationApplicationId"/>
	<set field="newEntity.separationTypesId" from-field="separationTypeId"/>
	<set field="newEntity.partyId" from-field="party"/>
	<set field="newEntity.salary" from-field="employeeBasicSalary"/>
	<set field="newEntity.leaveAllowance" from-field="leaveAllowance"/>
	<set field="newEntity.total" from-field="grossTotal"/>
	<!-- <set field="newEntity.lienToNotice"/> -->
	<set field="newEntity.PAYE" from-field="payeAmt"/>
    <set field="newEntity.staffLoans" from-field="employeeLoans"/> 
    <set field="newEntity.lostItemAmount" from-field="lostAmount"/>
    
	<!-- <set field="newEntity.chaiSaccoLoans" from-field=""/> -->
	<set field="newEntity.amountPayableToChai" from-field="finalAmount"/>
	<set field="newEntity.goldenHandShake" from-field="golden"/>
    <set field="newEntity.transportAllowance" from-field="transportAll"/>
    <set field="newEntity.servicePay" from-field="servicePaidEmpl"/>
    <set field="newEntity.noticePeriod" from-field="daysDifference" type="Long"/>
   <!--  <set field="newEntity.appointmentDate" from="appointmentdate"/> -->
    <set field="newEntity.dayLeftSaccoActivities" from-field="dayLeft"/> 
    <set field="newEntity.status" value="Processed"/>
    <set field="newEntity.forwardStatus" value="NOT FORWARDED"/>
    	
    <sequenced-id sequence-name="SeparationDetail" field="separationDetailId"/>
    <set field="newEntity.separationDetailId" from-field="separationDetailId"/>
    <create-value value-field="newEntity"/>
    
     <entity-one entity-name="SeparationApplication" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <set field="lookedUpValue.processStatus" value="PROCESSED"/>
        <store-value value-field="lookedUpValue"/> 	
    
    <property-to-field resource="HumanResUiLabels" property="Successfully Processed" field="successMessage"/>
    	
	</simple-method>
	
	
	
	<simple-method method-name="undoLink">
	 <entity-one entity-name="SeparationDetail" value-field="lookedUpValue"/>
     <remove-value value-field="lookedUpValue"/> 	
    <property-to-field resource="HumanResUiLabels" property="Process Successfully Undone" field="successMessage"/>
	</simple-method>
	
	
	
	
	
	
	
	
	<!-- Save Separation Types -->
	
	<simple-method method-name="createseparationApplicationTypes">
	<make-value value-field="newEntity" entity-name="SeparationTypes"/>
	<set-pk-fields value-field="newEntity" map="parameters"/>
	<set-nonpk-fields value-field="newEntity" map="parameters"/>
	<sequenced-id sequence-name="SeparationTypes" field="separationTypesId"/>
	<set field="newEntity.separationTypesId" from="separationTypesId"/>
	<create-value value-field="newEntity"/>
	<property-to-field resource="HumanResUiLabels" property="Separation Type Successfully Saved" field="successMessage"/>
	</simple-method>
	
	<simple-method method-name="updateSeparationApplicationTypes">
	<entity-one value-field="lookedUpValue" entity-name="SeparationTypes"></entity-one>
	<set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
	<store-value value-field="lookedUpValue"/>
	<property-to-field resource="HumanResUiLabels" property="Successfully Updated" field="successMessage"/>
	</simple-method>
	
	<simple-method method-name="deleteSeparationApplicationTypes">
	<entity-one value-field="lookedUpValue" entity-name="SeparationTypes"></entity-one>
	<remove-value value-field="lookedUpValue"/>
	<property-to-field resource="HumanResUiLabels" property="Record Deleted" field="successMessage"/>
	</simple-method>
	
	
	
	<simple-method method-name="createLeaveStaff" short-description="Create Leave Staff">
		<make-value entity-name="LeaveStaff" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="LeaveStaff" field="staffId" />
		<set from-field="staffId" field="newEntity.staffId" />

		<entity-one value-field="bran" entity-name="Person">
			<field-map field-name="partyId" from-field="newEntity.partyId"/>
			</entity-one>

		<set from-field="bran.branchId" field="newEntity.branchId" />

	   <create-value value-field="newEntity" />
      <property-to-field resource="HumanResUiLabels"
	  property="CreateSuccess" field="successMessage" />

			</simple-method>
			
			<simple-method method-name="deleteLeaveStaff"
		short-description="Remove A Leave Staff">
		<set field="staffId" from-field="parameters.staffId" />
		<entity-one entity-name="LeaveStaff" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
		<property-to-field resource="HumanResUiLabels"
			property="DeleteSuccess" field="successMessage" />
	</simple-method>
	
	
	
	
	
	</simple-methods>
	
	
	
