<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor
	license agreements. See the NOTICE file distributed with this work for additional
	information regarding copyright ownership. The ASF licenses this file to
	you under the Apache License, Version 2.0 (the "License"); you may not use
	this file except in compliance with the License. You may obtain a copy of
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required
	by applicable law or agreed to in writing, software distributed under the
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
	OF ANY KIND, either express or implied. See the License for the specific
	language governing permissions and limitations under the License. -->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods-v2.xsd">

	<!-- file types-->



	<simple-method method-name="createfiletype"
		short-description="Create File Type">
		<make-value entity-name="RegistryDocumentType" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="RegistryDocumentType" field="DocumentTypeId" />
		
		<if-empty field="retentionPeriod">
		<set field="retentionPeriod" value="PERMANENT"/>
		</if-empty>

		<set from-field="DocumentTypeId" field="newEntity.DocumentTypeId" />
		<create-value value-field="newEntity" />
	</simple-method>
	
	
	<simple-method method-name="createfileActionTypes"
		short-description="Create File Actions">
		<make-value entity-name="RegistryFileActionTypes" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="RegistryFileActionTypes" field="fileActionTypeId" />

		<set from-field="fileActionTypeId" field="newEntity.fileActionTypeId" />
		<create-value value-field="newEntity" />
	</simple-method>
	
	<simple-method method-name="deletefileActionTypes"
		short-description="Remove an file type">
		<set field="fileActionTypeId" from-field="parameters.fileActionTypeId" />
		<entity-one entity-name="RegistryFileActionTypes" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
	</simple-method>
	
	<simple-method method-name="updatefileActionTypes"
		short-description="Update an existing action">
		<entity-one entity-name="RegistryFileActionTypes" value-field="lookedUpValue" />
		<set-nonpk-fields map="parameters" value-field="lookedUpValue" />
		<set-pk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />

	</simple-method>
	


	<simple-method method-name="updatefileType"
		short-description="Update an existing Budget">
		<entity-one entity-name="RegistryDocumentType" value-field="lookedUpValue" />
		<set-nonpk-fields map="parameters" value-field="lookedUpValue" />
		<set-pk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />

	</simple-method>

	<simple-method method-name="deletefileType"
		short-description="Remove an file type">
		<set field="DocumentTypeId" from-field="parameters.DocumentTypeId" />
		<entity-one entity-name="RegistryDocumentType" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
	</simple-method>

<!-- files -->
	<simple-method method-name="creatememberFiles"
		short-description="Create File Book">
		<now-timestamp field="nowTimestamp"/>
		<make-value entity-name="RegistryFiles" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />

		<entity-one value-field="member" entity-name="Member">
			<field-map field-name="partyId" value="${newEntity.partyId}"/>
		</entity-one>
		
		<set value="FNO-${newEntity.partyId}-${member.firstName}" field="newEntity.folioNo" />
		<set value="REGISTRY" field="newEntity.fileLocation" />
		<set value="AVAILABLE" field="newEntity.status" />
		
		<set value="${member.payrollNumber}" field="newEntity.payrollNumber" />
		<set value="${member.memberNumber}" field="newEntity.memberNumber" />
		<set value="${member.firstName}" field="newEntity.firstName" />
		<set value="${member.lastName}" field="newEntity.lastName" />
		
		<set value="${userLogin.partyId}" field="newEntity.creator" />
		<set from-field="nowTimestamp" field="newEntity.creationDate"/>
		<create-value value-field="newEntity" />
	</simple-method>

	<simple-method method-name="updateFiles"
		short-description="Update an existing Budget">
		<entity-one entity-name="RegistryFiles" value-field="lookedUpValue" />
		<set-nonpk-fields map="parameters" value-field="lookedUpValue" />
		<set-pk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />

	</simple-method>

	<!-- ==========================FILE REQUEST================================== -->
	
	<simple-method method-name="requestfiles" short-description="request File ">
		 <call-simple-method method-name="saveRequestAction" scope="inline"></call-simple-method>
		 <call-simple-method method-name="saveRequestedFile" scope="inline"></call-simple-method>
		  <call-simple-method method-name="saveRequestActionToLogs" scope="inline"></call-simple-method>
		 
		 <set field="partyId" value="${newEntity.partyId}"/>
		 
		 
		 <entity-one entity-name="RegistryFiles" value-field="registryFile">
		 	<field-map field-name="partyId" from-field="partyId"/>
		 </entity-one>

		 <!-- Get status -->
		 <set value="${userLogin.partyId}" field="registryFile.actionBy" />
		 <set field="registryFile.status" value="REQUESTED"/>
		<store-value value-field="registryFile" />
	</simple-method>
	
	<simple-method method-name="saveRequestAction">
		<now-timestamp field="nowTimestamp"/>
		<make-value entity-name="RegistryFileActions" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="RegistryFileActions" field="actionId" />
		<set from-field="actionId" field="newEntity.actionId" />
		<set value="${userLogin.partyId}" field="newEntity.actionBy" />
		<set field="newEntity.actionDate" from-field="nowTimestamp" />
		<set field="partyId" from-field="parameters.partyId" />
		<set field="newEntity.fileActionTypeId" value="Request"/>
		
		<create-value value-field="newEntity" />
	</simple-method>
	<simple-method method-name="saveRequestActionToLogs">
		<now-timestamp field="nowTimestamp"/>
		<make-value entity-name="RegistryFileLogs" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="RegistryFileLogs" field="logId" />
		<set from-field="logId" field="newEntity.logId" />
		<set value="${userLogin.partyId}" field="newEntity.actionBy" />
		<set field="newEntity.actionDate" from-field="nowTimestamp" />
		<set field="partyId" from-field="parameters.partyId" />
		<set field="newEntity.fileActionTypeId" value="Request"/>
		<set field="newEntity.currentPossesser" value="REGISTRY" />
		<set field="newEntity.nextPossesser" value="${userLogin.partyId}" />
		
		<entity-one entity-name="RegistryFiles" value-field="reg">
		 	<field-map field-name="partyId" from-field="partyId"/>
		 </entity-one>
		
		
		<set field="newEntity.folioNo" from-field="reg.folioNo" />
		<create-value value-field="newEntity" />
	</simple-method>
	
	<simple-method method-name="saveRequestedFile">
		<now-timestamp field="nowTimestamp"/>
		<make-value entity-name="RegistryRequestedFiles" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		
		<entity-one entity-name="RegistryFiles" value-field="reg">
		 	<field-map field-name="partyId" from-field="partyId"/>
		 </entity-one>
		
		<set value="${userLogin.partyId}" field="newEntity.actionBy" />
		<set field="newEntity.creationDate" from-field="nowTimestamp" />
		<set field="partyId" from-field="parameters.partyId" />
		<set field="newEntity.folioNo" from-field="reg.folioNo" />
		<set field="newEntity.Reason" from-field="lookedUpValue.Reason" />
		
		<create-value value-field="newEntity" />
	</simple-method>
	
	<!-- ==========================FILE ISSUE================================== -->
	
	<simple-method method-name="issuefiles" short-description="request File ">
		 <call-simple-method method-name="saveIssueAction" scope="inline"></call-simple-method>
		 <call-simple-method method-name="saveIssuedFile" scope="inline"></call-simple-method>
		  <call-simple-method method-name="saveIssueActionToLogs" scope="inline"></call-simple-method>
		  <call-simple-method method-name="deletefileFromRequested" scope="inline"></call-simple-method>
		 
		 <set field="partyId" value="${newEntity.partyId}"/>
		 
		 
		 <entity-one entity-name="RegistryFiles" value-field="registryFile">
		 	<field-map field-name="partyId" from-field="partyId"/>
		 </entity-one>

		 <!-- Get status -->
		 <set value="${userLogin.partyId}" field="registryFile.actionBy" />
		 <set field="registryFile.status" value="ISSUED"/>
		  <set field="registryFile.receiptStatus" value="NOTRECEIVED"/>
		  <set field="registryFile.currentPossesser" from-field="parameters.actionBy" />
		<store-value value-field="registryFile" />
	</simple-method>
	
	<simple-method method-name="deletefileFromRequested"
		short-description="Remove an file">
		<set field="partyId" from-field="parameters.partyId" />
		<entity-one entity-name="RegistryRequestedFiles" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
	</simple-method>
	
	<simple-method method-name="saveIssueAction">
		<now-timestamp field="nowTimestamp"/>
		<make-value entity-name="RegistryFileActions" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="RegistryFileActions" field="actionId" />
		<set from-field="actionId" field="newEntity.actionId" />
		<set value="${userLogin.partyId}" field="newEntity.actionBy" />
		<set field="newEntity.actionDate" from-field="nowTimestamp" />
		<set field="partyId" from-field="parameters.partyId" />
		<set field="newEntity.fileActionTypeId" value="File Issue"/>
		
		<create-value value-field="newEntity" />
	</simple-method>
	<simple-method method-name="saveIssueActionToLogs">
		<now-timestamp field="nowTimestamp"/>
		<make-value entity-name="RegistryFileLogs" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="RegistryFileLogs" field="logId" />
		<set from-field="logId" field="newEntity.logId" />
		<set value="${userLogin.partyId}" field="newEntity.actionBy" />
		<set field="newEntity.actionDate" from-field="nowTimestamp" />
		<set field="partyId" from-field="parameters.partyId" />
		<set field="newEntity.fileActionTypeId" value="File Issue"/>
		<set field="newEntity.currentPossesser" from-field="parameters.actionBy" />
		<set field="newEntity.receiptStatus" value="NOT RECEIVED"/>
		
		<entity-one entity-name="RegistryFiles" value-field="reg">
		 	<field-map field-name="partyId" from-field="partyId"/>
		 </entity-one>
		
		
		<set field="newEntity.folioNo" from-field="reg.folioNo" />
		
		
		<create-value value-field="newEntity" />
	</simple-method>
	
	<simple-method method-name="saveIssuedFile">
		<now-timestamp field="nowTimestamp"/>
		<make-value entity-name="RegistryFilesInCirculation" value-field="newEntity"/>
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		
		<entity-one entity-name="RegistryFiles" value-field="reg">
		 	<field-map field-name="partyId" from-field="partyId"/>
		 </entity-one>
		 
		 <entity-one entity-name="RegistryRequestedFiles" value-field="reason">
		 	<field-map field-name="partyId" from-field="partyId"/>
		 </entity-one>
		
		<set from-field="parameters.actionBy"  field="newEntity.currentPossesser" />
		<set value="NOT RECEIVED" field="newEntity.recieptStatus" />
		<set field="newEntity.creationDate" from-field="nowTimestamp" />
		<set field="partyId" from-field="parameters.partyId"/>
		<set field="newEntity.folioNo" from-field="reg.folioNo" />
		<set field="newEntity.Reason" from-field="reason.Reason" />
		
		<create-value value-field="newEntity" />
	</simple-method>
	

<!-- ========================== RECEIVE FILE ================================== -->
	
	<simple-method method-name="recieveFiles" short-description="request File ">
	<log message="=====================PLEASE SHOW ${parameters}" level="info"/>
	<call-simple-method method-name="saveRecieveFileAction" scope="inline"></call-simple-method>
	<call-simple-method method-name="saveRecieveActionToLogs" scope="inline"></call-simple-method>
	
	<set field="party" from-field="parameters.partyId"/>
		
		 <entity-one entity-name="RegistryFiles" value-field="registryFile">
		 	<field-map field-name="partyId" from-field="partyId"/>
		 </entity-one>

		 <set value="${userLogin.partyId}" field="registryFile.actionBy" />
		
		 <set field="registryFile.receiptStatus" value="RECEIVED"/>
		<store-value value-field="registryFile"/>
	</simple-method>
	
	<simple-method method-name="saveRecieveFileAction">
		<now-timestamp field="nowTimestamp"/>
		<make-value entity-name="RegistryFileActions" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="RegistryFileActions" field="actionId" />
		<set from-field="actionId" field="newEntity.actionId" />
		<set value="${userLogin.partyId}" field="newEntity.actionBy" />
		<set field="newEntity.actionDate" from-field="nowTimestamp" />
		<set field="partyId" from-field="parameters.partyId" />
		<set field="newEntity.fileActionTypeId" value="Receive File"/>
		
		
		
		<create-value value-field="newEntity" />
		
	</simple-method>
	
	<simple-method method-name="saveRecieveActionToLogs">
		<now-timestamp field="nowTimestamp"/>
		<make-value entity-name="RegistryFileLogs" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="RegistryFileLogs" field="logId" />
		<set from-field="logId" field="newEntity.logId" />
		<set value="${userLogin.partyId}" field="newEntity.actionBy" />
		<set field="newEntity.actionDate" from-field="nowTimestamp" />
		<set field="partyId" from-field="parameters.partyId" />
		<set field="newEntity.fileActionTypeId" value="Receive File"/>
		<set field="newEntity.currentPossesser" value="${userLogin.partyId}" />
		<set field="newEntity.receiptStatus" value="RECEIVED"/>
		
		<entity-one entity-name="RegistryFiles" value-field="reg">
		 	<field-map field-name="partyId" from-field="partyId"/>
		 </entity-one>
		
		
		<set field="newEntity.folioNo" from-field="reg.folioNo" />
		
		
		<create-value value-field="newEntity" />
	</simple-method>
	
	
	<!-- ==========================FILE RELEASE================================== -->
	
	<simple-method method-name="releasefiles" short-description="request File ">
	<call-simple-method method-name="saveReleaseAction" scope="inline"></call-simple-method>
	<call-simple-method method-name="saveReleaseActionToLogs" scope="inline"></call-simple-method>
	<call-simple-method method-name="deletefileFromCirculation" scope="inline"></call-simple-method>
		 
		 <set field="partyId" value="${newEntity.partyId}"/>
		 
		 
		 <entity-one entity-name="RegistryFiles" value-field="registryFile">
		 	<field-map field-name="partyId" from-field="partyId"/>
		 </entity-one>

		 <!-- Get status -->
		 <set value="${userLogin.partyId}" field="registryFile.actionBy" />
		 <set field="registryFile.status" value="AVAILABLE"/>
		<store-value value-field="registryFile"/>
	</simple-method>
	
	<simple-method method-name="saveReleaseAction">
		<now-timestamp field="nowTimestamp"/>
		<make-value entity-name="RegistryFileActions" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="RegistryFileActions" field="actionId" />
		<set from-field="actionId" field="newEntity.actionId" />
		<set value="${userLogin.partyId}" field="newEntity.actionBy" />
		<set field="newEntity.actionDate" from-field="nowTimestamp" />
		<set field="partyId" from-field="parameters.partyId" />
		<set field="newEntity.fileActionTypeId" value="Release"/>
		
		<create-value value-field="newEntity" />
	</simple-method>
	
	<simple-method method-name="deletefileFromCirculation"
		short-description="Remove an file">
		<set field="partyId" from-field="parameters.partyId" />
		<entity-one entity-name="RegistryFilesInCirculation" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
	</simple-method>
	
	<simple-method method-name="saveReleaseActionToLogs">
		<now-timestamp field="nowTimestamp"/>
		<make-value entity-name="RegistryFileLogs" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="RegistryFileLogs" field="logId" />
		<set from-field="logId" field="newEntity.logId" />
		<set value="${userLogin.partyId}" field="newEntity.actionBy" />
		<set field="newEntity.actionDate" from-field="nowTimestamp" />
		<set field="partyId" from-field="parameters.partyId" />
		<set field="newEntity.fileActionTypeId" value="Release File"/>
		<set field="newEntity.currentPossesser" value="${userLogin.partyId}" />
		<set field="newEntity.nextPossesser" value="REGISTRY"/>
		<set field="newEntity.receiptStatus" value="RECEIVED"/>
		
		<entity-one entity-name="RegistryFiles" value-field="reg">
		 	<field-map field-name="partyId" from-field="partyId"/>
		 </entity-one>
		
		
		<set field="newEntity.folioNo" from-field="reg.folioNo" />
		
		
		<create-value value-field="newEntity" />
	</simple-method>
	
	
	 
	
	
  	<!-- update Budget Status -->
    <simple-method method-name="updateRegistryFileStatus" short-description="Update Registry File Status Status">

      <!--       <entity-one value-field="registryFile" entity-name="RegistryFiles">
                <field-map field-name="partyId" from-field="parameters.partyId"/>
            </entity-one>
            <if-not-empty field="registryFile">
				<entity-one entity-name="RegistryFiles" value-field="lookedUpValue"/>
				<set-nonpk-fields map="parameters" value-field="lookedUpValue"/>
				<set-pk-fields value-field="lookedUpValue" map="parameters"/>
				<store-value value-field="lookedUpValue"/>

				<field-to-result field="parameters.partyId" result-name="partyId"/>
            </if-not-empty> -->
        <make-value value-field="lookupPKMap" entity-name="RegistryFiles"/>
        <set-pk-fields map="parameters" value-field="lookupPKMap"/>
        <find-by-primary-key map="lookupPKMap" value-field="lookedUpValue"/>
        <set-nonpk-fields map="parameters" value-field="lookedUpValue"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>




	<!-- Service to update File after the request is successfull -->
	<simple-method method-name="updateFileStatus" short-description="Update a file's status">
        <make-value value-field="lookupPKMap" entity-name="RegistryFiles"/>
        <set-pk-fields map="parameters" value-field="lookupPKMap"/>
        <find-by-primary-key map="lookupPKMap" value-field="lookedUpValue"/>
        <set-nonpk-fields map="parameters" value-field="lookedUpValue"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

	

	<!-- documents -->
	<simple-method method-name="createDocument"
		short-description="Create File ">
		<make-value entity-name="RegistryDocuments" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="RegistryDocuments" field="documentId" />
		<set from-field="documentId" field="newEntity.documentId" />
		<create-value value-field="newEntity" />
	</simple-method>

<!-- locations -->
	<simple-method method-name="createfilelocation"
		short-description="Create File location">
		<make-value entity-name="RegistryFileLocations" value-field="newEntity" />
		<set-pk-fields map="parameters" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />
		<sequenced-id sequence-name="RegistryFileLocations" field="locationId" />

		<set from-field="locationId" field="newEntity.locationId" />
		<create-value value-field="newEntity" />
	</simple-method>

	<simple-method method-name="updatefilelocation"
		short-description="Update an existing Budget">
		<entity-one entity-name="RegistryFileLocations" value-field="lookedUpValue" />
		<set-nonpk-fields map="parameters" value-field="lookedUpValue" />
		<set-pk-fields value-field="lookedUpValue" map="parameters" />
		<store-value value-field="lookedUpValue" />

	</simple-method>

	<simple-method method-name="deletefilelocation"
		short-description="Remove an file type">
		<set field="locationId" from-field="parameters.locationId" />
		<entity-one entity-name="RegistryFileLocations" value-field="lookedUpValue" />
		<remove-value value-field="lookedUpValue" />
	</simple-method>






</simple-methods>
